{"expireTime":9007200878918956000,"key":"gatsby-plugin-mdx-entire-payload-c5e8a425c815f3a3056e3852d1cb4d29--undefined","val":{"mdast":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"在 Linux 的运维故障中，操作系统无法正常启动算是其中常见的一类，也是影响比较严重的一类。本篇主要介绍导致操作系统不能正常启动的其中两种情况：启动磁盘分区表损坏和 grub 损坏。","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":93,"offset":92},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":93,"offset":92},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"这两类情况根据基础环境的不同，又可以分为 ","position":{"start":{"line":3,"column":1,"offset":94},"end":{"line":3,"column":22,"offset":115},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"BIOS + MBR","position":{"start":{"line":3,"column":24,"offset":117},"end":{"line":3,"column":34,"offset":127},"indent":[]}}],"position":{"start":{"line":3,"column":22,"offset":115},"end":{"line":3,"column":36,"offset":129},"indent":[]}},{"type":"text","value":" 和 ","position":{"start":{"line":3,"column":36,"offset":129},"end":{"line":3,"column":39,"offset":132},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"UEFI + GPT","position":{"start":{"line":3,"column":41,"offset":134},"end":{"line":3,"column":51,"offset":144},"indent":[]}}],"position":{"start":{"line":3,"column":39,"offset":132},"end":{"line":3,"column":53,"offset":146},"indent":[]}},{"type":"text","value":" 。","position":{"start":{"line":3,"column":53,"offset":146},"end":{"line":3,"column":55,"offset":148},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":94},"end":{"line":3,"column":55,"offset":148},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"一、BIOS + MBR","position":{"start":{"line":5,"column":4,"offset":153},"end":{"line":5,"column":16,"offset":165},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":150},"end":{"line":5,"column":16,"offset":165},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"在 ","position":{"start":{"line":7,"column":1,"offset":167},"end":{"line":7,"column":3,"offset":169},"indent":[]}},{"type":"link","title":null,"url":"https://zh.wikipedia.org/wiki/BIOS","children":[{"type":"strong","children":[{"type":"text","value":"BIOS","position":{"start":{"line":7,"column":6,"offset":172},"end":{"line":7,"column":10,"offset":176},"indent":[]}}],"position":{"start":{"line":7,"column":4,"offset":170},"end":{"line":7,"column":12,"offset":178},"indent":[]}}],"position":{"start":{"line":7,"column":3,"offset":169},"end":{"line":7,"column":49,"offset":215},"indent":[]}},{"type":"text","value":" 的启动类型中，启动磁盘的分区信息中是存储在磁盘头的第一个扇区中，这个扇区通常叫作 ","position":{"start":{"line":7,"column":49,"offset":215},"end":{"line":7,"column":91,"offset":257},"indent":[]}},{"type":"link","title":null,"url":"https://en.wikipedia.org/wiki/Master_boot_record","children":[{"type":"strong","children":[{"type":"text","value":"MBR","position":{"start":{"line":7,"column":94,"offset":260},"end":{"line":7,"column":97,"offset":263},"indent":[]}}],"position":{"start":{"line":7,"column":92,"offset":258},"end":{"line":7,"column":99,"offset":265},"indent":[]}}],"position":{"start":{"line":7,"column":91,"offset":257},"end":{"line":7,"column":150,"offset":316},"indent":[]}},{"type":"text","value":"，MBR 中主要存储了该磁盘的分区表和启动引导记录，其中引导记录占用了前面 446 个字节，而磁盘分区则占用紧随的 64 个字节。","position":{"start":{"line":7,"column":150,"offset":316},"end":{"line":7,"column":215,"offset":381},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":167},"end":{"line":7,"column":215,"offset":381},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"所以我们可以通过清除 MBR 前 446 个字节来模拟启动记录损坏的场景，通过清除前 510 个字节来模拟启动记录和磁盘分区都损坏的场景。","position":{"start":{"line":9,"column":1,"offset":383},"end":{"line":9,"column":70,"offset":452},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":383},"end":{"line":9,"column":70,"offset":452},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"1. 启动记录损坏","position":{"start":{"line":11,"column":5,"offset":458},"end":{"line":11,"column":14,"offset":467},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":454},"end":{"line":11,"column":14,"offset":467},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"dd < /dev/zero >/dev/sda bs=1 count=446","position":{"start":{"line":13,"column":1,"offset":469},"end":{"line":15,"column":4,"offset":516},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"启动失败，进入到修复模式如下图：","position":{"start":{"line":17,"column":1,"offset":518},"end":{"line":17,"column":17,"offset":534},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":518},"end":{"line":17,"column":17,"offset":534},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"./potions.jpg","alt":"boot-Record-damage","position":{"start":{"line":19,"column":1,"offset":536},"end":{"line":19,"column":37,"offset":572},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":536},"end":{"line":19,"column":37,"offset":572},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://i.loli.net/2019/11/16/IQ8dGRAwf1bosH6.png","alt":"boot-Record-damage.png","position":{"start":{"line":21,"column":1,"offset":574},"end":{"line":21,"column":77,"offset":650},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":574},"end":{"line":21,"column":77,"offset":650},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"注意，这个时候是可以通过 ","position":{"start":{"line":23,"column":3,"offset":654},"end":{"line":23,"column":16,"offset":667},"indent":[]}},{"type":"inlineCode","value":"chroot /mnt/sysimage","position":{"start":{"line":23,"column":16,"offset":667},"end":{"line":23,"column":38,"offset":689},"indent":[]}},{"type":"text","value":" 切换到原来的 root 分区的，因为分区信息还在。","position":{"start":{"line":23,"column":38,"offset":689},"end":{"line":23,"column":64,"offset":715},"indent":[]}}],"position":{"start":{"line":23,"column":3,"offset":654},"end":{"line":23,"column":64,"offset":715},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":652},"end":{"line":23,"column":64,"offset":715},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"执行以下命令重新修复启动分区：","position":{"start":{"line":25,"column":1,"offset":717},"end":{"line":25,"column":16,"offset":732},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":717},"end":{"line":25,"column":16,"offset":732},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"grub2-install /dev/sda","position":{"start":{"line":27,"column":1,"offset":734},"end":{"line":29,"column":4,"offset":764},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"重启恢复正常。","position":{"start":{"line":31,"column":1,"offset":766},"end":{"line":31,"column":8,"offset":773},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":766},"end":{"line":31,"column":8,"offset":773},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"2. 启动记录和磁盘分区损坏","position":{"start":{"line":33,"column":5,"offset":779},"end":{"line":33,"column":19,"offset":793},"indent":[]}}],"position":{"start":{"line":33,"column":1,"offset":775},"end":{"line":33,"column":19,"offset":793},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"dd < /dev/zero >/dev/sda bs=1 count=510","position":{"start":{"line":35,"column":1,"offset":795},"end":{"line":37,"column":4,"offset":842},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"启动失败，进入到修复模式如下图：","position":{"start":{"line":39,"column":1,"offset":844},"end":{"line":39,"column":17,"offset":860},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":844},"end":{"line":39,"column":17,"offset":860},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://i.loli.net/2019/11/16/K8tw5ZbJF6fPGH1.png","alt":"partition-table-damage.png","position":{"start":{"line":41,"column":1,"offset":862},"end":{"line":41,"column":81,"offset":942},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":862},"end":{"line":41,"column":81,"offset":942},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"注意，这个时候已经不能通过 ","position":{"start":{"line":43,"column":3,"offset":946},"end":{"line":43,"column":17,"offset":960},"indent":[]}},{"type":"inlineCode","value":"chroot /mnt/sysimage","position":{"start":{"line":43,"column":17,"offset":960},"end":{"line":43,"column":39,"offset":982},"indent":[]}},{"type":"text","value":" 切换到原来的 root 分区，因为分区信息也已经损坏。","position":{"start":{"line":43,"column":39,"offset":982},"end":{"line":43,"column":67,"offset":1010},"indent":[]}}],"position":{"start":{"line":43,"column":3,"offset":946},"end":{"line":43,"column":67,"offset":1010},"indent":[]}}],"position":{"start":{"line":43,"column":1,"offset":944},"end":{"line":43,"column":67,"offset":1010},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"首先第一步是要修复启动分区表，可以借助 ","position":{"start":{"line":45,"column":1,"offset":1012},"end":{"line":45,"column":21,"offset":1032},"indent":[]}},{"type":"link","title":null,"url":"https://www.cgsecurity.org/wiki/TestDisk","children":[{"type":"strong","children":[{"type":"text","value":"testdisk","position":{"start":{"line":45,"column":24,"offset":1035},"end":{"line":45,"column":32,"offset":1043},"indent":[]}}],"position":{"start":{"line":45,"column":22,"offset":1033},"end":{"line":45,"column":34,"offset":1045},"indent":[]}}],"position":{"start":{"line":45,"column":21,"offset":1032},"end":{"line":45,"column":77,"offset":1088},"indent":[]}},{"type":"text","value":" 工具。","position":{"start":{"line":45,"column":77,"offset":1088},"end":{"line":45,"column":81,"offset":1092},"indent":[]}}],"position":{"start":{"line":45,"column":1,"offset":1012},"end":{"line":45,"column":81,"offset":1092},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"因为系统已经不能启动，所以只能通过挂载光驱或 usb 的方式将 ","position":{"start":{"line":47,"column":1,"offset":1094},"end":{"line":47,"column":33,"offset":1126},"indent":[]}},{"type":"link","title":null,"url":"https://www.cgsecurity.org/wiki/TestDisk","children":[{"type":"strong","children":[{"type":"text","value":"testdisk","position":{"start":{"line":47,"column":36,"offset":1129},"end":{"line":47,"column":44,"offset":1137},"indent":[]}}],"position":{"start":{"line":47,"column":34,"offset":1127},"end":{"line":47,"column":46,"offset":1139},"indent":[]}}],"position":{"start":{"line":47,"column":33,"offset":1126},"end":{"line":47,"column":89,"offset":1182},"indent":[]}},{"type":"text","value":" 工具挂载到修复模式，本篇中使用 ","position":{"start":{"line":47,"column":89,"offset":1182},"end":{"line":47,"column":106,"offset":1199},"indent":[]}},{"type":"link","title":null,"url":"https://gparted.sourceforge.io/livecd.php","children":[{"type":"strong","children":[{"type":"text","value":"gparted","position":{"start":{"line":47,"column":109,"offset":1202},"end":{"line":47,"column":116,"offset":1209},"indent":[]}}],"position":{"start":{"line":47,"column":107,"offset":1200},"end":{"line":47,"column":118,"offset":1211},"indent":[]}}],"position":{"start":{"line":47,"column":106,"offset":1199},"end":{"line":47,"column":162,"offset":1255},"indent":[]}},{"type":"text","value":" 的 live 镜像，这里面也包含了 testdisk 工具，当然还可以使用 ","position":{"start":{"line":47,"column":162,"offset":1255},"end":{"line":47,"column":201,"offset":1294},"indent":[]}},{"type":"link","title":null,"url":"https://en.altlinux.org/Rescue","children":[{"type":"strong","children":[{"type":"text","value":"ALT Linux","position":{"start":{"line":47,"column":204,"offset":1297},"end":{"line":47,"column":213,"offset":1306},"indent":[]}}],"position":{"start":{"line":47,"column":202,"offset":1295},"end":{"line":47,"column":215,"offset":1308},"indent":[]}}],"position":{"start":{"line":47,"column":201,"offset":1294},"end":{"line":47,"column":248,"offset":1341},"indent":[]}},{"type":"text","value":" 和 ","position":{"start":{"line":47,"column":248,"offset":1341},"end":{"line":47,"column":251,"offset":1344},"indent":[]}},{"type":"link","title":null,"url":"http://www.system-rescue-cd.org/Download/","children":[{"type":"strong","children":[{"type":"text","value":"systemrescuecd","position":{"start":{"line":47,"column":254,"offset":1347},"end":{"line":47,"column":268,"offset":1361},"indent":[]}}],"position":{"start":{"line":47,"column":252,"offset":1345},"end":{"line":47,"column":270,"offset":1363},"indent":[]}}],"position":{"start":{"line":47,"column":251,"offset":1344},"end":{"line":47,"column":314,"offset":1407},"indent":[]}},{"type":"text","value":" 或其他工具。","position":{"start":{"line":47,"column":314,"offset":1407},"end":{"line":47,"column":321,"offset":1414},"indent":[]}}],"position":{"start":{"line":47,"column":1,"offset":1094},"end":{"line":47,"column":321,"offset":1414},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"通过 testdisk 修复分区表很简单，基本就是下一步下一步的傻瓜式操作，如果有问题可以参考 ","position":{"start":{"line":49,"column":1,"offset":1416},"end":{"line":49,"column":49,"offset":1464},"indent":[]}},{"type":"link","title":null,"url":"(https://www.cgsecurity.org/wiki/TestDisk)","children":[{"type":"text","value":"官方的文档","position":{"start":{"line":49,"column":50,"offset":1465},"end":{"line":49,"column":55,"offset":1470},"indent":[]}}],"position":{"start":{"line":49,"column":49,"offset":1464},"end":{"line":49,"column":100,"offset":1515},"indent":[]}},{"type":"text","value":" 操作。","position":{"start":{"line":49,"column":100,"offset":1515},"end":{"line":49,"column":104,"offset":1519},"indent":[]}}],"position":{"start":{"line":49,"column":1,"offset":1416},"end":{"line":49,"column":104,"offset":1519},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://i.loli.net/2019/11/16/9aJx34mCfKRdL7G.png","alt":"testdisk-recovery-patition-table.png","position":{"start":{"line":51,"column":1,"offset":1521},"end":{"line":51,"column":91,"offset":1611},"indent":[]}}],"position":{"start":{"line":51,"column":1,"offset":1521},"end":{"line":51,"column":91,"offset":1611},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"恢复了分区表后重启，再次进入修复模式，又见到了熟悉的 ","position":{"start":{"line":53,"column":1,"offset":1613},"end":{"line":53,"column":28,"offset":1640},"indent":[]}},{"type":"inlineCode","value":"chroot","position":{"start":{"line":53,"column":28,"offset":1640},"end":{"line":53,"column":36,"offset":1648},"indent":[]}},{"type":"text","value":" 模式，重复上节操作，即可正常恢复系统。","position":{"start":{"line":53,"column":36,"offset":1648},"end":{"line":53,"column":56,"offset":1668},"indent":[]}}],"position":{"start":{"line":53,"column":1,"offset":1613},"end":{"line":53,"column":56,"offset":1668},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"有时执行 chroot 可能报错：","position":{"start":{"line":55,"column":3,"offset":1672},"end":{"line":55,"column":20,"offset":1689},"indent":[]}}],"position":{"start":{"line":55,"column":3,"offset":1672},"end":{"line":55,"column":20,"offset":1689},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":" ","position":{"start":{"line":57,"column":3,"offset":1695},"end":{"line":57,"column":4,"offset":1696},"indent":[]}},{"type":"inlineCode","value":"failed to run command '/bin/bash': No such file or directory","position":{"start":{"line":57,"column":4,"offset":1696},"end":{"line":57,"column":66,"offset":1758},"indent":[]}}],"position":{"start":{"line":57,"column":3,"offset":1695},"end":{"line":57,"column":66,"offset":1758},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"这通常是由于在你的 chroot 环境中没有 /bin/bash 程序，或则缺少执行 /bin/bash 的库文件，可以通过 ","position":{"start":{"line":59,"column":3,"offset":1764},"end":{"line":59,"column":66,"offset":1827},"indent":[]}},{"type":"inlineCode","value":"ldd $( command -v bash )","position":{"start":{"line":59,"column":66,"offset":1827},"end":{"line":59,"column":92,"offset":1853},"indent":[]}},{"type":"text","value":" 查看 bash 依赖哪些库文件，然后将这些文件 ","position":{"start":{"line":59,"column":92,"offset":1853},"end":{"line":59,"column":117,"offset":1878},"indent":[]}},{"type":"inlineCode","value":"mount -o bind","position":{"start":{"line":59,"column":117,"offset":1878},"end":{"line":59,"column":132,"offset":1893},"indent":[]}},{"type":"text","value":" 到你的 chroot 环境中，或直接 copy 到 chroot 环境中。","position":{"start":{"line":59,"column":132,"offset":1893},"end":{"line":59,"column":170,"offset":1931},"indent":[]}}],"position":{"start":{"line":59,"column":3,"offset":1764},"end":{"line":59,"column":170,"offset":1931},"indent":[]}}],"position":{"start":{"line":55,"column":1,"offset":1670},"end":{"line":59,"column":170,"offset":1931},"indent":[1,1,1,1]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"注意，如果启用了 SElinux，则还要安装 SELinux label，当然不安装，后面重启的时候系统会自动生成，但会根据文件系统的大小花费一定的时间。","position":{"start":{"line":62,"column":3,"offset":1936},"end":{"line":62,"column":80,"offset":2013},"indent":[]}}],"position":{"start":{"line":62,"column":3,"offset":1936},"end":{"line":62,"column":80,"offset":2013},"indent":[]}}],"position":{"start":{"line":62,"column":1,"offset":1934},"end":{"line":62,"column":80,"offset":2013},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"3. grub 损坏","position":{"start":{"line":64,"column":5,"offset":2019},"end":{"line":64,"column":15,"offset":2029},"indent":[]}}],"position":{"start":{"line":64,"column":1,"offset":2015},"end":{"line":64,"column":15,"offset":2029},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"在之前的另一篇文章 ","position":{"start":{"line":66,"column":1,"offset":2031},"end":{"line":66,"column":11,"offset":2041},"indent":[]}},{"type":"link","title":null,"url":"www.google.com","children":[{"type":"text","value":"Linux 启动过程","position":{"start":{"line":66,"column":12,"offset":2042},"end":{"line":66,"column":22,"offset":2052},"indent":[]}}],"position":{"start":{"line":66,"column":11,"offset":2041},"end":{"line":66,"column":39,"offset":2069},"indent":[]}},{"type":"text","value":" 中讲到，服务器找到 MBR 的启动记录后，接着会使用 ","position":{"start":{"line":66,"column":39,"offset":2069},"end":{"line":66,"column":67,"offset":2097},"indent":[]}},{"type":"link","title":null,"url":"https://www.gnu.org/software/grub/","children":[{"type":"strong","children":[{"type":"text","value":"grub","position":{"start":{"line":66,"column":70,"offset":2100},"end":{"line":66,"column":74,"offset":2104},"indent":[]}}],"position":{"start":{"line":66,"column":68,"offset":2098},"end":{"line":66,"column":76,"offset":2106},"indent":[]}}],"position":{"start":{"line":66,"column":67,"offset":2097},"end":{"line":66,"column":113,"offset":2143},"indent":[]}},{"type":"text","value":" 来加载内存初始镜像（initramfs","position":{"start":{"line":66,"column":113,"offset":2143},"end":{"line":66,"column":133,"offset":2163},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"）和内核文件（vmlinuz","position":{"start":{"line":66,"column":134,"offset":2164},"end":{"line":66,"column":148,"offset":2178},"indent":[]}}],"position":{"start":{"line":66,"column":133,"offset":2163},"end":{"line":66,"column":149,"offset":2179},"indent":[]}},{"type":"text","value":"），那如果 ","position":{"start":{"line":66,"column":149,"offset":2179},"end":{"line":66,"column":155,"offset":2185},"indent":[]}},{"type":"link","title":null,"url":"https://www.gnu.org/software/grub/","children":[{"type":"strong","children":[{"type":"text","value":"grub","position":{"start":{"line":66,"column":158,"offset":2188},"end":{"line":66,"column":162,"offset":2192},"indent":[]}}],"position":{"start":{"line":66,"column":156,"offset":2186},"end":{"line":66,"column":164,"offset":2194},"indent":[]}}],"position":{"start":{"line":66,"column":155,"offset":2185},"end":{"line":66,"column":201,"offset":2231},"indent":[]}},{"type":"text","value":" 损坏了如何修复呢？","position":{"start":{"line":66,"column":201,"offset":2231},"end":{"line":66,"column":211,"offset":2241},"indent":[]}}],"position":{"start":{"line":66,"column":1,"offset":2031},"end":{"line":66,"column":211,"offset":2241},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"删除 grub 文件，模拟 grub 损坏：","position":{"start":{"line":68,"column":1,"offset":2243},"end":{"line":68,"column":23,"offset":2265},"indent":[]}}],"position":{"start":{"line":68,"column":1,"offset":2243},"end":{"line":68,"column":23,"offset":2265},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"rm /boot/grub2/ -rf","position":{"start":{"line":70,"column":1,"offset":2267},"end":{"line":72,"column":4,"offset":2294},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"重启失败，进入 grub 命令行：","position":{"start":{"line":74,"column":1,"offset":2296},"end":{"line":74,"column":18,"offset":2313},"indent":[]}}],"position":{"start":{"line":74,"column":1,"offset":2296},"end":{"line":74,"column":18,"offset":2313},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://i.loli.net/2019/11/16/Glgu6YSonfjIbkm.png","alt":"grub2-damage.png","position":{"start":{"line":76,"column":1,"offset":2315},"end":{"line":76,"column":71,"offset":2385},"indent":[]}}],"position":{"start":{"line":76,"column":1,"offset":2315},"end":{"line":76,"column":71,"offset":2385},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"退出 grub 命令行，进入修复模式：","position":{"start":{"line":78,"column":1,"offset":2387},"end":{"line":78,"column":20,"offset":2406},"indent":[]}}],"position":{"start":{"line":78,"column":1,"offset":2387},"end":{"line":78,"column":20,"offset":2406},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://i.loli.net/2019/11/16/IQ8dGRAwf1bosH6.png","alt":"boot-Record-damage.png","position":{"start":{"line":80,"column":1,"offset":2408},"end":{"line":80,"column":77,"offset":2484},"indent":[]}}],"position":{"start":{"line":80,"column":1,"offset":2408},"end":{"line":80,"column":77,"offset":2484},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"执行以下命令恢复 grub：","position":{"start":{"line":82,"column":1,"offset":2486},"end":{"line":82,"column":15,"offset":2500},"indent":[]}}],"position":{"start":{"line":82,"column":1,"offset":2486},"end":{"line":82,"column":15,"offset":2500},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"chroot /mnt/sysimage\ngrub2-install /dev/sda   # 会重新生成 /boot/grub2/ 目录\ngrub2-mkconfig -o /boot/grub2/grub.cfg","position":{"start":{"line":84,"column":1,"offset":2502},"end":{"line":88,"column":4,"offset":2618},"indent":[1,1,1,1]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"这里有个疑问，/boot/grub2/grub.cfg 文件是靠软件包 grub2-pc 生成的，但如果删除了 grub.cfg 文件，重新安装这个软件包并不会重新生成 grub.cfg 文件，有了解原因的还望不吝告知，留言或邮件都可以，谢谢。","position":{"start":{"line":90,"column":3,"offset":2622},"end":{"line":90,"column":125,"offset":2744},"indent":[]}}],"position":{"start":{"line":90,"column":3,"offset":2622},"end":{"line":90,"column":125,"offset":2744},"indent":[]}}],"position":{"start":{"line":90,"column":1,"offset":2620},"end":{"line":90,"column":125,"offset":2744},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"以上基本模拟了在 BIOS + MBR 基础上的启动记录损坏、启动分区表损坏、grub 损坏的场景并进行了修复，但在 UEFI + GPT 下，过程则不太一样。","position":{"start":{"line":92,"column":1,"offset":2746},"end":{"line":92,"column":81,"offset":2826},"indent":[]}}],"position":{"start":{"line":92,"column":1,"offset":2746},"end":{"line":92,"column":81,"offset":2826},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"二、UEFI + GPT","position":{"start":{"line":94,"column":4,"offset":2831},"end":{"line":94,"column":16,"offset":2843},"indent":[]}}],"position":{"start":{"line":94,"column":1,"offset":2828},"end":{"line":94,"column":16,"offset":2843},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"在 ","position":{"start":{"line":96,"column":1,"offset":2845},"end":{"line":96,"column":3,"offset":2847},"indent":[]}},{"type":"link","title":null,"url":"https://en.wikipedia.org/wiki/Unified_Extensible_Firmware_Interface","children":[{"type":"strong","children":[{"type":"text","value":"UEFI","position":{"start":{"line":96,"column":6,"offset":2850},"end":{"line":96,"column":10,"offset":2854},"indent":[]}}],"position":{"start":{"line":96,"column":4,"offset":2848},"end":{"line":96,"column":12,"offset":2856},"indent":[]}}],"position":{"start":{"line":96,"column":3,"offset":2847},"end":{"line":96,"column":82,"offset":2926},"indent":[]}},{"type":"text","value":" + ","position":{"start":{"line":96,"column":82,"offset":2926},"end":{"line":96,"column":85,"offset":2929},"indent":[]}},{"type":"link","title":null,"url":"https://en.wikipedia.org/wiki/GUID_Partition_Table","children":[{"type":"strong","children":[{"type":"text","value":"GPT","position":{"start":{"line":96,"column":88,"offset":2932},"end":{"line":96,"column":91,"offset":2935},"indent":[]}}],"position":{"start":{"line":96,"column":86,"offset":2930},"end":{"line":96,"column":93,"offset":2937},"indent":[]}}],"position":{"start":{"line":96,"column":85,"offset":2929},"end":{"line":96,"column":146,"offset":2990},"indent":[]}},{"type":"text","value":" 的启动过程中，在服务器开机自检 (POST) 完成后，就会加载 ","position":{"start":{"line":96,"column":146,"offset":2990},"end":{"line":96,"column":179,"offset":3023},"indent":[]}},{"type":"link","title":null,"url":"https://en.wikipedia.org/wiki/EFI_system_partition","children":[{"type":"strong","children":[{"type":"text","value":"ESP","position":{"start":{"line":96,"column":182,"offset":3026},"end":{"line":96,"column":185,"offset":3029},"indent":[]}}],"position":{"start":{"line":96,"column":180,"offset":3024},"end":{"line":96,"column":187,"offset":3031},"indent":[]}}],"position":{"start":{"line":96,"column":179,"offset":3023},"end":{"line":96,"column":240,"offset":3084},"indent":[]}},{"type":"text","value":"(EFI System Partition) 的 UEFI 固件，UEFI 固件会初始化启动要用的硬件，并读取其引导管理器以确定从何处（比如，从哪个硬盘及分区）加载哪个 UEFI 应用。所以 UEFI 的启动信息都在 ","position":{"start":{"line":96,"column":240,"offset":3084},"end":{"line":96,"column":349,"offset":3193},"indent":[]}},{"type":"link","title":null,"url":"https://en.wikipedia.org/wiki/EFI_system_partition","children":[{"type":"strong","children":[{"type":"text","value":"ESP","position":{"start":{"line":96,"column":352,"offset":3196},"end":{"line":96,"column":355,"offset":3199},"indent":[]}}],"position":{"start":{"line":96,"column":350,"offset":3194},"end":{"line":96,"column":357,"offset":3201},"indent":[]}}],"position":{"start":{"line":96,"column":349,"offset":3193},"end":{"line":96,"column":410,"offset":3254},"indent":[]}},{"type":"text","value":" 中（通常是 ","position":{"start":{"line":96,"column":410,"offset":3254},"end":{"line":96,"column":417,"offset":3261},"indent":[]}},{"type":"inlineCode","value":"/boot/efi","position":{"start":{"line":96,"column":417,"offset":3261},"end":{"line":96,"column":428,"offset":3272},"indent":[]}},{"type":"text","value":"）。","position":{"start":{"line":96,"column":428,"offset":3272},"end":{"line":96,"column":430,"offset":3274},"indent":[]}}],"position":{"start":{"line":96,"column":1,"offset":2845},"end":{"line":96,"column":430,"offset":3274},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"下面主要模拟 ESP 损坏和 GPT 损坏的场景。","position":{"start":{"line":98,"column":1,"offset":3276},"end":{"line":98,"column":26,"offset":3301},"indent":[]}}],"position":{"start":{"line":98,"column":1,"offset":3276},"end":{"line":98,"column":26,"offset":3301},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"1. ESP 损坏","position":{"start":{"line":100,"column":5,"offset":3307},"end":{"line":100,"column":14,"offset":3316},"indent":[]}}],"position":{"start":{"line":100,"column":1,"offset":3303},"end":{"line":100,"column":14,"offset":3316},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"因为 ESP 本身就是一个系统分区，所以它的损坏又可以分为两种情况：","position":{"start":{"line":102,"column":1,"offset":3318},"end":{"line":102,"column":35,"offset":3352},"indent":[]}}],"position":{"start":{"line":102,"column":1,"offset":3318},"end":{"line":102,"column":35,"offset":3352},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"ESP 分区里面的文件损坏或丢失","position":{"start":{"line":104,"column":3,"offset":3356},"end":{"line":104,"column":19,"offset":3372},"indent":[]}}],"position":{"start":{"line":104,"column":3,"offset":3356},"end":{"line":104,"column":19,"offset":3372},"indent":[]}}],"position":{"start":{"line":104,"column":1,"offset":3354},"end":{"line":104,"column":19,"offset":3372},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"ESP 分区信息损坏","position":{"start":{"line":105,"column":3,"offset":3375},"end":{"line":105,"column":13,"offset":3385},"indent":[]}}],"position":{"start":{"line":105,"column":3,"offset":3375},"end":{"line":105,"column":13,"offset":3385},"indent":[]}}],"position":{"start":{"line":105,"column":1,"offset":3373},"end":{"line":105,"column":13,"offset":3385},"indent":[]}}],"position":{"start":{"line":104,"column":1,"offset":3354},"end":{"line":105,"column":13,"offset":3385},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"ESP 分区信息本身就包含在 GPT 分区信息里面，所以第二种情况其实就是属于 GPT 损坏的场景，所以这里只演示 ESP 分区里面的文件损坏或丢失。","position":{"start":{"line":107,"column":1,"offset":3387},"end":{"line":107,"column":76,"offset":3462},"indent":[]}}],"position":{"start":{"line":107,"column":1,"offset":3387},"end":{"line":107,"column":76,"offset":3462},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"删除 EFI 目录，模拟 EFI 文件丢失：","position":{"start":{"line":109,"column":1,"offset":3464},"end":{"line":109,"column":23,"offset":3486},"indent":[]}}],"position":{"start":{"line":109,"column":1,"offset":3464},"end":{"line":109,"column":23,"offset":3486},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"[root@base ~]# ls /boot/efi\nEFI\n[root@base ~]# rm /boot/efi -rf\nrm: 无法删除 \"/boot/efi\": 设备或资源忙\n[root@base ~]# ls /boot/efi","position":{"start":{"line":111,"column":1,"offset":3488},"end":{"line":117,"column":4,"offset":3616},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"重启系统，无法正常启动。","position":{"start":{"line":119,"column":1,"offset":3618},"end":{"line":119,"column":13,"offset":3630},"indent":[]}}],"position":{"start":{"line":119,"column":1,"offset":3618},"end":{"line":119,"column":13,"offset":3630},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"进入修复模式，因为分区信息还在，所以可以 chroot 到原来的根文件系统，但 ","position":{"start":{"line":121,"column":1,"offset":3632},"end":{"line":121,"column":41,"offset":3672},"indent":[]}},{"type":"inlineCode","value":"/boot/efi","position":{"start":{"line":121,"column":41,"offset":3672},"end":{"line":121,"column":52,"offset":3683},"indent":[]}},{"type":"text","value":" 目录下没有 EFI、grub 等文件。","position":{"start":{"line":121,"column":52,"offset":3683},"end":{"line":121,"column":72,"offset":3703},"indent":[]}}],"position":{"start":{"line":121,"column":1,"offset":3632},"end":{"line":121,"column":72,"offset":3703},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://i.loli.net/2019/11/20/IKSQAHPpgrLMVb6.png","alt":"delete-grub-efi.png","position":{"start":{"line":123,"column":1,"offset":3705},"end":{"line":123,"column":74,"offset":3778},"indent":[]}}],"position":{"start":{"line":123,"column":1,"offset":3705},"end":{"line":123,"column":74,"offset":3778},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"所以只要恢复 ESP 文件系统下的那些 ","position":{"start":{"line":125,"column":1,"offset":3780},"end":{"line":125,"column":21,"offset":3800},"indent":[]}},{"type":"inlineCode","value":".efi","position":{"start":{"line":125,"column":21,"offset":3800},"end":{"line":125,"column":27,"offset":3806},"indent":[]}},{"type":"text","value":" 文件就可以修复。","position":{"start":{"line":125,"column":27,"offset":3806},"end":{"line":125,"column":36,"offset":3815},"indent":[]}}],"position":{"start":{"line":125,"column":1,"offset":3780},"end":{"line":125,"column":36,"offset":3815},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"首先切换到原来的系统环境：","position":{"start":{"line":127,"column":1,"offset":3817},"end":{"line":127,"column":14,"offset":3830},"indent":[]}}],"position":{"start":{"line":127,"column":1,"offset":3817},"end":{"line":127,"column":14,"offset":3830},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"chroot /mnt/sysimage","position":{"start":{"line":129,"column":1,"offset":3832},"end":{"line":131,"column":4,"offset":3860},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"挂载光驱，重新安装 ","position":{"start":{"line":133,"column":1,"offset":3862},"end":{"line":133,"column":11,"offset":3872},"indent":[]}},{"type":"inlineCode","value":"grub2-efi","position":{"start":{"line":133,"column":11,"offset":3872},"end":{"line":133,"column":22,"offset":3883},"indent":[]}},{"type":"text","value":" 和 ","position":{"start":{"line":133,"column":22,"offset":3883},"end":{"line":133,"column":25,"offset":3886},"indent":[]}},{"type":"inlineCode","value":"shim","position":{"start":{"line":133,"column":25,"offset":3886},"end":{"line":133,"column":31,"offset":3892},"indent":[]}},{"type":"text","value":" 软件包。","position":{"start":{"line":133,"column":31,"offset":3892},"end":{"line":133,"column":36,"offset":3897},"indent":[]}}],"position":{"start":{"line":133,"column":1,"offset":3862},"end":{"line":133,"column":36,"offset":3897},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://i.loli.net/2019/11/20/6FISRl4iYxry8MW.png","alt":"reinstall-efi-shim.png","position":{"start":{"line":135,"column":1,"offset":3899},"end":{"line":135,"column":77,"offset":3975},"indent":[]}}],"position":{"start":{"line":135,"column":1,"offset":3899},"end":{"line":135,"column":77,"offset":3975},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"然后再重新生成 ","position":{"start":{"line":137,"column":1,"offset":3977},"end":{"line":137,"column":9,"offset":3985},"indent":[]}},{"type":"inlineCode","value":"grub.cfg","position":{"start":{"line":137,"column":9,"offset":3985},"end":{"line":137,"column":19,"offset":3995},"indent":[]}},{"type":"text","value":" 配置文件，不然会进入到 grub 命令行接口界面。","position":{"start":{"line":137,"column":19,"offset":3995},"end":{"line":137,"column":45,"offset":4021},"indent":[]}}],"position":{"start":{"line":137,"column":1,"offset":3977},"end":{"line":137,"column":45,"offset":4021},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"grub2-mkconfig -o /boot/efi/EFI/redhat/grub.cfg","position":{"start":{"line":139,"column":1,"offset":4023},"end":{"line":141,"column":4,"offset":4078},"indent":[1,1]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"作用类似于 BIOS + MBR 下的 grub2-install 命令","position":{"start":{"line":143,"column":3,"offset":4082},"end":{"line":143,"column":39,"offset":4118},"indent":[]}}],"position":{"start":{"line":143,"column":3,"offset":4082},"end":{"line":143,"column":39,"offset":4118},"indent":[]}}],"position":{"start":{"line":143,"column":1,"offset":4080},"end":{"line":143,"column":39,"offset":4118},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"重启系统，即可正常启动。","position":{"start":{"line":145,"column":1,"offset":4120},"end":{"line":145,"column":13,"offset":4132},"indent":[]}}],"position":{"start":{"line":145,"column":1,"offset":4120},"end":{"line":145,"column":13,"offset":4132},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"2. GPT 损坏","position":{"start":{"line":148,"column":5,"offset":4139},"end":{"line":148,"column":14,"offset":4148},"indent":[]}}],"position":{"start":{"line":148,"column":1,"offset":4135},"end":{"line":148,"column":14,"offset":4148},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://en.wikipedia.org/wiki/GUID_Partition_Table","children":[{"type":"strong","children":[{"type":"text","value":"GPT","position":{"start":{"line":150,"column":4,"offset":4153},"end":{"line":150,"column":7,"offset":4156},"indent":[]}}],"position":{"start":{"line":150,"column":2,"offset":4151},"end":{"line":150,"column":9,"offset":4158},"indent":[]}}],"position":{"start":{"line":150,"column":1,"offset":4150},"end":{"line":150,"column":62,"offset":4211},"indent":[]}},{"type":"text","value":" 分区表类型中，是以 ","position":{"start":{"line":150,"column":62,"offset":4211},"end":{"line":150,"column":73,"offset":4222},"indent":[]}},{"type":"link","title":null,"url":"https://en.wikipedia.org/wiki/Logical_block_addressing","children":[{"type":"strong","children":[{"type":"text","value":"LBA","position":{"start":{"line":150,"column":76,"offset":4225},"end":{"line":150,"column":79,"offset":4228},"indent":[]}}],"position":{"start":{"line":150,"column":74,"offset":4223},"end":{"line":150,"column":81,"offset":4230},"indent":[]}}],"position":{"start":{"line":150,"column":73,"offset":4222},"end":{"line":150,"column":138,"offset":4287},"indent":[]}},{"type":"text","value":"(Logical Block Address，逻辑块寻址) 来定义扇区的位置，比如 LBA0 LBA1 等。","position":{"start":{"line":150,"column":138,"offset":4287},"end":{"line":150,"column":192,"offset":4341},"indent":[]}}],"position":{"start":{"line":150,"column":1,"offset":4150},"end":{"line":150,"column":192,"offset":4341},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"本篇结合 gpt 结构图来分别说明：","position":{"start":{"line":152,"column":1,"offset":4343},"end":{"line":152,"column":19,"offset":4361},"indent":[]}}],"position":{"start":{"line":152,"column":1,"offset":4343},"end":{"line":152,"column":19,"offset":4361},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"LBA0 的损坏","position":{"start":{"line":153,"column":3,"offset":4364},"end":{"line":153,"column":11,"offset":4372},"indent":[]}}],"position":{"start":{"line":153,"column":3,"offset":4364},"end":{"line":153,"column":11,"offset":4372},"indent":[]}}],"position":{"start":{"line":153,"column":1,"offset":4362},"end":{"line":153,"column":11,"offset":4372},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"LBA1 的损坏","position":{"start":{"line":154,"column":3,"offset":4375},"end":{"line":154,"column":11,"offset":4383},"indent":[]}}],"position":{"start":{"line":154,"column":3,"offset":4375},"end":{"line":154,"column":11,"offset":4383},"indent":[]}}],"position":{"start":{"line":154,"column":1,"offset":4373},"end":{"line":154,"column":11,"offset":4383},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"LBA2 ~ LBA33 的损坏","position":{"start":{"line":155,"column":3,"offset":4386},"end":{"line":155,"column":19,"offset":4402},"indent":[]}}],"position":{"start":{"line":155,"column":3,"offset":4386},"end":{"line":155,"column":19,"offset":4402},"indent":[]}}],"position":{"start":{"line":155,"column":1,"offset":4384},"end":{"line":155,"column":19,"offset":4402},"indent":[]}}],"position":{"start":{"line":153,"column":1,"offset":4362},"end":{"line":155,"column":19,"offset":4402},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://i.loli.net/2019/11/17/gYL78ydEM4UveHa.png","alt":"gpt-wiki.png","position":{"start":{"line":157,"column":1,"offset":4404},"end":{"line":157,"column":67,"offset":4470},"indent":[]}}],"position":{"start":{"line":157,"column":1,"offset":4404},"end":{"line":157,"column":67,"offset":4470},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"1. LBA0","position":{"start":{"line":159,"column":6,"offset":4477},"end":{"line":159,"column":13,"offset":4484},"indent":[]}}],"position":{"start":{"line":159,"column":1,"offset":4472},"end":{"line":159,"column":13,"offset":4484},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"LBA0 是一个保护性 MBR，是出于兼容性而存储了一份传统的 ","position":{"start":{"line":161,"column":1,"offset":4486},"end":{"line":161,"column":33,"offset":4518},"indent":[]}},{"type":"link","title":null,"url":"https://en.wikipedia.org/wiki/Master_boot_record#PTE","children":[{"type":"text","value":"MBR","position":{"start":{"line":161,"column":34,"offset":4519},"end":{"line":161,"column":37,"offset":4522},"indent":[]}}],"position":{"start":{"line":161,"column":33,"offset":4518},"end":{"line":161,"column":92,"offset":4577},"indent":[]}},{"type":"text","value":"。","position":{"start":{"line":161,"column":92,"offset":4577},"end":{"line":161,"column":93,"offset":4578},"indent":[]}}],"position":{"start":{"line":161,"column":1,"offset":4486},"end":{"line":161,"column":93,"offset":4578},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"至于每个 LBA 对应的物理空间是多少，可以通过 ","position":{"start":{"line":164,"column":1,"offset":4581},"end":{"line":164,"column":26,"offset":4606},"indent":[]}},{"type":"inlineCode","value":"parted","position":{"start":{"line":164,"column":26,"offset":4606},"end":{"line":164,"column":34,"offset":4614},"indent":[]}},{"type":"text","value":" 或 ","position":{"start":{"line":164,"column":34,"offset":4614},"end":{"line":164,"column":37,"offset":4617},"indent":[]}},{"type":"inlineCode","value":"blockdev","position":{"start":{"line":164,"column":37,"offset":4617},"end":{"line":164,"column":47,"offset":4627},"indent":[]}},{"type":"text","value":" 命令查看：","position":{"start":{"line":164,"column":47,"offset":4627},"end":{"line":164,"column":53,"offset":4633},"indent":[]}}],"position":{"start":{"line":164,"column":1,"offset":4581},"end":{"line":164,"column":53,"offset":4633},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"root@base ~]# parted\nGNU Parted 3.1\n使用 /dev/sda\nWelcome to GNU Parted! Type 'help' to view a list of commands.\n(parted) print\nModel: VMware, VMware Virtual S (scsi)\nDisk /dev/sda: 10.7GB\nSector size (logical/physical): 512B/512B\nPartition Table: gpt\nDisk Flags:\n\nNumber  Start   End     Size    File system  Name                  标志\n 1      1049kB  211MB   210MB   fat16        EFI System Partition  启动\n 2      211MB   1285MB  1074MB  xfs\n 3      1285MB  7729MB  6445MB                                     lvm\n","position":{"start":{"line":166,"column":1,"offset":4635},"end":{"line":183,"column":4,"offset":5153},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"或","position":{"start":{"line":185,"column":1,"offset":5155},"end":{"line":185,"column":2,"offset":5156},"indent":[]}}],"position":{"start":{"line":185,"column":1,"offset":5155},"end":{"line":185,"column":2,"offset":5156},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"blockdev --getss  /dev/sda","position":{"start":{"line":186,"column":1,"offset":5157},"end":{"line":188,"column":4,"offset":5191},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"从以上信息中可以看出：","position":{"start":{"line":190,"column":1,"offset":5193},"end":{"line":190,"column":12,"offset":5204},"indent":[]}}],"position":{"start":{"line":190,"column":1,"offset":5193},"end":{"line":190,"column":12,"offset":5204},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"分区表类型为 gpt(使用 fdisk 命令也可查看分区表类型)","position":{"start":{"line":191,"column":3,"offset":5207},"end":{"line":191,"column":35,"offset":5239},"indent":[]}}],"position":{"start":{"line":191,"column":3,"offset":5207},"end":{"line":191,"column":35,"offset":5239},"indent":[]}}],"position":{"start":{"line":191,"column":1,"offset":5205},"end":{"line":191,"column":35,"offset":5239},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"逻辑 / 物理扇区大小 512B","position":{"start":{"line":192,"column":3,"offset":5242},"end":{"line":192,"column":19,"offset":5258},"indent":[]}}],"position":{"start":{"line":192,"column":3,"offset":5242},"end":{"line":192,"column":19,"offset":5258},"indent":[]}}],"position":{"start":{"line":192,"column":1,"offset":5240},"end":{"line":192,"column":19,"offset":5258},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"启动类型 EFI","position":{"start":{"line":193,"column":3,"offset":5261},"end":{"line":193,"column":11,"offset":5269},"indent":[]}}],"position":{"start":{"line":193,"column":3,"offset":5261},"end":{"line":193,"column":11,"offset":5269},"indent":[]}}],"position":{"start":{"line":193,"column":1,"offset":5259},"end":{"line":193,"column":11,"offset":5269},"indent":[]}}],"position":{"start":{"line":191,"column":1,"offset":5205},"end":{"line":193,"column":11,"offset":5269},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"我们先看看 sda 的 LBA0(扇区 1，也就是 MBR) 存储的内容：","position":{"start":{"line":196,"column":1,"offset":5272},"end":{"line":196,"column":38,"offset":5309},"indent":[]}}],"position":{"start":{"line":196,"column":1,"offset":5272},"end":{"line":196,"column":38,"offset":5309},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"[root@base ~]# xxd -g1 -l 512 /dev/sda\n0000000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0000010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0000020: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0000030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0000040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0000050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0000060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0000070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0000080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0000090: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n00000a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n00000b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n00000c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n00000d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n00000e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n00000f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0000100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0000110: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0000120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0000130: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0000140: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0000150: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0000160: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0000170: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0000180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0000190: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n00001a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n00001b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n00001c0: 01 00 ee fe ff ff 01 00 00 00 ff ff 3f 01 00 00  ............?...\n00001d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n00001e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n00001f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 55 aa  ..............U.","position":{"start":{"line":198,"column":1,"offset":5311},"end":{"line":232,"column":4,"offset":7757},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"查看 16 进制的工具很多，在 Windows 上大多数是用 ","position":{"start":{"line":233,"column":3,"offset":7760},"end":{"line":233,"column":34,"offset":7791},"indent":[]}},{"type":"inlineCode","value":"winhex","position":{"start":{"line":233,"column":34,"offset":7791},"end":{"line":233,"column":42,"offset":7799},"indent":[]}},{"type":"text","value":"，Linux 可以用 ","position":{"start":{"line":233,"column":42,"offset":7799},"end":{"line":233,"column":53,"offset":7810},"indent":[]}},{"type":"inlineCode","value":"wxHexEditor","position":{"start":{"line":233,"column":53,"offset":7810},"end":{"line":233,"column":66,"offset":7823},"indent":[]}},{"type":"text","value":"、","position":{"start":{"line":233,"column":66,"offset":7823},"end":{"line":233,"column":67,"offset":7824},"indent":[]}},{"type":"inlineCode","value":"010 Editor","position":{"start":{"line":233,"column":67,"offset":7824},"end":{"line":233,"column":79,"offset":7836},"indent":[]}},{"type":"text","value":"、","position":{"start":{"line":233,"column":79,"offset":7836},"end":{"line":233,"column":80,"offset":7837},"indent":[]}},{"type":"inlineCode","value":"MadEdit","position":{"start":{"line":233,"column":80,"offset":7837},"end":{"line":233,"column":89,"offset":7846},"indent":[]}},{"type":"text","value":" 、","position":{"start":{"line":233,"column":89,"offset":7846},"end":{"line":233,"column":91,"offset":7848},"indent":[]}},{"type":"inlineCode","value":"Xxd","position":{"start":{"line":233,"column":91,"offset":7848},"end":{"line":233,"column":96,"offset":7853},"indent":[]}},{"type":"text","value":"、","position":{"start":{"line":233,"column":96,"offset":7853},"end":{"line":233,"column":97,"offset":7854},"indent":[]}},{"type":"inlineCode","value":"Hexedit","position":{"start":{"line":233,"column":97,"offset":7854},"end":{"line":233,"column":106,"offset":7863},"indent":[]}},{"type":"text","value":"、","position":{"start":{"line":233,"column":106,"offset":7863},"end":{"line":233,"column":107,"offset":7864},"indent":[]}},{"type":"inlineCode","value":"Hexyl","position":{"start":{"line":233,"column":107,"offset":7864},"end":{"line":233,"column":114,"offset":7871},"indent":[]}},{"type":"text","value":"、","position":{"start":{"line":233,"column":114,"offset":7871},"end":{"line":233,"column":115,"offset":7872},"indent":[]}},{"type":"inlineCode","value":"Ghex","position":{"start":{"line":233,"column":115,"offset":7872},"end":{"line":233,"column":121,"offset":7878},"indent":[]}},{"type":"text","value":"、","position":{"start":{"line":233,"column":121,"offset":7878},"end":{"line":233,"column":122,"offset":7879},"indent":[]}},{"type":"inlineCode","value":"Bless","position":{"start":{"line":233,"column":122,"offset":7879},"end":{"line":233,"column":129,"offset":7886},"indent":[]}},{"type":"text","value":"、","position":{"start":{"line":233,"column":129,"offset":7886},"end":{"line":233,"column":130,"offset":7887},"indent":[]}},{"type":"inlineCode","value":"Okteta","position":{"start":{"line":233,"column":130,"offset":7887},"end":{"line":233,"column":138,"offset":7895},"indent":[]}},{"type":"text","value":" 等等。","position":{"start":{"line":233,"column":138,"offset":7895},"end":{"line":233,"column":142,"offset":7899},"indent":[]}}],"position":{"start":{"line":233,"column":3,"offset":7760},"end":{"line":233,"column":142,"offset":7899},"indent":[]}}],"position":{"start":{"line":233,"column":1,"offset":7758},"end":{"line":233,"column":142,"offset":7899},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"对照 ","position":{"start":{"line":235,"column":1,"offset":7901},"end":{"line":235,"column":4,"offset":7904},"indent":[]}},{"type":"link","title":null,"url":"https://en.wikipedia.org/wiki/Master_boot_record","children":[{"type":"strong","children":[{"type":"text","value":"MBR","position":{"start":{"line":235,"column":7,"offset":7907},"end":{"line":235,"column":10,"offset":7910},"indent":[]}}],"position":{"start":{"line":235,"column":5,"offset":7905},"end":{"line":235,"column":12,"offset":7912},"indent":[]}}],"position":{"start":{"line":235,"column":4,"offset":7904},"end":{"line":235,"column":63,"offset":7963},"indent":[]}},{"type":"text","value":" 结构图：","position":{"start":{"line":235,"column":63,"offset":7963},"end":{"line":235,"column":68,"offset":7968},"indent":[]}}],"position":{"start":{"line":235,"column":1,"offset":7901},"end":{"line":235,"column":68,"offset":7968},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://i.loli.net/2019/11/18/YS9bAHhvcC5jJzP.png","alt":"mbr-wiki.png","position":{"start":{"line":237,"column":1,"offset":7970},"end":{"line":237,"column":67,"offset":8036},"indent":[]}}],"position":{"start":{"line":237,"column":1,"offset":7970},"end":{"line":237,"column":67,"offset":8036},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"可以看到，","position":{"start":{"line":239,"column":1,"offset":8038},"end":{"line":239,"column":6,"offset":8043},"indent":[]}},{"type":"link","title":null,"url":"https://en.wikipedia.org/wiki/Master_boot_record","children":[{"type":"strong","children":[{"type":"text","value":"MBR","position":{"start":{"line":239,"column":9,"offset":8046},"end":{"line":239,"column":12,"offset":8049},"indent":[]}}],"position":{"start":{"line":239,"column":7,"offset":8044},"end":{"line":239,"column":14,"offset":8051},"indent":[]}}],"position":{"start":{"line":239,"column":6,"offset":8043},"end":{"line":239,"column":65,"offset":8102},"indent":[]}},{"type":"text","value":" 中的 BootCode 全为 0（前 446 字节），分区表中也只有分区表 1 有数据：","position":{"start":{"line":239,"column":65,"offset":8102},"end":{"line":239,"column":110,"offset":8147},"indent":[]}}],"position":{"start":{"line":239,"column":1,"offset":8038},"end":{"line":239,"column":110,"offset":8147},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"00 00 01 00 ee fe ff ff 01 00 00 00 ff ff 3f 01","position":{"start":{"line":241,"column":1,"offset":8149},"end":{"line":243,"column":4,"offset":8204},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"再对比 MBR 的","position":{"start":{"line":245,"column":1,"offset":8206},"end":{"line":245,"column":10,"offset":8215},"indent":[]}},{"type":"link","title":null,"url":"https://en.wikipedia.org/wiki/Master_boot_record#Sector_layout","children":[{"type":"text","value":"分区表条目结构图","position":{"start":{"line":245,"column":11,"offset":8216},"end":{"line":245,"column":19,"offset":8224},"indent":[]}}],"position":{"start":{"line":245,"column":10,"offset":8215},"end":{"line":245,"column":84,"offset":8289},"indent":[]}},{"type":"text","value":"：","position":{"start":{"line":245,"column":84,"offset":8289},"end":{"line":245,"column":85,"offset":8290},"indent":[]}}],"position":{"start":{"line":245,"column":1,"offset":8206},"end":{"line":245,"column":85,"offset":8290},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://i.loli.net/2019/11/17/gti78LyNPez16Bu.png","alt":"Layout-of-one-16-byte-partition-entry.png","position":{"start":{"line":247,"column":1,"offset":8292},"end":{"line":247,"column":96,"offset":8387},"indent":[]}}],"position":{"start":{"line":247,"column":1,"offset":8292},"end":{"line":247,"column":96,"offset":8387},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"拆解分区表 1 的内容：","position":{"start":{"line":249,"column":1,"offset":8389},"end":{"line":249,"column":13,"offset":8401},"indent":[]}}],"position":{"start":{"line":249,"column":1,"offset":8389},"end":{"line":249,"column":13,"offset":8401},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"00 00 01 00 ee fe ff ff 01 00 00 00 ff ff 3f 01","position":{"start":{"line":250,"column":1,"offset":8402},"end":{"line":252,"column":4,"offset":8457},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"其中：","position":{"start":{"line":254,"column":1,"offset":8459},"end":{"line":254,"column":4,"offset":8462},"indent":[]}}],"position":{"start":{"line":254,"column":1,"offset":8459},"end":{"line":254,"column":4,"offset":8462},"indent":[]}},{"type":"table","align":[null,null],"children":[{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"值","position":{"start":{"line":256,"column":1,"offset":8464},"end":{"line":256,"column":2,"offset":8465},"indent":[]}}],"position":{"start":{"line":256,"column":1,"offset":8464},"end":{"line":256,"column":2,"offset":8465},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"解释","position":{"start":{"line":256,"column":5,"offset":8468},"end":{"line":256,"column":7,"offset":8470},"indent":[]}}],"position":{"start":{"line":256,"column":5,"offset":8468},"end":{"line":256,"column":7,"offset":8470},"indent":[]}}],"position":{"start":{"line":256,"column":1,"offset":8464},"end":{"line":256,"column":7,"offset":8470},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"0x00","position":{"start":{"line":258,"column":1,"offset":8475},"end":{"line":258,"column":5,"offset":8479},"indent":[]}}],"position":{"start":{"line":258,"column":1,"offset":8475},"end":{"line":258,"column":5,"offset":8479},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"代表此分区激活状态(80 才是代表激活)","position":{"start":{"line":258,"column":8,"offset":8482},"end":{"line":258,"column":28,"offset":8502},"indent":[]}}],"position":{"start":{"line":258,"column":8,"offset":8482},"end":{"line":258,"column":28,"offset":8502},"indent":[]}}],"position":{"start":{"line":258,"column":1,"offset":8475},"end":{"line":258,"column":28,"offset":8502},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"0x00","position":{"start":{"line":259,"column":1,"offset":8503},"end":{"line":259,"column":5,"offset":8507},"indent":[]}}],"position":{"start":{"line":259,"column":1,"offset":8503},"end":{"line":259,"column":5,"offset":8507},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"起始 Cylinder","position":{"start":{"line":259,"column":8,"offset":8510},"end":{"line":259,"column":19,"offset":8521},"indent":[]}}],"position":{"start":{"line":259,"column":8,"offset":8510},"end":{"line":259,"column":19,"offset":8521},"indent":[]}}],"position":{"start":{"line":259,"column":1,"offset":8503},"end":{"line":259,"column":19,"offset":8521},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"0x01","position":{"start":{"line":260,"column":1,"offset":8522},"end":{"line":260,"column":5,"offset":8526},"indent":[]}}],"position":{"start":{"line":260,"column":1,"offset":8522},"end":{"line":260,"column":5,"offset":8526},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"起始 Head","position":{"start":{"line":260,"column":8,"offset":8529},"end":{"line":260,"column":15,"offset":8536},"indent":[]}}],"position":{"start":{"line":260,"column":8,"offset":8529},"end":{"line":260,"column":15,"offset":8536},"indent":[]}}],"position":{"start":{"line":260,"column":1,"offset":8522},"end":{"line":260,"column":15,"offset":8536},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"0x00","position":{"start":{"line":261,"column":1,"offset":8537},"end":{"line":261,"column":5,"offset":8541},"indent":[]}}],"position":{"start":{"line":261,"column":1,"offset":8537},"end":{"line":261,"column":5,"offset":8541},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"起始 Sector","position":{"start":{"line":261,"column":8,"offset":8544},"end":{"line":261,"column":17,"offset":8553},"indent":[]}}],"position":{"start":{"line":261,"column":8,"offset":8544},"end":{"line":261,"column":17,"offset":8553},"indent":[]}}],"position":{"start":{"line":261,"column":1,"offset":8537},"end":{"line":261,"column":17,"offset":8553},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"0xee","position":{"start":{"line":262,"column":1,"offset":8554},"end":{"line":262,"column":5,"offset":8558},"indent":[]}}],"position":{"start":{"line":262,"column":1,"offset":8554},"end":{"line":262,"column":5,"offset":8558},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"分区类型","position":{"start":{"line":262,"column":8,"offset":8561},"end":{"line":262,"column":12,"offset":8565},"indent":[]}}],"position":{"start":{"line":262,"column":8,"offset":8561},"end":{"line":262,"column":12,"offset":8565},"indent":[]}}],"position":{"start":{"line":262,"column":1,"offset":8554},"end":{"line":262,"column":12,"offset":8565},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"0xfe","position":{"start":{"line":263,"column":1,"offset":8566},"end":{"line":263,"column":5,"offset":8570},"indent":[]}}],"position":{"start":{"line":263,"column":1,"offset":8566},"end":{"line":263,"column":5,"offset":8570},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"结束 Cylinder","position":{"start":{"line":263,"column":8,"offset":8573},"end":{"line":263,"column":19,"offset":8584},"indent":[]}}],"position":{"start":{"line":263,"column":8,"offset":8573},"end":{"line":263,"column":19,"offset":8584},"indent":[]}}],"position":{"start":{"line":263,"column":1,"offset":8566},"end":{"line":263,"column":19,"offset":8584},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"0xff","position":{"start":{"line":264,"column":1,"offset":8585},"end":{"line":264,"column":5,"offset":8589},"indent":[]}}],"position":{"start":{"line":264,"column":1,"offset":8585},"end":{"line":264,"column":5,"offset":8589},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"结束 Head","position":{"start":{"line":264,"column":8,"offset":8592},"end":{"line":264,"column":15,"offset":8599},"indent":[]}}],"position":{"start":{"line":264,"column":8,"offset":8592},"end":{"line":264,"column":15,"offset":8599},"indent":[]}}],"position":{"start":{"line":264,"column":1,"offset":8585},"end":{"line":264,"column":15,"offset":8599},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"0xff","position":{"start":{"line":265,"column":1,"offset":8600},"end":{"line":265,"column":5,"offset":8604},"indent":[]}}],"position":{"start":{"line":265,"column":1,"offset":8600},"end":{"line":265,"column":5,"offset":8604},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"结束 Sector","position":{"start":{"line":265,"column":8,"offset":8607},"end":{"line":265,"column":17,"offset":8616},"indent":[]}}],"position":{"start":{"line":265,"column":8,"offset":8607},"end":{"line":265,"column":17,"offset":8616},"indent":[]}}],"position":{"start":{"line":265,"column":1,"offset":8600},"end":{"line":265,"column":17,"offset":8616},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"0x01000000","position":{"start":{"line":266,"column":1,"offset":8617},"end":{"line":266,"column":11,"offset":8627},"indent":[]}}],"position":{"start":{"line":266,"column":1,"offset":8617},"end":{"line":266,"column":11,"offset":8627},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"起始扇区的 LBA","position":{"start":{"line":266,"column":14,"offset":8630},"end":{"line":266,"column":23,"offset":8639},"indent":[]}}],"position":{"start":{"line":266,"column":14,"offset":8630},"end":{"line":266,"column":23,"offset":8639},"indent":[]}}],"position":{"start":{"line":266,"column":1,"offset":8617},"end":{"line":266,"column":23,"offset":8639},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"0xffff3f01","position":{"start":{"line":267,"column":1,"offset":8640},"end":{"line":267,"column":11,"offset":8650},"indent":[]}}],"position":{"start":{"line":267,"column":1,"offset":8640},"end":{"line":267,"column":11,"offset":8650},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"此分区的扇区数","position":{"start":{"line":267,"column":14,"offset":8653},"end":{"line":267,"column":21,"offset":8660},"indent":[]}}],"position":{"start":{"line":267,"column":14,"offset":8653},"end":{"line":267,"column":21,"offset":8660},"indent":[]}}],"position":{"start":{"line":267,"column":1,"offset":8640},"end":{"line":267,"column":21,"offset":8660},"indent":[]}}],"position":{"start":{"line":256,"column":1,"offset":8464},"end":{"line":267,"column":21,"offset":8660},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"由于 inter CPU 采用的是 ","position":{"start":{"line":269,"column":3,"offset":8664},"end":{"line":269,"column":21,"offset":8682},"indent":[]}},{"type":"link","title":null,"url":"https://baike.baidu.com/item/Little-Endian/4118225?fr=aladdin","children":[{"type":"text","value":"little endian","position":{"start":{"line":269,"column":22,"offset":8683},"end":{"line":269,"column":35,"offset":8696},"indent":[]}}],"position":{"start":{"line":269,"column":21,"offset":8682},"end":{"line":269,"column":99,"offset":8760},"indent":[]}},{"type":"text","value":"，所以在小于 2T 的磁盘上，分区总的字节数应该是 Hex 的 013fffff = Decimal 20971519 * 512，在大于 2T 的磁盘上，这个数始终算出来是 2T。 ","position":{"start":{"line":269,"column":99,"offset":8760},"end":{"line":269,"column":191,"offset":8852},"indent":[]}}],"position":{"start":{"line":269,"column":3,"offset":8664},"end":{"line":269,"column":191,"offset":8852},"indent":[]}}],"position":{"start":{"line":269,"column":1,"offset":8662},"end":{"line":269,"column":191,"offset":8852},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"0xee","position":{"start":{"line":271,"column":1,"offset":8854},"end":{"line":271,"column":7,"offset":8860},"indent":[]}},{"type":"text","value":" 的分区类型的作用是告诉其他 MBR 磁盘工具，这个磁盘是使用的 GPT 分区表，不会让它们识别为这是一块未分区的磁盘，并拒绝它们对磁盘进行操作，从而避免因为意外而删除分区的风险。","position":{"start":{"line":271,"column":7,"offset":8860},"end":{"line":271,"column":97,"offset":8950},"indent":[]}}],"position":{"start":{"line":271,"column":1,"offset":8854},"end":{"line":271,"column":97,"offset":8950},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"现在通过几种不同的方式来模拟 LAB 0 中 MBR 分区表信息损坏的场景，看看会发生什么：","position":{"start":{"line":273,"column":1,"offset":8952},"end":{"line":273,"column":47,"offset":8998},"indent":[]}}],"position":{"start":{"line":273,"column":1,"offset":8952},"end":{"line":273,"column":47,"offset":8998},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"1）dd < /dev/zero >/dev/sda bs=1 count=446","position":{"start":{"line":275,"column":3,"offset":9002},"end":{"line":275,"column":44,"offset":9043},"indent":[]}}],"position":{"start":{"line":275,"column":3,"offset":9002},"end":{"line":275,"column":44,"offset":9043},"indent":[]}}],"position":{"start":{"line":275,"column":1,"offset":9000},"end":{"line":275,"column":44,"offset":9043},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"2）dd < /dev/zero >/dev/sda bs=1 count=450","position":{"start":{"line":276,"column":3,"offset":9046},"end":{"line":276,"column":44,"offset":9087},"indent":[]}}],"position":{"start":{"line":276,"column":3,"offset":9046},"end":{"line":276,"column":44,"offset":9087},"indent":[]}}],"position":{"start":{"line":276,"column":1,"offset":9044},"end":{"line":276,"column":44,"offset":9087},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"3）dd < /dev/zero >/dev/sda bs=1 count=451","position":{"start":{"line":277,"column":3,"offset":9090},"end":{"line":277,"column":44,"offset":9131},"indent":[]}}],"position":{"start":{"line":277,"column":3,"offset":9090},"end":{"line":277,"column":44,"offset":9131},"indent":[]}}],"position":{"start":{"line":277,"column":1,"offset":9088},"end":{"line":277,"column":44,"offset":9131},"indent":[]}}],"position":{"start":{"line":275,"column":1,"offset":9000},"end":{"line":277,"column":44,"offset":9131},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"限于篇幅原因，这里只给出实验结果：","position":{"start":{"line":279,"column":1,"offset":9133},"end":{"line":279,"column":18,"offset":9150},"indent":[]}}],"position":{"start":{"line":279,"column":1,"offset":9133},"end":{"line":279,"column":18,"offset":9150},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"1）的情况下，系统能正常重启","position":{"start":{"line":281,"column":3,"offset":9154},"end":{"line":281,"column":17,"offset":9168},"indent":[]}}],"position":{"start":{"line":281,"column":3,"offset":9154},"end":{"line":281,"column":17,"offset":9168},"indent":[]}}],"position":{"start":{"line":281,"column":1,"offset":9152},"end":{"line":281,"column":17,"offset":9168},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"2）的情况下，系统能正常重启","position":{"start":{"line":282,"column":3,"offset":9171},"end":{"line":282,"column":17,"offset":9185},"indent":[]}}],"position":{"start":{"line":282,"column":3,"offset":9171},"end":{"line":282,"column":17,"offset":9185},"indent":[]}}],"position":{"start":{"line":282,"column":1,"offset":9169},"end":{"line":282,"column":17,"offset":9185},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"3）的情况下，系统不能正常重启，但系统可以认到一个空的分区表","position":{"start":{"line":283,"column":3,"offset":9188},"end":{"line":283,"column":33,"offset":9218},"indent":[]}}],"position":{"start":{"line":283,"column":3,"offset":9188},"end":{"line":283,"column":33,"offset":9218},"indent":[]}}],"position":{"start":{"line":283,"column":1,"offset":9186},"end":{"line":283,"column":33,"offset":9218},"indent":[]}}],"position":{"start":{"line":281,"column":1,"offset":9152},"end":{"line":283,"column":33,"offset":9218},"indent":[1,1]}},{"type":"code","lang":null,"meta":null,"value":"[root@base ~]# xxd -g1 -l 1 -s 450 /dev/sda  # 取出第 450 个字节\n00001c2: ee                                               .\n[root@base ~]# dd < /dev/zero >/dev/sda bs=1 count=451 # 清除前 451 个 字节\n记录了 451+0 的读入\n记录了 451+0 的写出\n451 字节 (451 B) 已复制，0.00159757 秒，282 kB / 秒\n[root@base ~]# xxd -g1 -l 1 -s 450 /dev/sda\n00001c2: 00                                               .\n[root@base ~]#","position":{"start":{"line":285,"column":1,"offset":9220},"end":{"line":295,"column":4,"offset":9606},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"其实这也间接证明了第 451 个 字节，分区表类型 ","position":{"start":{"line":298,"column":3,"offset":9611},"end":{"line":298,"column":29,"offset":9637},"indent":[]}},{"type":"inlineCode","value":"0xee","position":{"start":{"line":298,"column":29,"offset":9637},"end":{"line":298,"column":35,"offset":9643},"indent":[]}},{"type":"text","value":" 的作用，一旦清除了这个字节，系统就不能识别到这个磁盘是使用的 GPT 分区表，从而找不到有效分区（此时系统还能认到一个分区，因为 LBA0 里面本身就包含了一个分区表条目），也就无法正常启动，但清除前面的 450 个字节是不会影响磁盘的。","position":{"start":{"line":298,"column":35,"offset":9643},"end":{"line":298,"column":155,"offset":9763},"indent":[]}}],"position":{"start":{"line":298,"column":1,"offset":9609},"end":{"line":298,"column":157,"offset":9765},"indent":[]}}],"position":{"start":{"line":298,"column":1,"offset":9609},"end":{"line":298,"column":157,"offset":9765},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"那这种情况下如何修复？","position":{"start":{"line":300,"column":1,"offset":9767},"end":{"line":300,"column":12,"offset":9778},"indent":[]}}],"position":{"start":{"line":300,"column":1,"offset":9767},"end":{"line":300,"column":12,"offset":9778},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"还是进入修复模式，因为系统误识别这个是 MBR 分区表，但又读不到 bootcode 和有效的分区表，所以还是无法使用 ","position":{"start":{"line":302,"column":1,"offset":9780},"end":{"line":302,"column":61,"offset":9840},"indent":[]}},{"type":"inlineCode","value":"chroot","position":{"start":{"line":302,"column":61,"offset":9840},"end":{"line":302,"column":69,"offset":9848},"indent":[]}},{"type":"text","value":" 命令进入原来的根目录环境。我们可以在修复模式下使用十六进制编辑工具 ","position":{"start":{"line":302,"column":69,"offset":9848},"end":{"line":302,"column":104,"offset":9883},"indent":[]}},{"type":"inlineCode","value":"hexedit","position":{"start":{"line":302,"column":104,"offset":9883},"end":{"line":302,"column":113,"offset":9892},"indent":[]}},{"type":"text","value":"（当然也可以使用 ","position":{"start":{"line":302,"column":113,"offset":9892},"end":{"line":302,"column":122,"offset":9901},"indent":[]}},{"type":"inlineCode","value":"xdd","position":{"start":{"line":302,"column":122,"offset":9901},"end":{"line":302,"column":127,"offset":9906},"indent":[]}},{"type":"text","value":"、","position":{"start":{"line":302,"column":127,"offset":9906},"end":{"line":302,"column":128,"offset":9907},"indent":[]}},{"type":"inlineCode","value":"hexyl","position":{"start":{"line":302,"column":128,"offset":9907},"end":{"line":302,"column":135,"offset":9914},"indent":[]}},{"type":"text","value":"、","position":{"start":{"line":302,"column":135,"offset":9914},"end":{"line":302,"column":136,"offset":9915},"indent":[]}},{"type":"inlineCode","value":"ghex","position":{"start":{"line":302,"column":136,"offset":9915},"end":{"line":302,"column":142,"offset":9921},"indent":[]}},{"type":"text","value":"、","position":{"start":{"line":302,"column":142,"offset":9921},"end":{"line":302,"column":143,"offset":9922},"indent":[]}},{"type":"inlineCode","value":"okteta","position":{"start":{"line":302,"column":143,"offset":9922},"end":{"line":302,"column":151,"offset":9930},"indent":[]}},{"type":"text","value":"、","position":{"start":{"line":302,"column":151,"offset":9930},"end":{"line":302,"column":152,"offset":9931},"indent":[]}},{"type":"inlineCode","value":"wxhexeditor","position":{"start":{"line":302,"column":152,"offset":9931},"end":{"line":302,"column":165,"offset":9944},"indent":[]}},{"type":"text","value":"、","position":{"start":{"line":302,"column":165,"offset":9944},"end":{"line":302,"column":166,"offset":9945},"indent":[]}},{"type":"inlineCode","value":"hexcurse","position":{"start":{"line":302,"column":166,"offset":9945},"end":{"line":302,"column":176,"offset":9955},"indent":[]}},{"type":"text","value":"、","position":{"start":{"line":302,"column":176,"offset":9955},"end":{"line":302,"column":177,"offset":9956},"indent":[]}},{"type":"inlineCode","value":"hexer","position":{"start":{"line":302,"column":177,"offset":9956},"end":{"line":302,"column":184,"offset":9963},"indent":[]}},{"type":"text","value":" 等工具）手工编辑相应的字节，使系统识别到这个磁盘是 GPT 格式的分区表：","position":{"start":{"line":302,"column":184,"offset":9963},"end":{"line":302,"column":222,"offset":10001},"indent":[]}}],"position":{"start":{"line":302,"column":1,"offset":9780},"end":{"line":302,"column":222,"offset":10001},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"hexedit -s --color /dev/sda","position":{"start":{"line":304,"column":1,"offset":10003},"end":{"line":306,"column":4,"offset":10038},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"然后将第 451 个字节修改为 ","position":{"start":{"line":308,"column":1,"offset":10040},"end":{"line":308,"column":17,"offset":10056},"indent":[]}},{"type":"inlineCode","value":"ee","position":{"start":{"line":308,"column":17,"offset":10056},"end":{"line":308,"column":21,"offset":10060},"indent":[]}},{"type":"text","value":" 即可。","position":{"start":{"line":308,"column":21,"offset":10060},"end":{"line":308,"column":25,"offset":10064},"indent":[]}}],"position":{"start":{"line":308,"column":1,"offset":10040},"end":{"line":308,"column":25,"offset":10064},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"如果是清空了 LBA0 的全部 512 个字节，则还需修改 LBA 的起始信息，也就是将第 455、456、457 字节修改为 ","position":{"start":{"line":310,"column":3,"offset":10068},"end":{"line":310,"column":67,"offset":10132},"indent":[]}},{"type":"inlineCode","value":"010000","position":{"start":{"line":310,"column":67,"offset":10132},"end":{"line":310,"column":75,"offset":10140},"indent":[]}},{"type":"text","value":"，其余信息则无所谓。","position":{"start":{"line":310,"column":75,"offset":10140},"end":{"line":310,"column":85,"offset":10150},"indent":[]}}],"position":{"start":{"line":310,"column":3,"offset":10068},"end":{"line":310,"column":85,"offset":10150},"indent":[]}}],"position":{"start":{"line":310,"column":1,"offset":10066},"end":{"line":310,"column":85,"offset":10150},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://i.loli.net/2019/11/18/1vnrSbTjHg2xImf.png","alt":"hexedit-ee-lba.png","position":{"start":{"line":312,"column":1,"offset":10152},"end":{"line":312,"column":73,"offset":10224},"indent":[]}}],"position":{"start":{"line":312,"column":1,"offset":10152},"end":{"line":312,"column":73,"offset":10224},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"重启系统，可以正常启动。","position":{"start":{"line":314,"column":1,"offset":10226},"end":{"line":314,"column":13,"offset":10238},"indent":[]}}],"position":{"start":{"line":314,"column":1,"offset":10226},"end":{"line":314,"column":13,"offset":10238},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"2. LBA1","position":{"start":{"line":317,"column":6,"offset":10246},"end":{"line":317,"column":13,"offset":10253},"indent":[]}}],"position":{"start":{"line":317,"column":1,"offset":10241},"end":{"line":317,"column":13,"offset":10253},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"还是看上面的 GPT 分区结构图，LBA1 是 ","position":{"start":{"line":319,"column":1,"offset":10255},"end":{"line":319,"column":25,"offset":10279},"indent":[]}},{"type":"link","title":null,"url":"https://en.wikipedia.org/wiki/GUID_Partition_Table#Partition_table_header_(LBA_1)","children":[{"type":"text","value":"GPT 头","position":{"start":{"line":319,"column":26,"offset":10280},"end":{"line":319,"column":31,"offset":10285},"indent":[]}}],"position":{"start":{"line":319,"column":25,"offset":10279},"end":{"line":319,"column":115,"offset":10369},"indent":[]}},{"type":"text","value":"，其格式如下：","position":{"start":{"line":319,"column":115,"offset":10369},"end":{"line":319,"column":122,"offset":10376},"indent":[]}}],"position":{"start":{"line":319,"column":1,"offset":10255},"end":{"line":319,"column":122,"offset":10376},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://i.loli.net/2019/11/19/xqY4BR8jQhIHr2w.png","alt":"GPT-header-format.png","position":{"start":{"line":321,"column":1,"offset":10378},"end":{"line":321,"column":76,"offset":10453},"indent":[]}}],"position":{"start":{"line":321,"column":1,"offset":10378},"end":{"line":321,"column":76,"offset":10453},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"读取 LBA1 的 512 个字节：","position":{"start":{"line":323,"column":1,"offset":10455},"end":{"line":323,"column":19,"offset":10473},"indent":[]}}],"position":{"start":{"line":323,"column":1,"offset":10455},"end":{"line":323,"column":19,"offset":10473},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"[root@base ~]# xxd -g1 -l 512 -s 512 /dev/sda\n0000200: 45 46 49 20 50 41 52 54 00 00 01 00 5c 00 00 00  EFI PART....\\...\n0000210: fc 3c 8a 77 00 00 00 00 01 00 00 00 00 00 00 00  .<.w............\n0000220: ff ff 3f 01 00 00 00 00 22 00 00 00 00 00 00 00  ..?.....\".......\n0000230: de ff 3f 01 00 00 00 00 73 31 0f 65 2e 01 a5 49  ..?.....s1.e...I\n0000240: a2 02 70 48 3b d6 95 05 02 00 00 00 00 00 00 00  ..pH;...........\n0000250: 80 00 00 00 80 00 00 00 52 b2 04 ae 00 00 00 00  ........R.......\n0000260: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0000270: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0000280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0000290: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n00002a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n00002b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n00002c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n00002d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n00002e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n00002f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0000300: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0000310: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0000320: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0000330: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0000340: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0000350: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0000360: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0000370: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0000380: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0000390: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n00003a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n00003b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n00003c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n00003d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n00003e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n00003f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................","position":{"start":{"line":324,"column":1,"offset":10474},"end":{"line":358,"column":4,"offset":12927},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"对应拆解 GPT 头结构：","position":{"start":{"line":360,"column":1,"offset":12929},"end":{"line":360,"column":14,"offset":12942},"indent":[]}}],"position":{"start":{"line":360,"column":1,"offset":12929},"end":{"line":360,"column":14,"offset":12942},"indent":[]}},{"type":"table","align":[null,null,null,null],"children":[{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"相对字节偏移量(十六进制)","position":{"start":{"line":362,"column":1,"offset":12944},"end":{"line":362,"column":14,"offset":12957},"indent":[]}}],"position":{"start":{"line":362,"column":1,"offset":12944},"end":{"line":362,"column":14,"offset":12957},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"字节数","position":{"start":{"line":362,"column":16,"offset":12959},"end":{"line":362,"column":19,"offset":12962},"indent":[]}}],"position":{"start":{"line":362,"column":16,"offset":12959},"end":{"line":362,"column":19,"offset":12962},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"值","position":{"start":{"line":362,"column":22,"offset":12965},"end":{"line":362,"column":23,"offset":12966},"indent":[]}}],"position":{"start":{"line":362,"column":22,"offset":12965},"end":{"line":362,"column":23,"offset":12966},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"说明(整数皆以 little endian 方式表示)","position":{"start":{"line":362,"column":26,"offset":12969},"end":{"line":362,"column":53,"offset":12996},"indent":[]}}],"position":{"start":{"line":362,"column":26,"offset":12969},"end":{"line":362,"column":53,"offset":12996},"indent":[]}}],"position":{"start":{"line":362,"column":1,"offset":12944},"end":{"line":362,"column":53,"offset":12996},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"00～07","position":{"start":{"line":364,"column":1,"offset":13005},"end":{"line":364,"column":6,"offset":13010},"indent":[]}}],"position":{"start":{"line":364,"column":1,"offset":13005},"end":{"line":364,"column":6,"offset":13010},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"8","position":{"start":{"line":364,"column":9,"offset":13013},"end":{"line":364,"column":10,"offset":13014},"indent":[]}}],"position":{"start":{"line":364,"column":9,"offset":13013},"end":{"line":364,"column":10,"offset":13014},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"45 46 49 20 50 41 52 54","position":{"start":{"line":364,"column":13,"offset":13017},"end":{"line":364,"column":36,"offset":13040},"indent":[]}}],"position":{"start":{"line":364,"column":13,"offset":13017},"end":{"line":364,"column":36,"offset":13040},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"GPT 头签名，(ASCII 码为 \"EFI PART\")","position":{"start":{"line":364,"column":38,"offset":13042},"end":{"line":364,"column":67,"offset":13071},"indent":[]}}],"position":{"start":{"line":364,"column":38,"offset":13042},"end":{"line":364,"column":67,"offset":13071},"indent":[]}}],"position":{"start":{"line":364,"column":1,"offset":13005},"end":{"line":364,"column":67,"offset":13071},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"08～0B","position":{"start":{"line":365,"column":1,"offset":13072},"end":{"line":365,"column":6,"offset":13077},"indent":[]}}],"position":{"start":{"line":365,"column":1,"offset":13072},"end":{"line":365,"column":6,"offset":13077},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"4","position":{"start":{"line":365,"column":9,"offset":13080},"end":{"line":365,"column":10,"offset":13081},"indent":[]}}],"position":{"start":{"line":365,"column":9,"offset":13080},"end":{"line":365,"column":10,"offset":13081},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"00 00 01 00","position":{"start":{"line":365,"column":13,"offset":13084},"end":{"line":365,"column":24,"offset":13095},"indent":[]}}],"position":{"start":{"line":365,"column":13,"offset":13084},"end":{"line":365,"column":24,"offset":13095},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"版本号，目前是 1.0 版","position":{"start":{"line":365,"column":27,"offset":13098},"end":{"line":365,"column":40,"offset":13111},"indent":[]}}],"position":{"start":{"line":365,"column":27,"offset":13098},"end":{"line":365,"column":40,"offset":13111},"indent":[]}}],"position":{"start":{"line":365,"column":1,"offset":13072},"end":{"line":365,"column":40,"offset":13111},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"0C～0F","position":{"start":{"line":366,"column":1,"offset":13112},"end":{"line":366,"column":6,"offset":13117},"indent":[]}}],"position":{"start":{"line":366,"column":1,"offset":13112},"end":{"line":366,"column":6,"offset":13117},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"4","position":{"start":{"line":366,"column":9,"offset":13120},"end":{"line":366,"column":10,"offset":13121},"indent":[]}}],"position":{"start":{"line":366,"column":9,"offset":13120},"end":{"line":366,"column":10,"offset":13121},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"5c 00 00 00","position":{"start":{"line":366,"column":13,"offset":13124},"end":{"line":366,"column":24,"offset":13135},"indent":[]}}],"position":{"start":{"line":366,"column":13,"offset":13124},"end":{"line":366,"column":24,"offset":13135},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"GPT 头的大小(字节数)，也就是 92 字节。","position":{"start":{"line":366,"column":26,"offset":13137},"end":{"line":366,"column":50,"offset":13161},"indent":[]}}],"position":{"start":{"line":366,"column":26,"offset":13137},"end":{"line":366,"column":50,"offset":13161},"indent":[]}}],"position":{"start":{"line":366,"column":1,"offset":13112},"end":{"line":366,"column":50,"offset":13161},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"10～13","position":{"start":{"line":367,"column":1,"offset":13162},"end":{"line":367,"column":6,"offset":13167},"indent":[]}}],"position":{"start":{"line":367,"column":1,"offset":13162},"end":{"line":367,"column":6,"offset":13167},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"4","position":{"start":{"line":367,"column":9,"offset":13170},"end":{"line":367,"column":10,"offset":13171},"indent":[]}}],"position":{"start":{"line":367,"column":9,"offset":13170},"end":{"line":367,"column":10,"offset":13171},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"fc 3c 8a 77","position":{"start":{"line":367,"column":13,"offset":13174},"end":{"line":367,"column":24,"offset":13185},"indent":[]}}],"position":{"start":{"line":367,"column":13,"offset":13174},"end":{"line":367,"column":24,"offset":13185},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"GPT 头 CRC 校验和(计算时把这个字段本身看做零值)","position":{"start":{"line":367,"column":26,"offset":13187},"end":{"line":367,"column":55,"offset":13216},"indent":[]}}],"position":{"start":{"line":367,"column":26,"offset":13187},"end":{"line":367,"column":55,"offset":13216},"indent":[]}}],"position":{"start":{"line":367,"column":1,"offset":13162},"end":{"line":367,"column":55,"offset":13216},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"14～17","position":{"start":{"line":368,"column":1,"offset":13217},"end":{"line":368,"column":6,"offset":13222},"indent":[]}}],"position":{"start":{"line":368,"column":1,"offset":13217},"end":{"line":368,"column":6,"offset":13222},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"4","position":{"start":{"line":368,"column":9,"offset":13225},"end":{"line":368,"column":10,"offset":13226},"indent":[]}}],"position":{"start":{"line":368,"column":9,"offset":13225},"end":{"line":368,"column":10,"offset":13226},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"00 00 00 00","position":{"start":{"line":368,"column":13,"offset":13229},"end":{"line":368,"column":24,"offset":13240},"indent":[]}}],"position":{"start":{"line":368,"column":13,"offset":13229},"end":{"line":368,"column":24,"offset":13240},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"保留，必须为 0","position":{"start":{"line":368,"column":27,"offset":13243},"end":{"line":368,"column":35,"offset":13251},"indent":[]}}],"position":{"start":{"line":368,"column":27,"offset":13243},"end":{"line":368,"column":35,"offset":13251},"indent":[]}}],"position":{"start":{"line":368,"column":1,"offset":13217},"end":{"line":368,"column":35,"offset":13251},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"18～1F","position":{"start":{"line":369,"column":1,"offset":13252},"end":{"line":369,"column":6,"offset":13257},"indent":[]}}],"position":{"start":{"line":369,"column":1,"offset":13252},"end":{"line":369,"column":6,"offset":13257},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"8","position":{"start":{"line":369,"column":9,"offset":13260},"end":{"line":369,"column":10,"offset":13261},"indent":[]}}],"position":{"start":{"line":369,"column":9,"offset":13260},"end":{"line":369,"column":10,"offset":13261},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"01 00 00 00 00 00 00 00","position":{"start":{"line":369,"column":13,"offset":13264},"end":{"line":369,"column":36,"offset":13287},"indent":[]}}],"position":{"start":{"line":369,"column":13,"offset":13264},"end":{"line":369,"column":36,"offset":13287},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"EFI 信息区 (GPT 头) 的起始扇区号，也就是 LBA1。","position":{"start":{"line":369,"column":38,"offset":13289},"end":{"line":369,"column":70,"offset":13321},"indent":[]}}],"position":{"start":{"line":369,"column":38,"offset":13289},"end":{"line":369,"column":70,"offset":13321},"indent":[]}}],"position":{"start":{"line":369,"column":1,"offset":13252},"end":{"line":369,"column":70,"offset":13321},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"20～27","position":{"start":{"line":370,"column":1,"offset":13322},"end":{"line":370,"column":6,"offset":13327},"indent":[]}}],"position":{"start":{"line":370,"column":1,"offset":13322},"end":{"line":370,"column":6,"offset":13327},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"8","position":{"start":{"line":370,"column":9,"offset":13330},"end":{"line":370,"column":10,"offset":13331},"indent":[]}}],"position":{"start":{"line":370,"column":9,"offset":13330},"end":{"line":370,"column":10,"offset":13331},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"ff ff 3f 01 00 00 00 00","position":{"start":{"line":370,"column":13,"offset":13334},"end":{"line":370,"column":36,"offset":13357},"indent":[]}}],"position":{"start":{"line":370,"column":13,"offset":13334},"end":{"line":370,"column":36,"offset":13357},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"EFI 信息区 (GPT 头) 备份位置的扇区号，也就是 EFI 区域结束扇区号。通常是整个磁盘最末一个扇区。","position":{"start":{"line":370,"column":38,"offset":13359},"end":{"line":370,"column":93,"offset":13414},"indent":[]}}],"position":{"start":{"line":370,"column":38,"offset":13359},"end":{"line":370,"column":93,"offset":13414},"indent":[]}}],"position":{"start":{"line":370,"column":1,"offset":13322},"end":{"line":370,"column":93,"offset":13414},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"28～2F","position":{"start":{"line":371,"column":1,"offset":13415},"end":{"line":371,"column":6,"offset":13420},"indent":[]}}],"position":{"start":{"line":371,"column":1,"offset":13415},"end":{"line":371,"column":6,"offset":13420},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"8","position":{"start":{"line":371,"column":9,"offset":13423},"end":{"line":371,"column":10,"offset":13424},"indent":[]}}],"position":{"start":{"line":371,"column":9,"offset":13423},"end":{"line":371,"column":10,"offset":13424},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"22 00 00 00 00 00 00 00","position":{"start":{"line":371,"column":13,"offset":13427},"end":{"line":371,"column":36,"offset":13450},"indent":[]}}],"position":{"start":{"line":371,"column":13,"offset":13427},"end":{"line":371,"column":36,"offset":13450},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"GPT 分区区域的起始扇区号，也即是 LBA34。","position":{"start":{"line":371,"column":38,"offset":13452},"end":{"line":371,"column":63,"offset":13477},"indent":[]}}],"position":{"start":{"line":371,"column":38,"offset":13452},"end":{"line":371,"column":63,"offset":13477},"indent":[]}}],"position":{"start":{"line":371,"column":1,"offset":13415},"end":{"line":371,"column":63,"offset":13477},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"30～37","position":{"start":{"line":372,"column":1,"offset":13478},"end":{"line":372,"column":6,"offset":13483},"indent":[]}}],"position":{"start":{"line":372,"column":1,"offset":13478},"end":{"line":372,"column":6,"offset":13483},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"8","position":{"start":{"line":372,"column":9,"offset":13486},"end":{"line":372,"column":10,"offset":13487},"indent":[]}}],"position":{"start":{"line":372,"column":9,"offset":13486},"end":{"line":372,"column":10,"offset":13487},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"de ff 3f 01 00 00 00 00","position":{"start":{"line":372,"column":13,"offset":13490},"end":{"line":372,"column":36,"offset":13513},"indent":[]}}],"position":{"start":{"line":372,"column":13,"offset":13490},"end":{"line":372,"column":36,"offset":13513},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"GPT 分区区域的结束扇区号，通常是倒数第 34 扇区。","position":{"start":{"line":372,"column":38,"offset":13515},"end":{"line":372,"column":66,"offset":13543},"indent":[]}}],"position":{"start":{"line":372,"column":38,"offset":13515},"end":{"line":372,"column":66,"offset":13543},"indent":[]}}],"position":{"start":{"line":372,"column":1,"offset":13478},"end":{"line":372,"column":66,"offset":13543},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"38～47","position":{"start":{"line":373,"column":1,"offset":13544},"end":{"line":373,"column":6,"offset":13549},"indent":[]}}],"position":{"start":{"line":373,"column":1,"offset":13544},"end":{"line":373,"column":6,"offset":13549},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"16","position":{"start":{"line":373,"column":9,"offset":13552},"end":{"line":373,"column":11,"offset":13554},"indent":[]}}],"position":{"start":{"line":373,"column":9,"offset":13552},"end":{"line":373,"column":11,"offset":13554},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"73 31 0f 65 2e 01 a5 49 a2 02 70 48 3b d6 95 05","position":{"start":{"line":373,"column":14,"offset":13557},"end":{"line":373,"column":61,"offset":13604},"indent":[]}}],"position":{"start":{"line":373,"column":14,"offset":13557},"end":{"line":373,"column":61,"offset":13604},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"磁盘 GUID(全球唯一标识符，与 UUID 是同义词)","position":{"start":{"line":373,"column":64,"offset":13607},"end":{"line":373,"column":92,"offset":13635},"indent":[]}}],"position":{"start":{"line":373,"column":64,"offset":13607},"end":{"line":373,"column":92,"offset":13635},"indent":[]}}],"position":{"start":{"line":373,"column":1,"offset":13544},"end":{"line":373,"column":92,"offset":13635},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"48～4F","position":{"start":{"line":374,"column":1,"offset":13636},"end":{"line":374,"column":6,"offset":13641},"indent":[]}}],"position":{"start":{"line":374,"column":1,"offset":13636},"end":{"line":374,"column":6,"offset":13641},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"8","position":{"start":{"line":374,"column":9,"offset":13644},"end":{"line":374,"column":10,"offset":13645},"indent":[]}}],"position":{"start":{"line":374,"column":9,"offset":13644},"end":{"line":374,"column":10,"offset":13645},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"02 00 00 00 00 00 00 00","position":{"start":{"line":374,"column":13,"offset":13648},"end":{"line":374,"column":36,"offset":13671},"indent":[]}}],"position":{"start":{"line":374,"column":13,"offset":13648},"end":{"line":374,"column":36,"offset":13671},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"分区表起始扇区号，也就是 LBA2。","position":{"start":{"line":374,"column":39,"offset":13674},"end":{"line":374,"column":57,"offset":13692},"indent":[]}}],"position":{"start":{"line":374,"column":39,"offset":13674},"end":{"line":374,"column":57,"offset":13692},"indent":[]}}],"position":{"start":{"line":374,"column":1,"offset":13636},"end":{"line":374,"column":57,"offset":13692},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"50～53","position":{"start":{"line":375,"column":1,"offset":13693},"end":{"line":375,"column":6,"offset":13698},"indent":[]}}],"position":{"start":{"line":375,"column":1,"offset":13693},"end":{"line":375,"column":6,"offset":13698},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"4","position":{"start":{"line":375,"column":9,"offset":13701},"end":{"line":375,"column":10,"offset":13702},"indent":[]}}],"position":{"start":{"line":375,"column":9,"offset":13701},"end":{"line":375,"column":10,"offset":13702},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"80 00 00 00","position":{"start":{"line":375,"column":13,"offset":13705},"end":{"line":375,"column":24,"offset":13716},"indent":[]}}],"position":{"start":{"line":375,"column":13,"offset":13705},"end":{"line":375,"column":24,"offset":13716},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"分区表总项数，通常限定为，也就是 128 个。","position":{"start":{"line":375,"column":27,"offset":13719},"end":{"line":375,"column":50,"offset":13742},"indent":[]}}],"position":{"start":{"line":375,"column":27,"offset":13719},"end":{"line":375,"column":50,"offset":13742},"indent":[]}}],"position":{"start":{"line":375,"column":1,"offset":13693},"end":{"line":375,"column":50,"offset":13742},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"54～57","position":{"start":{"line":376,"column":1,"offset":13743},"end":{"line":376,"column":6,"offset":13748},"indent":[]}}],"position":{"start":{"line":376,"column":1,"offset":13743},"end":{"line":376,"column":6,"offset":13748},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"4","position":{"start":{"line":376,"column":9,"offset":13751},"end":{"line":376,"column":10,"offset":13752},"indent":[]}}],"position":{"start":{"line":376,"column":9,"offset":13751},"end":{"line":376,"column":10,"offset":13752},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"80 00 00 00","position":{"start":{"line":376,"column":13,"offset":13755},"end":{"line":376,"column":24,"offset":13766},"indent":[]}}],"position":{"start":{"line":376,"column":13,"offset":13755},"end":{"line":376,"column":24,"offset":13766},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"每个分区表项占用字节数，也就是 128 字节。","position":{"start":{"line":376,"column":27,"offset":13769},"end":{"line":376,"column":50,"offset":13792},"indent":[]}}],"position":{"start":{"line":376,"column":27,"offset":13769},"end":{"line":376,"column":50,"offset":13792},"indent":[]}}],"position":{"start":{"line":376,"column":1,"offset":13743},"end":{"line":376,"column":50,"offset":13792},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"58～5B","position":{"start":{"line":377,"column":1,"offset":13793},"end":{"line":377,"column":6,"offset":13798},"indent":[]}}],"position":{"start":{"line":377,"column":1,"offset":13793},"end":{"line":377,"column":6,"offset":13798},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"4","position":{"start":{"line":377,"column":9,"offset":13801},"end":{"line":377,"column":10,"offset":13802},"indent":[]}}],"position":{"start":{"line":377,"column":9,"offset":13801},"end":{"line":377,"column":10,"offset":13802},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"52 b2 04 ae","position":{"start":{"line":377,"column":13,"offset":13805},"end":{"line":377,"column":24,"offset":13816},"indent":[]}}],"position":{"start":{"line":377,"column":13,"offset":13805},"end":{"line":377,"column":24,"offset":13816},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"分区表 CRC 校验和","position":{"start":{"line":377,"column":27,"offset":13819},"end":{"line":377,"column":38,"offset":13830},"indent":[]}}],"position":{"start":{"line":377,"column":27,"offset":13819},"end":{"line":377,"column":38,"offset":13830},"indent":[]}}],"position":{"start":{"line":377,"column":1,"offset":13793},"end":{"line":377,"column":38,"offset":13830},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"5C～*","position":{"start":{"line":378,"column":1,"offset":13831},"end":{"line":378,"column":5,"offset":13835},"indent":[]}}],"position":{"start":{"line":378,"column":1,"offset":13831},"end":{"line":378,"column":5,"offset":13835},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"*","position":{"start":{"line":378,"column":6,"offset":13836},"end":{"line":378,"column":7,"offset":13837},"indent":[]}}],"position":{"start":{"line":378,"column":6,"offset":13836},"end":{"line":378,"column":7,"offset":13837},"indent":[]}},{"type":"tableCell","children":[],"position":{"start":{"line":378,"column":8,"offset":13838},"end":{"line":378,"column":8,"offset":13838},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"保留，通常是全零填充","position":{"start":{"line":378,"column":10,"offset":13840},"end":{"line":378,"column":20,"offset":13850},"indent":[]}}],"position":{"start":{"line":378,"column":10,"offset":13840},"end":{"line":378,"column":20,"offset":13850},"indent":[]}}],"position":{"start":{"line":378,"column":1,"offset":13831},"end":{"line":378,"column":20,"offset":13850},"indent":[]}}],"position":{"start":{"line":362,"column":1,"offset":12944},"end":{"line":378,"column":20,"offset":13850},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"可以看出 GPT 头中主要包含了磁盘的一些定义内容，如果清除掉 LBA1，系统能不能启动呢？","position":{"start":{"line":380,"column":1,"offset":13852},"end":{"line":380,"column":47,"offset":13898},"indent":[]}}],"position":{"start":{"line":380,"column":1,"offset":13852},"end":{"line":380,"column":47,"offset":13898},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"dd < /dev/zero >/dev/sda seek=512 bs=1 count=512","position":{"start":{"line":382,"column":1,"offset":13900},"end":{"line":384,"column":4,"offset":13956},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"实验结果是，系统完全可以正常启动，而且又会恢复成初始的值。探其原因，其实可以在上面的 GPT 分区结构图中发现，原来 GPT 头信息还在最后一个扇区中备份了一份，所以即使清空掉 LBA1，系统也不受影响，但如果把最后一个 LBA 也清空掉，那系统就无法启动了（其实只要清空前 8 个字节，系统都无法启动）。","position":{"start":{"line":386,"column":1,"offset":13958},"end":{"line":386,"column":154,"offset":14111},"indent":[]}}],"position":{"start":{"line":386,"column":1,"offset":13958},"end":{"line":386,"column":154,"offset":14111},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"先看看最后一个 LBA 的内容：","position":{"start":{"line":388,"column":1,"offset":14113},"end":{"line":388,"column":17,"offset":14129},"indent":[]}}],"position":{"start":{"line":388,"column":1,"offset":14113},"end":{"line":388,"column":17,"offset":14129},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"[root@base ~]# xxd -g1 -l 512 -s $((`blockdev --getsz /dev/sda` * 512 - 512)) /dev/sda\n27ffffe0045 46 49 20 50 41 52 54 00 00 01 00 5c 00 00 00  EFI PART....\\...\n27ffffe1051 ef 04 c8 00 00 00 00 ff ff 3f 01 00 00 00 00  Q.........?.....\n27ffffe2001 00 00 00 00 00 00 00 22 00 00 00 00 00 00 00  ........\".......\n27ffffe30de ff 3f 01 00 00 00 00 73 31 0f 65 2e 01 a5 49  ..?.....s1.e...I\n27ffffe40a2 02 70 48 3b d6 95 05 df ff 3f 01 00 00 00 00  ..pH;.....?.....\n27ffffe5080 00 00 00 80 00 00 00 52 b2 04 ae 00 00 00 00  ........R.......\n27ffffe6000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n27ffffe7000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n27ffffe8000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n27ffffe9000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n27ffffea000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n27ffffeb000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n27ffffec000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n27ffffed000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n27ffffee000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n27ffffef000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n27fffff0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n27fffff1000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n27fffff2000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n27fffff3000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n27fffff4000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n27fffff5000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n27fffff6000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n27fffff7000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n27fffff8000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n27fffff9000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n27fffffa000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n27fffffb000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n27fffffc000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n27fffffd000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n27fffffe000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n27ffffff000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................","position":{"start":{"line":389,"column":1,"offset":14130},"end":{"line":423,"column":4,"offset":16624},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"对比 LBA0，两者一模一样。","position":{"start":{"line":425,"column":1,"offset":16626},"end":{"line":425,"column":16,"offset":16641},"indent":[]}}],"position":{"start":{"line":425,"column":1,"offset":16626},"end":{"line":425,"column":16,"offset":16641},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"清除 LAB0 的前 8 个字节和最后一个 LBA：","position":{"start":{"line":427,"column":1,"offset":16643},"end":{"line":427,"column":27,"offset":16669},"indent":[]}}],"position":{"start":{"line":427,"column":1,"offset":16643},"end":{"line":427,"column":27,"offset":16669},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"dd < /dev/zero >/dev/sda seek=512 bs=1 count=8\ndd < /dev/zero >/dev/sda count=512 bs=1 seek=$((`blockdev --getsz /dev/sda` * 512 - 512))","position":{"start":{"line":428,"column":1,"offset":16670},"end":{"line":431,"column":4,"offset":16814},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"重启系统，无法启动。","position":{"start":{"line":433,"column":1,"offset":16816},"end":{"line":433,"column":11,"offset":16826},"indent":[]}}],"position":{"start":{"line":433,"column":1,"offset":16816},"end":{"line":433,"column":11,"offset":16826},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"操作前一定要备份。","position":{"start":{"line":435,"column":3,"offset":16830},"end":{"line":435,"column":12,"offset":16839},"indent":[]}}],"position":{"start":{"line":435,"column":3,"offset":16830},"end":{"line":435,"column":12,"offset":16839},"indent":[]}}],"position":{"start":{"line":435,"column":1,"offset":16828},"end":{"line":435,"column":12,"offset":16839},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"3. LBA2 ~ LBA33","position":{"start":{"line":437,"column":6,"offset":16846},"end":{"line":437,"column":21,"offset":16861},"indent":[]}}],"position":{"start":{"line":437,"column":1,"offset":16841},"end":{"line":437,"column":21,"offset":16861},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"接着再来看看分区表，还是根据 GPT 分区结构图，分区表一般是占用了 LBA2 - LBA33，这 32 个 LBA 里面包含了所有的分区表信息，但 GPT 的规范定义里面并没有定义一个分区条目占用多少个 LBA，所有不太方便单独找出某个分区的信息，这里以我实验环境为例，来看看 LBA2 - LBA33 里面到底包含了哪些信息。","position":{"start":{"line":439,"column":1,"offset":16863},"end":{"line":439,"column":166,"offset":17028},"indent":[]}}],"position":{"start":{"line":439,"column":1,"offset":16863},"end":{"line":439,"column":166,"offset":17028},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"由于后面都是 0，所以我只截取了前面 288 个字节：","position":{"start":{"line":441,"column":1,"offset":17030},"end":{"line":441,"column":28,"offset":17057},"indent":[]}}],"position":{"start":{"line":441,"column":1,"offset":17030},"end":{"line":441,"column":28,"offset":17057},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"[root@base ~]# xxd -g1 -l 288 -s 1024 /dev/sda\n0000400: 28 73 2a c1 1f f8 d2 11 ba 4b 00 a0 c9 3e c9 3b  (s*......K...>.;\n0000410: cf ba f1 85 2a 4e 81 4b a1 0d b4 4e 4f 41 b9 e8  ....*N.K...NOA..\n0000420: 00 08 00 00 00 00 00 00 ff 47 06 00 00 00 00 00  .........G......\n0000430: 00 00 00 00 00 00 00 00 45 00 46 00 49 00 20 00  ........E.F.I. .\n0000440: 53 00 79 00 73 00 74 00 65 00 6d 00 20 00 50 00  S.y.s.t.e.m. .P.\n0000450: 61 00 72 00 74 00 69 00 74 00 69 00 6f 00 6e 00  a.r.t.i.t.i.o.n.\n0000460: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0000470: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0000480: a2 a0 d0 eb e5 b9 33 44 87 c0 68 b6 b7 26 99 c7  ......3D..h..&..\n0000490: 53 4e 33 58 50 0c c6 47 8f 9f 3c ef 90 45 17 27  SN3XP..G..<..E.'\n00004a0: 00 48 06 00 00 00 00 00 ff 47 26 00 00 00 00 00  .H.......G&.....\n00004b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n00004c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n00004d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n00004e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n00004f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0000500: 79 d3 d6 e6 07 f5 c2 44 a2 3c 23 8f 2a 3d f9 28  y......D.<#.*=.(\n0000510: 20 06 80 7a e0 15 72 4a 92 26 eb f0 48 3f 30 b9   ..z..rJ.&..H?0.","position":{"start":{"line":442,"column":1,"offset":17058},"end":{"line":462,"column":4,"offset":18462},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"参考维基 ","position":{"start":{"line":464,"column":1,"offset":18464},"end":{"line":464,"column":6,"offset":18469},"indent":[]}},{"type":"link","title":null,"url":"https://en.wikipedia.org/wiki/GUID_Partition_Table#Partition_entries_(LBA_2–33)","children":[{"type":"text","value":"GPT 分区表条目","position":{"start":{"line":464,"column":7,"offset":18470},"end":{"line":464,"column":16,"offset":18479},"indent":[]}}],"position":{"start":{"line":464,"column":6,"offset":18469},"end":{"line":464,"column":98,"offset":18561},"indent":[]}},{"type":"text","value":"：","position":{"start":{"line":464,"column":98,"offset":18561},"end":{"line":464,"column":99,"offset":18562},"indent":[]}}],"position":{"start":{"line":464,"column":1,"offset":18464},"end":{"line":464,"column":99,"offset":18562},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://i.loli.net/2019/11/19/fAg3t9kdvurJT5e.png","alt":"GUID-partition-entry-format.png","position":{"start":{"line":466,"column":1,"offset":18564},"end":{"line":466,"column":86,"offset":18649},"indent":[]}}],"position":{"start":{"line":466,"column":1,"offset":18564},"end":{"line":466,"column":86,"offset":18649},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"再结合系统上的分区信息：","position":{"start":{"line":468,"column":1,"offset":18651},"end":{"line":468,"column":13,"offset":18663},"indent":[]}}],"position":{"start":{"line":468,"column":1,"offset":18651},"end":{"line":468,"column":13,"offset":18663},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"[root@base ~]# blkid -o export -p /dev/sda[1-3]\nDEVNAME=/dev/sda1\nSEC_TYPE=msdos\nUUID=A985-FEAE\nVERSION=FAT16\nTYPE=vfat\nUSAGE=filesystem\nPART_ENTRY_SCHEME=gpt\nPART_ENTRY_NAME=EFI System Partition\nPART_ENTRY_UUID=85f1bacf-4e2a-4b81-a10d-b44e4f41b9e8\nPART_ENTRY_TYPE=c12a7328-f81f-11d2-ba4b-00a0c93ec93b\nPART_ENTRY_NUMBER=1\nPART_ENTRY_OFFSET=2048\nPART_ENTRY_SIZE=409600\nPART_ENTRY_DISK=8:0\n\nDEVNAME=/dev/sda2\nUUID=a13803e2-b4bb-4039-8d72-afbc21ecae55\nTYPE=xfs\nUSAGE=filesystem\nPART_ENTRY_SCHEME=gpt\nPART_ENTRY_UUID=58334e53-0c50-47c6-8f9f-3cef90451727\nPART_ENTRY_TYPE=ebd0a0a2-b9e5-4433-87c0-68b6b72699c7\nPART_ENTRY_NUMBER=2\nPART_ENTRY_OFFSET=411648\nPART_ENTRY_SIZE=2097152\nPART_ENTRY_DISK=8:0\n\nDEVNAME=/dev/sda3\nUUID=9SqofC-60Gm-ibCH-XJ3f-m2FR-ESRy-zeHAuA\nVERSION=LVM2 001\nTYPE=LVM2_member\nUSAGE=raid\nPART_ENTRY_SCHEME=gpt\nPART_ENTRY_UUID=7a800620-15e0-4a72-9226-ebf0483f30b9\nPART_ENTRY_TYPE=e6d6d379-f507-44c2-a23c-238f2a3df928\nPART_ENTRY_NUMBER=3\nPART_ENTRY_OFFSET=2508800\nPART_ENTRY_SIZE=12587008\nPART_ENTRY_DISK=8:0","position":{"start":{"line":470,"column":1,"offset":18665},"end":{"line":511,"column":4,"offset":19691},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"对比两个结果，可以找到的信息包括：","position":{"start":{"line":513,"column":1,"offset":19693},"end":{"line":513,"column":18,"offset":19710},"indent":[]}}],"position":{"start":{"line":513,"column":1,"offset":19693},"end":{"line":513,"column":18,"offset":19710},"indent":[]}},{"type":"table","align":[null,null],"children":[{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"值","position":{"start":{"line":515,"column":1,"offset":19712},"end":{"line":515,"column":2,"offset":19713},"indent":[]}}],"position":{"start":{"line":515,"column":1,"offset":19712},"end":{"line":515,"column":2,"offset":19713},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"解释","position":{"start":{"line":515,"column":5,"offset":19716},"end":{"line":515,"column":7,"offset":19718},"indent":[]}}],"position":{"start":{"line":515,"column":5,"offset":19716},"end":{"line":515,"column":7,"offset":19718},"indent":[]}}],"position":{"start":{"line":515,"column":1,"offset":19712},"end":{"line":515,"column":7,"offset":19718},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"C12A7328-F81F-11D2-BA4B-00A0C93EC93B","position":{"start":{"line":517,"column":1,"offset":19723},"end":{"line":517,"column":37,"offset":19759},"indent":[]}}],"position":{"start":{"line":517,"column":1,"offset":19723},"end":{"line":517,"column":37,"offset":19759},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"用 GUID 表示的分区类型：EFI System partition","position":{"start":{"line":517,"column":40,"offset":19762},"end":{"line":517,"column":75,"offset":19797},"indent":[]}}],"position":{"start":{"line":517,"column":40,"offset":19762},"end":{"line":517,"column":75,"offset":19797},"indent":[]}}],"position":{"start":{"line":517,"column":1,"offset":19723},"end":{"line":517,"column":75,"offset":19797},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"EBD0A0A2-B9E5-4433-87C0-68B6B72699C7","position":{"start":{"line":518,"column":1,"offset":19798},"end":{"line":518,"column":37,"offset":19834},"indent":[]}}],"position":{"start":{"line":518,"column":1,"offset":19798},"end":{"line":518,"column":37,"offset":19834},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"用 GUID 表示的分区类型：Windows Basic data partition(","position":{"start":{"line":518,"column":40,"offset":19837},"end":{"line":518,"column":84,"offset":19881},"indent":[]}},{"type":"link","title":null,"url":"https://en.wikipedia.org/wiki/GUID_Partition_Table#cite_note-linwin-41","children":[{"type":"text","value":"参考这里","position":{"start":{"line":518,"column":85,"offset":19882},"end":{"line":518,"column":89,"offset":19886},"indent":[]}}],"position":{"start":{"line":518,"column":84,"offset":19881},"end":{"line":518,"column":162,"offset":19959},"indent":[]}},{"type":"text","value":"了解为什么是 Windows)","position":{"start":{"line":518,"column":162,"offset":19959},"end":{"line":518,"column":177,"offset":19974},"indent":[]}}],"position":{"start":{"line":518,"column":40,"offset":19837},"end":{"line":518,"column":177,"offset":19974},"indent":[]}}],"position":{"start":{"line":518,"column":1,"offset":19798},"end":{"line":518,"column":177,"offset":19974},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"e6d6d379-f507-44c2-a23c-238f2a3df928","position":{"start":{"line":519,"column":1,"offset":19975},"end":{"line":519,"column":37,"offset":20011},"indent":[]}}],"position":{"start":{"line":519,"column":1,"offset":19975},"end":{"line":519,"column":37,"offset":20011},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"用 GUID 表示的分区类型：Linux Logical Volume Manager (LVM) partition","position":{"start":{"line":519,"column":40,"offset":20014},"end":{"line":519,"column":99,"offset":20073},"indent":[]}}],"position":{"start":{"line":519,"column":40,"offset":20014},"end":{"line":519,"column":99,"offset":20073},"indent":[]}}],"position":{"start":{"line":519,"column":1,"offset":19975},"end":{"line":519,"column":99,"offset":20073},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"85f1bacf-4e2a-4b81-a10d-b44e4f41b9e8","position":{"start":{"line":520,"column":1,"offset":20074},"end":{"line":520,"column":37,"offset":20110},"indent":[]}}],"position":{"start":{"line":520,"column":1,"offset":20074},"end":{"line":520,"column":37,"offset":20110},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"分区 GUID","position":{"start":{"line":520,"column":40,"offset":20113},"end":{"line":520,"column":47,"offset":20120},"indent":[]}}],"position":{"start":{"line":520,"column":40,"offset":20113},"end":{"line":520,"column":47,"offset":20120},"indent":[]}}],"position":{"start":{"line":520,"column":1,"offset":20074},"end":{"line":520,"column":47,"offset":20120},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"58334e53-0c50-47c6-8f9f-3cef90451727","position":{"start":{"line":521,"column":1,"offset":20121},"end":{"line":521,"column":37,"offset":20157},"indent":[]}}],"position":{"start":{"line":521,"column":1,"offset":20121},"end":{"line":521,"column":37,"offset":20157},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"分区 GUID","position":{"start":{"line":521,"column":40,"offset":20160},"end":{"line":521,"column":47,"offset":20167},"indent":[]}}],"position":{"start":{"line":521,"column":40,"offset":20160},"end":{"line":521,"column":47,"offset":20167},"indent":[]}}],"position":{"start":{"line":521,"column":1,"offset":20121},"end":{"line":521,"column":47,"offset":20167},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"7a800620-15e0-4a72-9226-ebf0483f30b9","position":{"start":{"line":522,"column":1,"offset":20168},"end":{"line":522,"column":37,"offset":20204},"indent":[]}}],"position":{"start":{"line":522,"column":1,"offset":20168},"end":{"line":522,"column":37,"offset":20204},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"分区 GUID","position":{"start":{"line":522,"column":40,"offset":20207},"end":{"line":522,"column":47,"offset":20214},"indent":[]}}],"position":{"start":{"line":522,"column":40,"offset":20207},"end":{"line":522,"column":47,"offset":20214},"indent":[]}}],"position":{"start":{"line":522,"column":1,"offset":20168},"end":{"line":522,"column":47,"offset":20214},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"2048 / 409600","position":{"start":{"line":523,"column":1,"offset":20215},"end":{"line":523,"column":14,"offset":20228},"indent":[]}}],"position":{"start":{"line":523,"column":1,"offset":20215},"end":{"line":523,"column":14,"offset":20228},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"分区 1 起始 / 结束扇区号（LBA）：80 / 647ff","position":{"start":{"line":523,"column":17,"offset":20231},"end":{"line":523,"column":48,"offset":20262},"indent":[]}}],"position":{"start":{"line":523,"column":17,"offset":20231},"end":{"line":523,"column":48,"offset":20262},"indent":[]}}],"position":{"start":{"line":523,"column":1,"offset":20215},"end":{"line":523,"column":48,"offset":20262},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"411648 / 2097152","position":{"start":{"line":524,"column":1,"offset":20263},"end":{"line":524,"column":17,"offset":20279},"indent":[]}}],"position":{"start":{"line":524,"column":1,"offset":20263},"end":{"line":524,"column":17,"offset":20279},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"分区 2 起始 / 结束扇区号（LBA）：64800 / 2647ff","position":{"start":{"line":524,"column":20,"offset":20282},"end":{"line":524,"column":55,"offset":20317},"indent":[]}}],"position":{"start":{"line":524,"column":20,"offset":20282},"end":{"line":524,"column":55,"offset":20317},"indent":[]}}],"position":{"start":{"line":524,"column":1,"offset":20263},"end":{"line":524,"column":55,"offset":20317},"indent":[]}}],"position":{"start":{"line":515,"column":1,"offset":19712},"end":{"line":524,"column":55,"offset":20317},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"计算方法：起始 LBA = ./conhex.sh -d2x ","position":{"start":{"line":526,"column":3,"offset":20321},"end":{"line":526,"column":34,"offset":20352},"indent":[]}},{"type":"inlineCode","value":"echo $(( 411648 ))","position":{"start":{"line":526,"column":34,"offset":20352},"end":{"line":526,"column":54,"offset":20372},"indent":[]}},{"type":"text","value":"，结束 LBA = ./conhex.sh -d2x ","position":{"start":{"line":526,"column":54,"offset":20372},"end":{"line":526,"column":81,"offset":20399},"indent":[]}},{"type":"inlineCode","value":"echo $(( 411648+2097152-1 ))","position":{"start":{"line":526,"column":81,"offset":20399},"end":{"line":526,"column":111,"offset":20429},"indent":[]}}],"position":{"start":{"line":526,"column":3,"offset":20321},"end":{"line":526,"column":111,"offset":20429},"indent":[]}}],"position":{"start":{"line":526,"column":1,"offset":20319},"end":{"line":526,"column":111,"offset":20429},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"到这里就基本说完了整个分区上的内容，因为 LBA-1 ~ LBA-33 的内容是 LBA1 ~ LBA33 的备份，剩下 LBA34 ~ LBA-34 是真正分配个分区存储数据的位置。","position":{"start":{"line":528,"column":1,"offset":20431},"end":{"line":528,"column":93,"offset":20523},"indent":[]}}],"position":{"start":{"line":528,"column":1,"offset":20431},"end":{"line":528,"column":93,"offset":20523},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"4. 总结","position":{"start":{"line":532,"column":6,"offset":20532},"end":{"line":532,"column":11,"offset":20537},"indent":[]}}],"position":{"start":{"line":532,"column":1,"offset":20527},"end":{"line":532,"column":11,"offset":20537},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"了解了 GPT 分区的结构后，总结的修复方法：","position":{"start":{"line":534,"column":1,"offset":20539},"end":{"line":534,"column":24,"offset":20562},"indent":[]}}],"position":{"start":{"line":534,"column":1,"offset":20539},"end":{"line":534,"column":24,"offset":20562},"indent":[]}},{"type":"table","align":[null,null],"children":[{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"故障","position":{"start":{"line":536,"column":1,"offset":20564},"end":{"line":536,"column":3,"offset":20566},"indent":[]}}],"position":{"start":{"line":536,"column":1,"offset":20564},"end":{"line":536,"column":3,"offset":20566},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"修复","position":{"start":{"line":536,"column":6,"offset":20569},"end":{"line":536,"column":8,"offset":20571},"indent":[]}}],"position":{"start":{"line":536,"column":6,"offset":20569},"end":{"line":536,"column":8,"offset":20571},"indent":[]}}],"position":{"start":{"line":536,"column":1,"offset":20564},"end":{"line":536,"column":8,"offset":20571},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"LBA0 损坏","position":{"start":{"line":538,"column":1,"offset":20576},"end":{"line":538,"column":8,"offset":20583},"indent":[]}}],"position":{"start":{"line":538,"column":1,"offset":20576},"end":{"line":538,"column":8,"offset":20583},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"手动修改 LAB0 的第 451、455、456、457 字节","position":{"start":{"line":538,"column":11,"offset":20586},"end":{"line":538,"column":42,"offset":20617},"indent":[]}}],"position":{"start":{"line":538,"column":11,"offset":20586},"end":{"line":538,"column":42,"offset":20617},"indent":[]}}],"position":{"start":{"line":538,"column":1,"offset":20576},"end":{"line":538,"column":42,"offset":20617},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"LBA1 损坏","position":{"start":{"line":539,"column":1,"offset":20618},"end":{"line":539,"column":8,"offset":20625},"indent":[]}}],"position":{"start":{"line":539,"column":1,"offset":20618},"end":{"line":539,"column":8,"offset":20625},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"从 LBA1 备份恢复","position":{"start":{"line":539,"column":11,"offset":20628},"end":{"line":539,"column":22,"offset":20639},"indent":[]}}],"position":{"start":{"line":539,"column":11,"offset":20628},"end":{"line":539,"column":22,"offset":20639},"indent":[]}}],"position":{"start":{"line":539,"column":1,"offset":20618},"end":{"line":539,"column":22,"offset":20639},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"LBA2 ~ LBA33 损坏","position":{"start":{"line":540,"column":1,"offset":20640},"end":{"line":540,"column":16,"offset":20655},"indent":[]}}],"position":{"start":{"line":540,"column":1,"offset":20640},"end":{"line":540,"column":16,"offset":20655},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"从 LBA2 ~ LBA33 备份恢复","position":{"start":{"line":540,"column":19,"offset":20658},"end":{"line":540,"column":38,"offset":20677},"indent":[]}}],"position":{"start":{"line":540,"column":19,"offset":20658},"end":{"line":540,"column":38,"offset":20677},"indent":[]}}],"position":{"start":{"line":540,"column":1,"offset":20640},"end":{"line":540,"column":38,"offset":20677},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"所有 LBA 备份同时损坏","position":{"start":{"line":541,"column":1,"offset":20678},"end":{"line":541,"column":14,"offset":20691},"indent":[]}}],"position":{"start":{"line":541,"column":1,"offset":20678},"end":{"line":541,"column":14,"offset":20691},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"根据日常的备份信息，手工去修改对应 LBA 中的字节","position":{"start":{"line":541,"column":17,"offset":20694},"end":{"line":541,"column":43,"offset":20720},"indent":[]}}],"position":{"start":{"line":541,"column":17,"offset":20694},"end":{"line":541,"column":43,"offset":20720},"indent":[]}}],"position":{"start":{"line":541,"column":1,"offset":20678},"end":{"line":541,"column":43,"offset":20720},"indent":[]}}],"position":{"start":{"line":536,"column":1,"offset":20564},"end":{"line":541,"column":43,"offset":20720},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"实在不知道怎么去手动修复，试试用其他工具来自动恢复，比如 ","position":{"start":{"line":543,"column":1,"offset":20722},"end":{"line":543,"column":30,"offset":20751},"indent":[]}},{"type":"inlineCode","value":"gpart","position":{"start":{"line":543,"column":30,"offset":20751},"end":{"line":543,"column":37,"offset":20758},"indent":[]}},{"type":"text","value":"、","position":{"start":{"line":543,"column":37,"offset":20758},"end":{"line":543,"column":38,"offset":20759},"indent":[]}},{"type":"inlineCode","value":"gdisk","position":{"start":{"line":543,"column":38,"offset":20759},"end":{"line":543,"column":45,"offset":20766},"indent":[]}},{"type":"text","value":"、","position":{"start":{"line":543,"column":45,"offset":20766},"end":{"line":543,"column":46,"offset":20767},"indent":[]}},{"type":"inlineCode","value":"sgdisk","position":{"start":{"line":543,"column":46,"offset":20767},"end":{"line":543,"column":54,"offset":20775},"indent":[]}},{"type":"text","value":" 等。","position":{"start":{"line":543,"column":54,"offset":20775},"end":{"line":543,"column":57,"offset":20778},"indent":[]}}],"position":{"start":{"line":543,"column":1,"offset":20722},"end":{"line":543,"column":57,"offset":20778},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"附录","position":{"start":{"line":552,"column":4,"offset":20790},"end":{"line":552,"column":6,"offset":20792},"indent":[]}}],"position":{"start":{"line":552,"column":1,"offset":20787},"end":{"line":552,"column":6,"offset":20792},"indent":[]}},{"type":"blockquote","children":[{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"十六进制和十进制互相转换的 shell 脚本 conhex.sh","position":{"start":{"line":554,"column":6,"offset":20799},"end":{"line":554,"column":38,"offset":20831},"indent":[]}}],"position":{"start":{"line":554,"column":6,"offset":20799},"end":{"line":554,"column":38,"offset":20831},"indent":[]}}],"position":{"start":{"line":554,"column":3,"offset":20796},"end":{"line":554,"column":38,"offset":20831},"indent":[]}}],"position":{"start":{"line":554,"column":3,"offset":20796},"end":{"line":554,"column":38,"offset":20831},"indent":[]}}],"position":{"start":{"line":554,"column":1,"offset":20794},"end":{"line":554,"column":38,"offset":20831},"indent":[]}},{"type":"code","lang":"shell","meta":null,"value":"#!/bin/bash\n\n# validate sufficient input\ntest -n \"$1\" && test -n \"$2\" || {\n    printf \"\\n error: insufficient input \\n usage: %s -d2x DecimalNum\\n        %s -x2d HexDecimalNum\\n\" \"${0//*\\//}\" \"${0//*\\//}\"\n\n    exit 1\n}\n\n# Convert hexadecimal to decimal\n\n# with bash:\n# $ echo $((16#FF))\n\n# with bc:\n# $ echo \"ibase=16; FF\" | bc\n\n# with perl:\n# $ perl -le 'print hex(\"FF\");'\n\n# with printf :\n# $ printf \"%d\\n\" 0xFF\n\n# with python:\n# $ python -c 'print(int(\"FF\", 16))'\nxd() {\n    printf \"16->10 $(( 0x${1} ))\\n\\n\"\n}\n\n# Convert decimal to hexadecimal\ndx() {\n    printf \"10->16 %x\\n\\n\" ${1}\n}\n\n# Convert string to ASCII\n# printf \"%d\\n\" \"'A\"\n\ncase \"${1}\" in\n    -d2x)\n        dx $2\n        ;;\n    -x2d)\n        xd $2\n        ;;\n    -h)\n        printf \"usage: %s -d2x DecimalNum\\n               -x2d HexDecimalNum\\n\" \"${0//*\\//}\"\n        ;;\n    *)\n        echo \"Invalid Paramter: ${1}, must be -d2x or -x2d\"\n        exit;\nesac","position":{"start":{"line":557,"column":1,"offset":20834},"end":{"line":609,"column":4,"offset":21767},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"blockquote","children":[{"type":"list","ordered":true,"start":2,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"不重启识别新分区","position":{"start":{"line":611,"column":6,"offset":21774},"end":{"line":611,"column":14,"offset":21782},"indent":[]}}],"position":{"start":{"line":611,"column":6,"offset":21774},"end":{"line":611,"column":14,"offset":21782},"indent":[]}}],"position":{"start":{"line":611,"column":3,"offset":21771},"end":{"line":611,"column":14,"offset":21782},"indent":[]}}],"position":{"start":{"line":611,"column":3,"offset":21771},"end":{"line":611,"column":14,"offset":21782},"indent":[]}}],"position":{"start":{"line":611,"column":1,"offset":21769},"end":{"line":611,"column":14,"offset":21782},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"partx -av /dev/vda","position":{"start":{"line":614,"column":1,"offset":21785},"end":{"line":616,"column":4,"offset":21811},"indent":[1,1]}},{"type":"blockquote","children":[{"type":"list","ordered":true,"start":3,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://www.lulinux.com/jiaocheng/190.html","children":[{"type":"text","value":"利用 python 获取磁盘分区的起始扇区的 LBA 以及磁盘分区大小","position":{"start":{"line":618,"column":7,"offset":21819},"end":{"line":618,"column":42,"offset":21854},"indent":[]}}],"position":{"start":{"line":618,"column":6,"offset":21818},"end":{"line":618,"column":87,"offset":21899},"indent":[]}}],"position":{"start":{"line":618,"column":6,"offset":21818},"end":{"line":618,"column":87,"offset":21899},"indent":[]}}],"position":{"start":{"line":618,"column":3,"offset":21815},"end":{"line":618,"column":87,"offset":21899},"indent":[]}}],"position":{"start":{"line":618,"column":3,"offset":21815},"end":{"line":618,"column":87,"offset":21899},"indent":[]}}],"position":{"start":{"line":618,"column":1,"offset":21813},"end":{"line":618,"column":87,"offset":21899},"indent":[]}},{"type":"blockquote","children":[{"type":"list","ordered":true,"start":4,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"GPT 和 MBR 下的备份","position":{"start":{"line":621,"column":6,"offset":21907},"end":{"line":621,"column":20,"offset":21921},"indent":[]}}],"position":{"start":{"line":621,"column":6,"offset":21907},"end":{"line":621,"column":20,"offset":21921},"indent":[]}}],"position":{"start":{"line":621,"column":3,"offset":21904},"end":{"line":621,"column":20,"offset":21921},"indent":[]}}],"position":{"start":{"line":621,"column":3,"offset":21904},"end":{"line":621,"column":20,"offset":21921},"indent":[]}}],"position":{"start":{"line":621,"column":1,"offset":21902},"end":{"line":621,"column":20,"offset":21921},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"MBR 备份和恢复","position":{"start":{"line":623,"column":8,"offset":21930},"end":{"line":623,"column":17,"offset":21939},"indent":[]}}],"position":{"start":{"line":623,"column":1,"offset":21923},"end":{"line":623,"column":17,"offset":21939},"indent":[]}},{"type":"code","lang":"shell","meta":null,"value":"# 备份 MBR\ndd if=/dev/sda of=/backup/mbr.backup  bs=1  count=512\n# 恢复 MBR\ndd if=/backup/mbr.backup  of=/dev/sda","position":{"start":{"line":624,"column":1,"offset":21940},"end":{"line":629,"column":4,"offset":22062},"indent":[1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"分区表备份和恢复","position":{"start":{"line":630,"column":8,"offset":22070},"end":{"line":630,"column":16,"offset":22078},"indent":[]}}],"position":{"start":{"line":630,"column":1,"offset":22063},"end":{"line":630,"column":16,"offset":22078},"indent":[]}},{"type":"code","lang":"shell","meta":null,"value":"# 备份分区表\ndd if=/dev/sda of=/backup/partition_table.bak bs=1 count=64 skip=446\n# 恢复分区表\ndd if=/backup/partition_table.bak of=/dev/sda bs=1 seek=446","position":{"start":{"line":631,"column":1,"offset":22079},"end":{"line":636,"column":4,"offset":22236},"indent":[1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"GPT 备份和恢复","position":{"start":{"line":638,"column":8,"offset":22245},"end":{"line":638,"column":17,"offset":22254},"indent":[]}}],"position":{"start":{"line":638,"column":1,"offset":22238},"end":{"line":638,"column":17,"offset":22254},"indent":[]}},{"type":"code","lang":"shell","meta":null,"value":"# 备份 Protective MBR\ndd if=/dev/sda of=gpt-mbr bs=512 count=1\n# 恢复 Protective MBR\ndd if=gpt-mbr of=/dev/sda bs=512 count=1\n\n# 备份完整的 GPT 分区表\ndd if=/dev/sda of=gpt-partition bs=512 count=34\n# 恢复完整的 GPT 分区表\ndd if=gpt--partition of=/dev/sda bs=512 count=34\n\n# 仅备份 GPT 头和 GPT 分区\ndd if=/dev/sda of=gpt-partition bs=512 skip=1 count=33\n# 恢复单独的 GPT 分区信息\ndd if=gpt-partition of=/dev/sda bs=512 skip=1 seek=1 count=33","position":{"start":{"line":639,"column":1,"offset":22255},"end":{"line":654,"column":4,"offset":22674},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"MBR和GPT分区表的结构及恢复方法\",\"date\":\"2021-06-20T00:00:00.000Z\",\"tags\":[\"分区表\",\"grub\",\"partition table\"]}","position":{"start":{"line":657,"column":1,"offset":22677},"end":{"line":657,"column":133,"offset":22809},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":657,"column":133,"offset":22809}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"MBR和GPT分区表的结构及恢复方法\",\n  \"date\": \"2021-06-20T00:00:00.000Z\",\n  \"tags\": [\"分区表\", \"grub\", \"partition table\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"\\u5728 Linux \\u7684\\u8FD0\\u7EF4\\u6545\\u969C\\u4E2D\\uFF0C\\u64CD\\u4F5C\\u7CFB\\u7EDF\\u65E0\\u6CD5\\u6B63\\u5E38\\u542F\\u52A8\\u7B97\\u662F\\u5176\\u4E2D\\u5E38\\u89C1\\u7684\\u4E00\\u7C7B\\uFF0C\\u4E5F\\u662F\\u5F71\\u54CD\\u6BD4\\u8F83\\u4E25\\u91CD\\u7684\\u4E00\\u7C7B\\u3002\\u672C\\u7BC7\\u4E3B\\u8981\\u4ECB\\u7ECD\\u5BFC\\u81F4\\u64CD\\u4F5C\\u7CFB\\u7EDF\\u4E0D\\u80FD\\u6B63\\u5E38\\u542F\\u52A8\\u7684\\u5176\\u4E2D\\u4E24\\u79CD\\u60C5\\u51B5\\uFF1A\\u542F\\u52A8\\u78C1\\u76D8\\u5206\\u533A\\u8868\\u635F\\u574F\\u548C grub \\u635F\\u574F\\u3002\"), mdx(\"p\", null, \"\\u8FD9\\u4E24\\u7C7B\\u60C5\\u51B5\\u6839\\u636E\\u57FA\\u7840\\u73AF\\u5883\\u7684\\u4E0D\\u540C\\uFF0C\\u53C8\\u53EF\\u4EE5\\u5206\\u4E3A \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"BIOS + MBR\"), \" \\u548C \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"UEFI + GPT\"), \" \\u3002\"), mdx(\"h2\", null, \"\\u4E00\\u3001BIOS + MBR\"), mdx(\"p\", null, \"\\u5728 \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://zh.wikipedia.org/wiki/BIOS\"\n  }, mdx(\"strong\", {\n    parentName: \"a\"\n  }, \"BIOS\")), \" \\u7684\\u542F\\u52A8\\u7C7B\\u578B\\u4E2D\\uFF0C\\u542F\\u52A8\\u78C1\\u76D8\\u7684\\u5206\\u533A\\u4FE1\\u606F\\u4E2D\\u662F\\u5B58\\u50A8\\u5728\\u78C1\\u76D8\\u5934\\u7684\\u7B2C\\u4E00\\u4E2A\\u6247\\u533A\\u4E2D\\uFF0C\\u8FD9\\u4E2A\\u6247\\u533A\\u901A\\u5E38\\u53EB\\u4F5C \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://en.wikipedia.org/wiki/Master_boot_record\"\n  }, mdx(\"strong\", {\n    parentName: \"a\"\n  }, \"MBR\")), \"\\uFF0CMBR \\u4E2D\\u4E3B\\u8981\\u5B58\\u50A8\\u4E86\\u8BE5\\u78C1\\u76D8\\u7684\\u5206\\u533A\\u8868\\u548C\\u542F\\u52A8\\u5F15\\u5BFC\\u8BB0\\u5F55\\uFF0C\\u5176\\u4E2D\\u5F15\\u5BFC\\u8BB0\\u5F55\\u5360\\u7528\\u4E86\\u524D\\u9762 446 \\u4E2A\\u5B57\\u8282\\uFF0C\\u800C\\u78C1\\u76D8\\u5206\\u533A\\u5219\\u5360\\u7528\\u7D27\\u968F\\u7684 64 \\u4E2A\\u5B57\\u8282\\u3002\"), mdx(\"p\", null, \"\\u6240\\u4EE5\\u6211\\u4EEC\\u53EF\\u4EE5\\u901A\\u8FC7\\u6E05\\u9664 MBR \\u524D 446 \\u4E2A\\u5B57\\u8282\\u6765\\u6A21\\u62DF\\u542F\\u52A8\\u8BB0\\u5F55\\u635F\\u574F\\u7684\\u573A\\u666F\\uFF0C\\u901A\\u8FC7\\u6E05\\u9664\\u524D 510 \\u4E2A\\u5B57\\u8282\\u6765\\u6A21\\u62DF\\u542F\\u52A8\\u8BB0\\u5F55\\u548C\\u78C1\\u76D8\\u5206\\u533A\\u90FD\\u635F\\u574F\\u7684\\u573A\\u666F\\u3002\"), mdx(\"h3\", null, \"1. \\u542F\\u52A8\\u8BB0\\u5F55\\u635F\\u574F\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"dd < /dev/zero >/dev/sda bs=1 count=446\\n\")), mdx(\"p\", null, \"\\u542F\\u52A8\\u5931\\u8D25\\uFF0C\\u8FDB\\u5165\\u5230\\u4FEE\\u590D\\u6A21\\u5F0F\\u5982\\u4E0B\\u56FE\\uFF1A\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"./potions.jpg\",\n    \"alt\": \"boot-Record-damage\"\n  })), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://i.loli.net/2019/11/16/IQ8dGRAwf1bosH6.png\",\n    \"alt\": \"boot-Record-damage.png\"\n  })), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\u6CE8\\u610F\\uFF0C\\u8FD9\\u4E2A\\u65F6\\u5019\\u662F\\u53EF\\u4EE5\\u901A\\u8FC7 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"chroot /mnt/sysimage\"), \" \\u5207\\u6362\\u5230\\u539F\\u6765\\u7684 root \\u5206\\u533A\\u7684\\uFF0C\\u56E0\\u4E3A\\u5206\\u533A\\u4FE1\\u606F\\u8FD8\\u5728\\u3002\")), mdx(\"p\", null, \"\\u6267\\u884C\\u4EE5\\u4E0B\\u547D\\u4EE4\\u91CD\\u65B0\\u4FEE\\u590D\\u542F\\u52A8\\u5206\\u533A\\uFF1A\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"grub2-install /dev/sda\\n\")), mdx(\"p\", null, \"\\u91CD\\u542F\\u6062\\u590D\\u6B63\\u5E38\\u3002\"), mdx(\"h3\", null, \"2. \\u542F\\u52A8\\u8BB0\\u5F55\\u548C\\u78C1\\u76D8\\u5206\\u533A\\u635F\\u574F\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"dd < /dev/zero >/dev/sda bs=1 count=510\\n\")), mdx(\"p\", null, \"\\u542F\\u52A8\\u5931\\u8D25\\uFF0C\\u8FDB\\u5165\\u5230\\u4FEE\\u590D\\u6A21\\u5F0F\\u5982\\u4E0B\\u56FE\\uFF1A\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://i.loli.net/2019/11/16/K8tw5ZbJF6fPGH1.png\",\n    \"alt\": \"partition-table-damage.png\"\n  })), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\u6CE8\\u610F\\uFF0C\\u8FD9\\u4E2A\\u65F6\\u5019\\u5DF2\\u7ECF\\u4E0D\\u80FD\\u901A\\u8FC7 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"chroot /mnt/sysimage\"), \" \\u5207\\u6362\\u5230\\u539F\\u6765\\u7684 root \\u5206\\u533A\\uFF0C\\u56E0\\u4E3A\\u5206\\u533A\\u4FE1\\u606F\\u4E5F\\u5DF2\\u7ECF\\u635F\\u574F\\u3002\")), mdx(\"p\", null, \"\\u9996\\u5148\\u7B2C\\u4E00\\u6B65\\u662F\\u8981\\u4FEE\\u590D\\u542F\\u52A8\\u5206\\u533A\\u8868\\uFF0C\\u53EF\\u4EE5\\u501F\\u52A9 \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.cgsecurity.org/wiki/TestDisk\"\n  }, mdx(\"strong\", {\n    parentName: \"a\"\n  }, \"testdisk\")), \" \\u5DE5\\u5177\\u3002\"), mdx(\"p\", null, \"\\u56E0\\u4E3A\\u7CFB\\u7EDF\\u5DF2\\u7ECF\\u4E0D\\u80FD\\u542F\\u52A8\\uFF0C\\u6240\\u4EE5\\u53EA\\u80FD\\u901A\\u8FC7\\u6302\\u8F7D\\u5149\\u9A71\\u6216 usb \\u7684\\u65B9\\u5F0F\\u5C06 \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.cgsecurity.org/wiki/TestDisk\"\n  }, mdx(\"strong\", {\n    parentName: \"a\"\n  }, \"testdisk\")), \" \\u5DE5\\u5177\\u6302\\u8F7D\\u5230\\u4FEE\\u590D\\u6A21\\u5F0F\\uFF0C\\u672C\\u7BC7\\u4E2D\\u4F7F\\u7528 \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://gparted.sourceforge.io/livecd.php\"\n  }, mdx(\"strong\", {\n    parentName: \"a\"\n  }, \"gparted\")), \" \\u7684 live \\u955C\\u50CF\\uFF0C\\u8FD9\\u91CC\\u9762\\u4E5F\\u5305\\u542B\\u4E86 testdisk \\u5DE5\\u5177\\uFF0C\\u5F53\\u7136\\u8FD8\\u53EF\\u4EE5\\u4F7F\\u7528 \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://en.altlinux.org/Rescue\"\n  }, mdx(\"strong\", {\n    parentName: \"a\"\n  }, \"ALT Linux\")), \" \\u548C \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://www.system-rescue-cd.org/Download/\"\n  }, mdx(\"strong\", {\n    parentName: \"a\"\n  }, \"systemrescuecd\")), \" \\u6216\\u5176\\u4ED6\\u5DE5\\u5177\\u3002\"), mdx(\"p\", null, \"\\u901A\\u8FC7 testdisk \\u4FEE\\u590D\\u5206\\u533A\\u8868\\u5F88\\u7B80\\u5355\\uFF0C\\u57FA\\u672C\\u5C31\\u662F\\u4E0B\\u4E00\\u6B65\\u4E0B\\u4E00\\u6B65\\u7684\\u50BB\\u74DC\\u5F0F\\u64CD\\u4F5C\\uFF0C\\u5982\\u679C\\u6709\\u95EE\\u9898\\u53EF\\u4EE5\\u53C2\\u8003 \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"(https://www.cgsecurity.org/wiki/TestDisk)\"\n  }, \"\\u5B98\\u65B9\\u7684\\u6587\\u6863\"), \" \\u64CD\\u4F5C\\u3002\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://i.loli.net/2019/11/16/9aJx34mCfKRdL7G.png\",\n    \"alt\": \"testdisk-recovery-patition-table.png\"\n  })), mdx(\"p\", null, \"\\u6062\\u590D\\u4E86\\u5206\\u533A\\u8868\\u540E\\u91CD\\u542F\\uFF0C\\u518D\\u6B21\\u8FDB\\u5165\\u4FEE\\u590D\\u6A21\\u5F0F\\uFF0C\\u53C8\\u89C1\\u5230\\u4E86\\u719F\\u6089\\u7684 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"chroot\"), \" \\u6A21\\u5F0F\\uFF0C\\u91CD\\u590D\\u4E0A\\u8282\\u64CD\\u4F5C\\uFF0C\\u5373\\u53EF\\u6B63\\u5E38\\u6062\\u590D\\u7CFB\\u7EDF\\u3002\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\u6709\\u65F6\\u6267\\u884C chroot \\u53EF\\u80FD\\u62A5\\u9519\\uFF1A\"), mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"failed to run command '/bin/bash': No such file or directory\")), mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\u8FD9\\u901A\\u5E38\\u662F\\u7531\\u4E8E\\u5728\\u4F60\\u7684 chroot \\u73AF\\u5883\\u4E2D\\u6CA1\\u6709 /bin/bash \\u7A0B\\u5E8F\\uFF0C\\u6216\\u5219\\u7F3A\\u5C11\\u6267\\u884C /bin/bash \\u7684\\u5E93\\u6587\\u4EF6\\uFF0C\\u53EF\\u4EE5\\u901A\\u8FC7 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ldd $( command -v bash )\"), \" \\u67E5\\u770B bash \\u4F9D\\u8D56\\u54EA\\u4E9B\\u5E93\\u6587\\u4EF6\\uFF0C\\u7136\\u540E\\u5C06\\u8FD9\\u4E9B\\u6587\\u4EF6 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"mount -o bind\"), \" \\u5230\\u4F60\\u7684 chroot \\u73AF\\u5883\\u4E2D\\uFF0C\\u6216\\u76F4\\u63A5 copy \\u5230 chroot \\u73AF\\u5883\\u4E2D\\u3002\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\u6CE8\\u610F\\uFF0C\\u5982\\u679C\\u542F\\u7528\\u4E86 SElinux\\uFF0C\\u5219\\u8FD8\\u8981\\u5B89\\u88C5 SELinux label\\uFF0C\\u5F53\\u7136\\u4E0D\\u5B89\\u88C5\\uFF0C\\u540E\\u9762\\u91CD\\u542F\\u7684\\u65F6\\u5019\\u7CFB\\u7EDF\\u4F1A\\u81EA\\u52A8\\u751F\\u6210\\uFF0C\\u4F46\\u4F1A\\u6839\\u636E\\u6587\\u4EF6\\u7CFB\\u7EDF\\u7684\\u5927\\u5C0F\\u82B1\\u8D39\\u4E00\\u5B9A\\u7684\\u65F6\\u95F4\\u3002\")), mdx(\"h3\", null, \"3. grub \\u635F\\u574F\"), mdx(\"p\", null, \"\\u5728\\u4E4B\\u524D\\u7684\\u53E6\\u4E00\\u7BC7\\u6587\\u7AE0 \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"www.google.com\"\n  }, \"Linux \\u542F\\u52A8\\u8FC7\\u7A0B\"), \" \\u4E2D\\u8BB2\\u5230\\uFF0C\\u670D\\u52A1\\u5668\\u627E\\u5230 MBR \\u7684\\u542F\\u52A8\\u8BB0\\u5F55\\u540E\\uFF0C\\u63A5\\u7740\\u4F1A\\u4F7F\\u7528 \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.gnu.org/software/grub/\"\n  }, mdx(\"strong\", {\n    parentName: \"a\"\n  }, \"grub\")), \" \\u6765\\u52A0\\u8F7D\\u5185\\u5B58\\u521D\\u59CB\\u955C\\u50CF\\uFF08initramfs\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"\\uFF09\\u548C\\u5185\\u6838\\u6587\\u4EF6\\uFF08vmlinuz\"), \"\\uFF09\\uFF0C\\u90A3\\u5982\\u679C \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.gnu.org/software/grub/\"\n  }, mdx(\"strong\", {\n    parentName: \"a\"\n  }, \"grub\")), \" \\u635F\\u574F\\u4E86\\u5982\\u4F55\\u4FEE\\u590D\\u5462\\uFF1F\"), mdx(\"p\", null, \"\\u5220\\u9664 grub \\u6587\\u4EF6\\uFF0C\\u6A21\\u62DF grub \\u635F\\u574F\\uFF1A\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"rm /boot/grub2/ -rf\\n\")), mdx(\"p\", null, \"\\u91CD\\u542F\\u5931\\u8D25\\uFF0C\\u8FDB\\u5165 grub \\u547D\\u4EE4\\u884C\\uFF1A\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://i.loli.net/2019/11/16/Glgu6YSonfjIbkm.png\",\n    \"alt\": \"grub2-damage.png\"\n  })), mdx(\"p\", null, \"\\u9000\\u51FA grub \\u547D\\u4EE4\\u884C\\uFF0C\\u8FDB\\u5165\\u4FEE\\u590D\\u6A21\\u5F0F\\uFF1A\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://i.loli.net/2019/11/16/IQ8dGRAwf1bosH6.png\",\n    \"alt\": \"boot-Record-damage.png\"\n  })), mdx(\"p\", null, \"\\u6267\\u884C\\u4EE5\\u4E0B\\u547D\\u4EE4\\u6062\\u590D grub\\uFF1A\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"chroot /mnt/sysimage\\ngrub2-install /dev/sda   # \\u4F1A\\u91CD\\u65B0\\u751F\\u6210 /boot/grub2/ \\u76EE\\u5F55\\ngrub2-mkconfig -o /boot/grub2/grub.cfg\\n\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\u8FD9\\u91CC\\u6709\\u4E2A\\u7591\\u95EE\\uFF0C/boot/grub2/grub.cfg \\u6587\\u4EF6\\u662F\\u9760\\u8F6F\\u4EF6\\u5305 grub2-pc \\u751F\\u6210\\u7684\\uFF0C\\u4F46\\u5982\\u679C\\u5220\\u9664\\u4E86 grub.cfg \\u6587\\u4EF6\\uFF0C\\u91CD\\u65B0\\u5B89\\u88C5\\u8FD9\\u4E2A\\u8F6F\\u4EF6\\u5305\\u5E76\\u4E0D\\u4F1A\\u91CD\\u65B0\\u751F\\u6210 grub.cfg \\u6587\\u4EF6\\uFF0C\\u6709\\u4E86\\u89E3\\u539F\\u56E0\\u7684\\u8FD8\\u671B\\u4E0D\\u541D\\u544A\\u77E5\\uFF0C\\u7559\\u8A00\\u6216\\u90AE\\u4EF6\\u90FD\\u53EF\\u4EE5\\uFF0C\\u8C22\\u8C22\\u3002\")), mdx(\"p\", null, \"\\u4EE5\\u4E0A\\u57FA\\u672C\\u6A21\\u62DF\\u4E86\\u5728 BIOS + MBR \\u57FA\\u7840\\u4E0A\\u7684\\u542F\\u52A8\\u8BB0\\u5F55\\u635F\\u574F\\u3001\\u542F\\u52A8\\u5206\\u533A\\u8868\\u635F\\u574F\\u3001grub \\u635F\\u574F\\u7684\\u573A\\u666F\\u5E76\\u8FDB\\u884C\\u4E86\\u4FEE\\u590D\\uFF0C\\u4F46\\u5728 UEFI + GPT \\u4E0B\\uFF0C\\u8FC7\\u7A0B\\u5219\\u4E0D\\u592A\\u4E00\\u6837\\u3002\"), mdx(\"h2\", null, \"\\u4E8C\\u3001UEFI + GPT\"), mdx(\"p\", null, \"\\u5728 \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://en.wikipedia.org/wiki/Unified_Extensible_Firmware_Interface\"\n  }, mdx(\"strong\", {\n    parentName: \"a\"\n  }, \"UEFI\")), \" + \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://en.wikipedia.org/wiki/GUID_Partition_Table\"\n  }, mdx(\"strong\", {\n    parentName: \"a\"\n  }, \"GPT\")), \" \\u7684\\u542F\\u52A8\\u8FC7\\u7A0B\\u4E2D\\uFF0C\\u5728\\u670D\\u52A1\\u5668\\u5F00\\u673A\\u81EA\\u68C0 (POST) \\u5B8C\\u6210\\u540E\\uFF0C\\u5C31\\u4F1A\\u52A0\\u8F7D \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://en.wikipedia.org/wiki/EFI_system_partition\"\n  }, mdx(\"strong\", {\n    parentName: \"a\"\n  }, \"ESP\")), \"(EFI System Partition) \\u7684 UEFI \\u56FA\\u4EF6\\uFF0CUEFI \\u56FA\\u4EF6\\u4F1A\\u521D\\u59CB\\u5316\\u542F\\u52A8\\u8981\\u7528\\u7684\\u786C\\u4EF6\\uFF0C\\u5E76\\u8BFB\\u53D6\\u5176\\u5F15\\u5BFC\\u7BA1\\u7406\\u5668\\u4EE5\\u786E\\u5B9A\\u4ECE\\u4F55\\u5904\\uFF08\\u6BD4\\u5982\\uFF0C\\u4ECE\\u54EA\\u4E2A\\u786C\\u76D8\\u53CA\\u5206\\u533A\\uFF09\\u52A0\\u8F7D\\u54EA\\u4E2A UEFI \\u5E94\\u7528\\u3002\\u6240\\u4EE5 UEFI \\u7684\\u542F\\u52A8\\u4FE1\\u606F\\u90FD\\u5728 \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://en.wikipedia.org/wiki/EFI_system_partition\"\n  }, mdx(\"strong\", {\n    parentName: \"a\"\n  }, \"ESP\")), \" \\u4E2D\\uFF08\\u901A\\u5E38\\u662F \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/boot/efi\"), \"\\uFF09\\u3002\"), mdx(\"p\", null, \"\\u4E0B\\u9762\\u4E3B\\u8981\\u6A21\\u62DF ESP \\u635F\\u574F\\u548C GPT \\u635F\\u574F\\u7684\\u573A\\u666F\\u3002\"), mdx(\"h3\", null, \"1. ESP \\u635F\\u574F\"), mdx(\"p\", null, \"\\u56E0\\u4E3A ESP \\u672C\\u8EAB\\u5C31\\u662F\\u4E00\\u4E2A\\u7CFB\\u7EDF\\u5206\\u533A\\uFF0C\\u6240\\u4EE5\\u5B83\\u7684\\u635F\\u574F\\u53C8\\u53EF\\u4EE5\\u5206\\u4E3A\\u4E24\\u79CD\\u60C5\\u51B5\\uFF1A\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"ESP \\u5206\\u533A\\u91CC\\u9762\\u7684\\u6587\\u4EF6\\u635F\\u574F\\u6216\\u4E22\\u5931\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"ESP \\u5206\\u533A\\u4FE1\\u606F\\u635F\\u574F\")), mdx(\"p\", null, \"ESP \\u5206\\u533A\\u4FE1\\u606F\\u672C\\u8EAB\\u5C31\\u5305\\u542B\\u5728 GPT \\u5206\\u533A\\u4FE1\\u606F\\u91CC\\u9762\\uFF0C\\u6240\\u4EE5\\u7B2C\\u4E8C\\u79CD\\u60C5\\u51B5\\u5176\\u5B9E\\u5C31\\u662F\\u5C5E\\u4E8E GPT \\u635F\\u574F\\u7684\\u573A\\u666F\\uFF0C\\u6240\\u4EE5\\u8FD9\\u91CC\\u53EA\\u6F14\\u793A ESP \\u5206\\u533A\\u91CC\\u9762\\u7684\\u6587\\u4EF6\\u635F\\u574F\\u6216\\u4E22\\u5931\\u3002\"), mdx(\"p\", null, \"\\u5220\\u9664 EFI \\u76EE\\u5F55\\uFF0C\\u6A21\\u62DF EFI \\u6587\\u4EF6\\u4E22\\u5931\\uFF1A\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"[root@base ~]# ls /boot/efi\\nEFI\\n[root@base ~]# rm /boot/efi -rf\\nrm: \\u65E0\\u6CD5\\u5220\\u9664 \\\"/boot/efi\\\": \\u8BBE\\u5907\\u6216\\u8D44\\u6E90\\u5FD9\\n[root@base ~]# ls /boot/efi\\n\")), mdx(\"p\", null, \"\\u91CD\\u542F\\u7CFB\\u7EDF\\uFF0C\\u65E0\\u6CD5\\u6B63\\u5E38\\u542F\\u52A8\\u3002\"), mdx(\"p\", null, \"\\u8FDB\\u5165\\u4FEE\\u590D\\u6A21\\u5F0F\\uFF0C\\u56E0\\u4E3A\\u5206\\u533A\\u4FE1\\u606F\\u8FD8\\u5728\\uFF0C\\u6240\\u4EE5\\u53EF\\u4EE5 chroot \\u5230\\u539F\\u6765\\u7684\\u6839\\u6587\\u4EF6\\u7CFB\\u7EDF\\uFF0C\\u4F46 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/boot/efi\"), \" \\u76EE\\u5F55\\u4E0B\\u6CA1\\u6709 EFI\\u3001grub \\u7B49\\u6587\\u4EF6\\u3002\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://i.loli.net/2019/11/20/IKSQAHPpgrLMVb6.png\",\n    \"alt\": \"delete-grub-efi.png\"\n  })), mdx(\"p\", null, \"\\u6240\\u4EE5\\u53EA\\u8981\\u6062\\u590D ESP \\u6587\\u4EF6\\u7CFB\\u7EDF\\u4E0B\\u7684\\u90A3\\u4E9B \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".efi\"), \" \\u6587\\u4EF6\\u5C31\\u53EF\\u4EE5\\u4FEE\\u590D\\u3002\"), mdx(\"p\", null, \"\\u9996\\u5148\\u5207\\u6362\\u5230\\u539F\\u6765\\u7684\\u7CFB\\u7EDF\\u73AF\\u5883\\uFF1A\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"chroot /mnt/sysimage\\n\")), mdx(\"p\", null, \"\\u6302\\u8F7D\\u5149\\u9A71\\uFF0C\\u91CD\\u65B0\\u5B89\\u88C5 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"grub2-efi\"), \" \\u548C \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"shim\"), \" \\u8F6F\\u4EF6\\u5305\\u3002\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://i.loli.net/2019/11/20/6FISRl4iYxry8MW.png\",\n    \"alt\": \"reinstall-efi-shim.png\"\n  })), mdx(\"p\", null, \"\\u7136\\u540E\\u518D\\u91CD\\u65B0\\u751F\\u6210 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"grub.cfg\"), \" \\u914D\\u7F6E\\u6587\\u4EF6\\uFF0C\\u4E0D\\u7136\\u4F1A\\u8FDB\\u5165\\u5230 grub \\u547D\\u4EE4\\u884C\\u63A5\\u53E3\\u754C\\u9762\\u3002\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"grub2-mkconfig -o /boot/efi/EFI/redhat/grub.cfg\\n\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\u4F5C\\u7528\\u7C7B\\u4F3C\\u4E8E BIOS + MBR \\u4E0B\\u7684 grub2-install \\u547D\\u4EE4\")), mdx(\"p\", null, \"\\u91CD\\u542F\\u7CFB\\u7EDF\\uFF0C\\u5373\\u53EF\\u6B63\\u5E38\\u542F\\u52A8\\u3002\"), mdx(\"h3\", null, \"2. GPT \\u635F\\u574F\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://en.wikipedia.org/wiki/GUID_Partition_Table\"\n  }, mdx(\"strong\", {\n    parentName: \"a\"\n  }, \"GPT\")), \" \\u5206\\u533A\\u8868\\u7C7B\\u578B\\u4E2D\\uFF0C\\u662F\\u4EE5 \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://en.wikipedia.org/wiki/Logical_block_addressing\"\n  }, mdx(\"strong\", {\n    parentName: \"a\"\n  }, \"LBA\")), \"(Logical Block Address\\uFF0C\\u903B\\u8F91\\u5757\\u5BFB\\u5740) \\u6765\\u5B9A\\u4E49\\u6247\\u533A\\u7684\\u4F4D\\u7F6E\\uFF0C\\u6BD4\\u5982 LBA0 LBA1 \\u7B49\\u3002\"), mdx(\"p\", null, \"\\u672C\\u7BC7\\u7ED3\\u5408 gpt \\u7ED3\\u6784\\u56FE\\u6765\\u5206\\u522B\\u8BF4\\u660E\\uFF1A\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"LBA0 \\u7684\\u635F\\u574F\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"LBA1 \\u7684\\u635F\\u574F\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"LBA2 ~ LBA33 \\u7684\\u635F\\u574F\")), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://i.loli.net/2019/11/17/gYL78ydEM4UveHa.png\",\n    \"alt\": \"gpt-wiki.png\"\n  })), mdx(\"h4\", null, \"1. LBA0\"), mdx(\"p\", null, \"LBA0 \\u662F\\u4E00\\u4E2A\\u4FDD\\u62A4\\u6027 MBR\\uFF0C\\u662F\\u51FA\\u4E8E\\u517C\\u5BB9\\u6027\\u800C\\u5B58\\u50A8\\u4E86\\u4E00\\u4EFD\\u4F20\\u7EDF\\u7684 \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://en.wikipedia.org/wiki/Master_boot_record#PTE\"\n  }, \"MBR\"), \"\\u3002\"), mdx(\"p\", null, \"\\u81F3\\u4E8E\\u6BCF\\u4E2A LBA \\u5BF9\\u5E94\\u7684\\u7269\\u7406\\u7A7A\\u95F4\\u662F\\u591A\\u5C11\\uFF0C\\u53EF\\u4EE5\\u901A\\u8FC7 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"parted\"), \" \\u6216 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"blockdev\"), \" \\u547D\\u4EE4\\u67E5\\u770B\\uFF1A\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"root@base ~]# parted\\nGNU Parted 3.1\\n\\u4F7F\\u7528 /dev/sda\\nWelcome to GNU Parted! Type 'help' to view a list of commands.\\n(parted) print\\nModel: VMware, VMware Virtual S (scsi)\\nDisk /dev/sda: 10.7GB\\nSector size (logical/physical): 512B/512B\\nPartition Table: gpt\\nDisk Flags:\\n\\nNumber  Start   End     Size    File system  Name                  \\u6807\\u5FD7\\n 1      1049kB  211MB   210MB   fat16        EFI System Partition  \\u542F\\u52A8\\n 2      211MB   1285MB  1074MB  xfs\\n 3      1285MB  7729MB  6445MB                                     lvm\\n\\n\")), mdx(\"p\", null, \"\\u6216\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"blockdev --getss  /dev/sda\\n\")), mdx(\"p\", null, \"\\u4ECE\\u4EE5\\u4E0A\\u4FE1\\u606F\\u4E2D\\u53EF\\u4EE5\\u770B\\u51FA\\uFF1A\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u5206\\u533A\\u8868\\u7C7B\\u578B\\u4E3A gpt(\\u4F7F\\u7528 fdisk \\u547D\\u4EE4\\u4E5F\\u53EF\\u67E5\\u770B\\u5206\\u533A\\u8868\\u7C7B\\u578B)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u903B\\u8F91 / \\u7269\\u7406\\u6247\\u533A\\u5927\\u5C0F 512B\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u542F\\u52A8\\u7C7B\\u578B EFI\")), mdx(\"p\", null, \"\\u6211\\u4EEC\\u5148\\u770B\\u770B sda \\u7684 LBA0(\\u6247\\u533A 1\\uFF0C\\u4E5F\\u5C31\\u662F MBR) \\u5B58\\u50A8\\u7684\\u5185\\u5BB9\\uFF1A\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"[root@base ~]# xxd -g1 -l 512 /dev/sda\\n0000000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n0000010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n0000020: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n0000030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n0000040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n0000050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n0000060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n0000070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n0000080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n0000090: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n00000a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n00000b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n00000c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n00000d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n00000e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n00000f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n0000100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n0000110: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n0000120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n0000130: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n0000140: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n0000150: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n0000160: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n0000170: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n0000180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n0000190: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n00001a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n00001b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n00001c0: 01 00 ee fe ff ff 01 00 00 00 ff ff 3f 01 00 00  ............?...\\n00001d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n00001e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n00001f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 55 aa  ..............U.\\n\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\u67E5\\u770B 16 \\u8FDB\\u5236\\u7684\\u5DE5\\u5177\\u5F88\\u591A\\uFF0C\\u5728 Windows \\u4E0A\\u5927\\u591A\\u6570\\u662F\\u7528 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"winhex\"), \"\\uFF0CLinux \\u53EF\\u4EE5\\u7528 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"wxHexEditor\"), \"\\u3001\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"010 Editor\"), \"\\u3001\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"MadEdit\"), \" \\u3001\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Xxd\"), \"\\u3001\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Hexedit\"), \"\\u3001\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Hexyl\"), \"\\u3001\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Ghex\"), \"\\u3001\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Bless\"), \"\\u3001\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Okteta\"), \" \\u7B49\\u7B49\\u3002\")), mdx(\"p\", null, \"\\u5BF9\\u7167 \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://en.wikipedia.org/wiki/Master_boot_record\"\n  }, mdx(\"strong\", {\n    parentName: \"a\"\n  }, \"MBR\")), \" \\u7ED3\\u6784\\u56FE\\uFF1A\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://i.loli.net/2019/11/18/YS9bAHhvcC5jJzP.png\",\n    \"alt\": \"mbr-wiki.png\"\n  })), mdx(\"p\", null, \"\\u53EF\\u4EE5\\u770B\\u5230\\uFF0C\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://en.wikipedia.org/wiki/Master_boot_record\"\n  }, mdx(\"strong\", {\n    parentName: \"a\"\n  }, \"MBR\")), \" \\u4E2D\\u7684 BootCode \\u5168\\u4E3A 0\\uFF08\\u524D 446 \\u5B57\\u8282\\uFF09\\uFF0C\\u5206\\u533A\\u8868\\u4E2D\\u4E5F\\u53EA\\u6709\\u5206\\u533A\\u8868 1 \\u6709\\u6570\\u636E\\uFF1A\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"00 00 01 00 ee fe ff ff 01 00 00 00 ff ff 3f 01\\n\")), mdx(\"p\", null, \"\\u518D\\u5BF9\\u6BD4 MBR \\u7684\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://en.wikipedia.org/wiki/Master_boot_record#Sector_layout\"\n  }, \"\\u5206\\u533A\\u8868\\u6761\\u76EE\\u7ED3\\u6784\\u56FE\"), \"\\uFF1A\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://i.loli.net/2019/11/17/gti78LyNPez16Bu.png\",\n    \"alt\": \"Layout-of-one-16-byte-partition-entry.png\"\n  })), mdx(\"p\", null, \"\\u62C6\\u89E3\\u5206\\u533A\\u8868 1 \\u7684\\u5185\\u5BB9\\uFF1A\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"00 00 01 00 ee fe ff ff 01 00 00 00 ff ff 3f 01\\n\")), mdx(\"p\", null, \"\\u5176\\u4E2D\\uFF1A\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"\\u503C\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"\\u89E3\\u91CA\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"0x00\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"\\u4EE3\\u8868\\u6B64\\u5206\\u533A\\u6FC0\\u6D3B\\u72B6\\u6001(80 \\u624D\\u662F\\u4EE3\\u8868\\u6FC0\\u6D3B)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"0x00\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"\\u8D77\\u59CB Cylinder\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"0x01\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"\\u8D77\\u59CB Head\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"0x00\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"\\u8D77\\u59CB Sector\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"0xee\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"\\u5206\\u533A\\u7C7B\\u578B\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"0xfe\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"\\u7ED3\\u675F Cylinder\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"0xff\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"\\u7ED3\\u675F Head\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"0xff\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"\\u7ED3\\u675F Sector\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"0x01000000\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"\\u8D77\\u59CB\\u6247\\u533A\\u7684 LBA\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"0xffff3f01\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"\\u6B64\\u5206\\u533A\\u7684\\u6247\\u533A\\u6570\")))), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\u7531\\u4E8E inter CPU \\u91C7\\u7528\\u7684\\u662F \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://baike.baidu.com/item/Little-Endian/4118225?fr=aladdin\"\n  }, \"little endian\"), \"\\uFF0C\\u6240\\u4EE5\\u5728\\u5C0F\\u4E8E 2T \\u7684\\u78C1\\u76D8\\u4E0A\\uFF0C\\u5206\\u533A\\u603B\\u7684\\u5B57\\u8282\\u6570\\u5E94\\u8BE5\\u662F Hex \\u7684 013fffff = Decimal 20971519 * 512\\uFF0C\\u5728\\u5927\\u4E8E 2T \\u7684\\u78C1\\u76D8\\u4E0A\\uFF0C\\u8FD9\\u4E2A\\u6570\\u59CB\\u7EC8\\u7B97\\u51FA\\u6765\\u662F 2T\\u3002 \")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"0xee\"), \" \\u7684\\u5206\\u533A\\u7C7B\\u578B\\u7684\\u4F5C\\u7528\\u662F\\u544A\\u8BC9\\u5176\\u4ED6 MBR \\u78C1\\u76D8\\u5DE5\\u5177\\uFF0C\\u8FD9\\u4E2A\\u78C1\\u76D8\\u662F\\u4F7F\\u7528\\u7684 GPT \\u5206\\u533A\\u8868\\uFF0C\\u4E0D\\u4F1A\\u8BA9\\u5B83\\u4EEC\\u8BC6\\u522B\\u4E3A\\u8FD9\\u662F\\u4E00\\u5757\\u672A\\u5206\\u533A\\u7684\\u78C1\\u76D8\\uFF0C\\u5E76\\u62D2\\u7EDD\\u5B83\\u4EEC\\u5BF9\\u78C1\\u76D8\\u8FDB\\u884C\\u64CD\\u4F5C\\uFF0C\\u4ECE\\u800C\\u907F\\u514D\\u56E0\\u4E3A\\u610F\\u5916\\u800C\\u5220\\u9664\\u5206\\u533A\\u7684\\u98CE\\u9669\\u3002\"), mdx(\"p\", null, \"\\u73B0\\u5728\\u901A\\u8FC7\\u51E0\\u79CD\\u4E0D\\u540C\\u7684\\u65B9\\u5F0F\\u6765\\u6A21\\u62DF LAB 0 \\u4E2D MBR \\u5206\\u533A\\u8868\\u4FE1\\u606F\\u635F\\u574F\\u7684\\u573A\\u666F\\uFF0C\\u770B\\u770B\\u4F1A\\u53D1\\u751F\\u4EC0\\u4E48\\uFF1A\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"1\\uFF09dd < /dev/zero >/dev/sda bs=1 count=446\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"2\\uFF09dd < /dev/zero >/dev/sda bs=1 count=450\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"3\\uFF09dd < /dev/zero >/dev/sda bs=1 count=451\")), mdx(\"p\", null, \"\\u9650\\u4E8E\\u7BC7\\u5E45\\u539F\\u56E0\\uFF0C\\u8FD9\\u91CC\\u53EA\\u7ED9\\u51FA\\u5B9E\\u9A8C\\u7ED3\\u679C\\uFF1A\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"1\\uFF09\\u7684\\u60C5\\u51B5\\u4E0B\\uFF0C\\u7CFB\\u7EDF\\u80FD\\u6B63\\u5E38\\u91CD\\u542F\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"2\\uFF09\\u7684\\u60C5\\u51B5\\u4E0B\\uFF0C\\u7CFB\\u7EDF\\u80FD\\u6B63\\u5E38\\u91CD\\u542F\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"3\\uFF09\\u7684\\u60C5\\u51B5\\u4E0B\\uFF0C\\u7CFB\\u7EDF\\u4E0D\\u80FD\\u6B63\\u5E38\\u91CD\\u542F\\uFF0C\\u4F46\\u7CFB\\u7EDF\\u53EF\\u4EE5\\u8BA4\\u5230\\u4E00\\u4E2A\\u7A7A\\u7684\\u5206\\u533A\\u8868\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"[root@base ~]# xxd -g1 -l 1 -s 450 /dev/sda  # \\u53D6\\u51FA\\u7B2C 450 \\u4E2A\\u5B57\\u8282\\n00001c2: ee                                               .\\n[root@base ~]# dd < /dev/zero >/dev/sda bs=1 count=451 # \\u6E05\\u9664\\u524D 451 \\u4E2A \\u5B57\\u8282\\n\\u8BB0\\u5F55\\u4E86 451+0 \\u7684\\u8BFB\\u5165\\n\\u8BB0\\u5F55\\u4E86 451+0 \\u7684\\u5199\\u51FA\\n451 \\u5B57\\u8282 (451 B) \\u5DF2\\u590D\\u5236\\uFF0C0.00159757 \\u79D2\\uFF0C282 kB / \\u79D2\\n[root@base ~]# xxd -g1 -l 1 -s 450 /dev/sda\\n00001c2: 00                                               .\\n[root@base ~]#\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"\\u5176\\u5B9E\\u8FD9\\u4E5F\\u95F4\\u63A5\\u8BC1\\u660E\\u4E86\\u7B2C 451 \\u4E2A \\u5B57\\u8282\\uFF0C\\u5206\\u533A\\u8868\\u7C7B\\u578B \", mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"0xee\"), \" \\u7684\\u4F5C\\u7528\\uFF0C\\u4E00\\u65E6\\u6E05\\u9664\\u4E86\\u8FD9\\u4E2A\\u5B57\\u8282\\uFF0C\\u7CFB\\u7EDF\\u5C31\\u4E0D\\u80FD\\u8BC6\\u522B\\u5230\\u8FD9\\u4E2A\\u78C1\\u76D8\\u662F\\u4F7F\\u7528\\u7684 GPT \\u5206\\u533A\\u8868\\uFF0C\\u4ECE\\u800C\\u627E\\u4E0D\\u5230\\u6709\\u6548\\u5206\\u533A\\uFF08\\u6B64\\u65F6\\u7CFB\\u7EDF\\u8FD8\\u80FD\\u8BA4\\u5230\\u4E00\\u4E2A\\u5206\\u533A\\uFF0C\\u56E0\\u4E3A LBA0 \\u91CC\\u9762\\u672C\\u8EAB\\u5C31\\u5305\\u542B\\u4E86\\u4E00\\u4E2A\\u5206\\u533A\\u8868\\u6761\\u76EE\\uFF09\\uFF0C\\u4E5F\\u5C31\\u65E0\\u6CD5\\u6B63\\u5E38\\u542F\\u52A8\\uFF0C\\u4F46\\u6E05\\u9664\\u524D\\u9762\\u7684 450 \\u4E2A\\u5B57\\u8282\\u662F\\u4E0D\\u4F1A\\u5F71\\u54CD\\u78C1\\u76D8\\u7684\\u3002\")), mdx(\"p\", null, \"\\u90A3\\u8FD9\\u79CD\\u60C5\\u51B5\\u4E0B\\u5982\\u4F55\\u4FEE\\u590D\\uFF1F\"), mdx(\"p\", null, \"\\u8FD8\\u662F\\u8FDB\\u5165\\u4FEE\\u590D\\u6A21\\u5F0F\\uFF0C\\u56E0\\u4E3A\\u7CFB\\u7EDF\\u8BEF\\u8BC6\\u522B\\u8FD9\\u4E2A\\u662F MBR \\u5206\\u533A\\u8868\\uFF0C\\u4F46\\u53C8\\u8BFB\\u4E0D\\u5230 bootcode \\u548C\\u6709\\u6548\\u7684\\u5206\\u533A\\u8868\\uFF0C\\u6240\\u4EE5\\u8FD8\\u662F\\u65E0\\u6CD5\\u4F7F\\u7528 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"chroot\"), \" \\u547D\\u4EE4\\u8FDB\\u5165\\u539F\\u6765\\u7684\\u6839\\u76EE\\u5F55\\u73AF\\u5883\\u3002\\u6211\\u4EEC\\u53EF\\u4EE5\\u5728\\u4FEE\\u590D\\u6A21\\u5F0F\\u4E0B\\u4F7F\\u7528\\u5341\\u516D\\u8FDB\\u5236\\u7F16\\u8F91\\u5DE5\\u5177 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"hexedit\"), \"\\uFF08\\u5F53\\u7136\\u4E5F\\u53EF\\u4EE5\\u4F7F\\u7528 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"xdd\"), \"\\u3001\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"hexyl\"), \"\\u3001\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ghex\"), \"\\u3001\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"okteta\"), \"\\u3001\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"wxhexeditor\"), \"\\u3001\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"hexcurse\"), \"\\u3001\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"hexer\"), \" \\u7B49\\u5DE5\\u5177\\uFF09\\u624B\\u5DE5\\u7F16\\u8F91\\u76F8\\u5E94\\u7684\\u5B57\\u8282\\uFF0C\\u4F7F\\u7CFB\\u7EDF\\u8BC6\\u522B\\u5230\\u8FD9\\u4E2A\\u78C1\\u76D8\\u662F GPT \\u683C\\u5F0F\\u7684\\u5206\\u533A\\u8868\\uFF1A\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"hexedit -s --color /dev/sda\\n\")), mdx(\"p\", null, \"\\u7136\\u540E\\u5C06\\u7B2C 451 \\u4E2A\\u5B57\\u8282\\u4FEE\\u6539\\u4E3A \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ee\"), \" \\u5373\\u53EF\\u3002\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\u5982\\u679C\\u662F\\u6E05\\u7A7A\\u4E86 LBA0 \\u7684\\u5168\\u90E8 512 \\u4E2A\\u5B57\\u8282\\uFF0C\\u5219\\u8FD8\\u9700\\u4FEE\\u6539 LBA \\u7684\\u8D77\\u59CB\\u4FE1\\u606F\\uFF0C\\u4E5F\\u5C31\\u662F\\u5C06\\u7B2C 455\\u3001456\\u3001457 \\u5B57\\u8282\\u4FEE\\u6539\\u4E3A \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"010000\"), \"\\uFF0C\\u5176\\u4F59\\u4FE1\\u606F\\u5219\\u65E0\\u6240\\u8C13\\u3002\")), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://i.loli.net/2019/11/18/1vnrSbTjHg2xImf.png\",\n    \"alt\": \"hexedit-ee-lba.png\"\n  })), mdx(\"p\", null, \"\\u91CD\\u542F\\u7CFB\\u7EDF\\uFF0C\\u53EF\\u4EE5\\u6B63\\u5E38\\u542F\\u52A8\\u3002\"), mdx(\"h4\", null, \"2. LBA1\"), mdx(\"p\", null, \"\\u8FD8\\u662F\\u770B\\u4E0A\\u9762\\u7684 GPT \\u5206\\u533A\\u7ED3\\u6784\\u56FE\\uFF0CLBA1 \\u662F \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://en.wikipedia.org/wiki/GUID_Partition_Table#Partition_table_header_(LBA_1)\"\n  }, \"GPT \\u5934\"), \"\\uFF0C\\u5176\\u683C\\u5F0F\\u5982\\u4E0B\\uFF1A\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://i.loli.net/2019/11/19/xqY4BR8jQhIHr2w.png\",\n    \"alt\": \"GPT-header-format.png\"\n  })), mdx(\"p\", null, \"\\u8BFB\\u53D6 LBA1 \\u7684 512 \\u4E2A\\u5B57\\u8282\\uFF1A\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"[root@base ~]# xxd -g1 -l 512 -s 512 /dev/sda\\n0000200: 45 46 49 20 50 41 52 54 00 00 01 00 5c 00 00 00  EFI PART....\\\\...\\n0000210: fc 3c 8a 77 00 00 00 00 01 00 00 00 00 00 00 00  .<.w............\\n0000220: ff ff 3f 01 00 00 00 00 22 00 00 00 00 00 00 00  ..?.....\\\".......\\n0000230: de ff 3f 01 00 00 00 00 73 31 0f 65 2e 01 a5 49  ..?.....s1.e...I\\n0000240: a2 02 70 48 3b d6 95 05 02 00 00 00 00 00 00 00  ..pH;...........\\n0000250: 80 00 00 00 80 00 00 00 52 b2 04 ae 00 00 00 00  ........R.......\\n0000260: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n0000270: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n0000280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n0000290: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n00002a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n00002b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n00002c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n00002d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n00002e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n00002f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n0000300: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n0000310: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n0000320: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n0000330: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n0000340: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n0000350: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n0000360: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n0000370: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n0000380: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n0000390: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n00003a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n00003b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n00003c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n00003d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n00003e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n00003f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n\")), mdx(\"p\", null, \"\\u5BF9\\u5E94\\u62C6\\u89E3 GPT \\u5934\\u7ED3\\u6784\\uFF1A\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"\\u76F8\\u5BF9\\u5B57\\u8282\\u504F\\u79FB\\u91CF(\\u5341\\u516D\\u8FDB\\u5236)\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"\\u5B57\\u8282\\u6570\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"\\u503C\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"\\u8BF4\\u660E(\\u6574\\u6570\\u7686\\u4EE5 little endian \\u65B9\\u5F0F\\u8868\\u793A)\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"00\\uFF5E07\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"8\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"45 46 49 20 50 41 52 54\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GPT \\u5934\\u7B7E\\u540D\\uFF0C(ASCII \\u7801\\u4E3A \\\"EFI PART\\\")\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"08\\uFF5E0B\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"4\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"00 00 01 00\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"\\u7248\\u672C\\u53F7\\uFF0C\\u76EE\\u524D\\u662F 1.0 \\u7248\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"0C\\uFF5E0F\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"4\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"5c 00 00 00\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GPT \\u5934\\u7684\\u5927\\u5C0F(\\u5B57\\u8282\\u6570)\\uFF0C\\u4E5F\\u5C31\\u662F 92 \\u5B57\\u8282\\u3002\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"10\\uFF5E13\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"4\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"fc 3c 8a 77\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GPT \\u5934 CRC \\u6821\\u9A8C\\u548C(\\u8BA1\\u7B97\\u65F6\\u628A\\u8FD9\\u4E2A\\u5B57\\u6BB5\\u672C\\u8EAB\\u770B\\u505A\\u96F6\\u503C)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"14\\uFF5E17\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"4\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"00 00 00 00\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"\\u4FDD\\u7559\\uFF0C\\u5FC5\\u987B\\u4E3A 0\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"18\\uFF5E1F\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"8\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"01 00 00 00 00 00 00 00\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"EFI \\u4FE1\\u606F\\u533A (GPT \\u5934) \\u7684\\u8D77\\u59CB\\u6247\\u533A\\u53F7\\uFF0C\\u4E5F\\u5C31\\u662F LBA1\\u3002\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"20\\uFF5E27\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"8\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"ff ff 3f 01 00 00 00 00\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"EFI \\u4FE1\\u606F\\u533A (GPT \\u5934) \\u5907\\u4EFD\\u4F4D\\u7F6E\\u7684\\u6247\\u533A\\u53F7\\uFF0C\\u4E5F\\u5C31\\u662F EFI \\u533A\\u57DF\\u7ED3\\u675F\\u6247\\u533A\\u53F7\\u3002\\u901A\\u5E38\\u662F\\u6574\\u4E2A\\u78C1\\u76D8\\u6700\\u672B\\u4E00\\u4E2A\\u6247\\u533A\\u3002\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"28\\uFF5E2F\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"8\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"22 00 00 00 00 00 00 00\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GPT \\u5206\\u533A\\u533A\\u57DF\\u7684\\u8D77\\u59CB\\u6247\\u533A\\u53F7\\uFF0C\\u4E5F\\u5373\\u662F LBA34\\u3002\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"30\\uFF5E37\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"8\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"de ff 3f 01 00 00 00 00\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GPT \\u5206\\u533A\\u533A\\u57DF\\u7684\\u7ED3\\u675F\\u6247\\u533A\\u53F7\\uFF0C\\u901A\\u5E38\\u662F\\u5012\\u6570\\u7B2C 34 \\u6247\\u533A\\u3002\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"38\\uFF5E47\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"16\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"73 31 0f 65 2e 01 a5 49 a2 02 70 48 3b d6 95 05\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"\\u78C1\\u76D8 GUID(\\u5168\\u7403\\u552F\\u4E00\\u6807\\u8BC6\\u7B26\\uFF0C\\u4E0E UUID \\u662F\\u540C\\u4E49\\u8BCD)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"48\\uFF5E4F\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"8\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"02 00 00 00 00 00 00 00\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"\\u5206\\u533A\\u8868\\u8D77\\u59CB\\u6247\\u533A\\u53F7\\uFF0C\\u4E5F\\u5C31\\u662F LBA2\\u3002\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"50\\uFF5E53\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"4\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"80 00 00 00\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"\\u5206\\u533A\\u8868\\u603B\\u9879\\u6570\\uFF0C\\u901A\\u5E38\\u9650\\u5B9A\\u4E3A\\uFF0C\\u4E5F\\u5C31\\u662F 128 \\u4E2A\\u3002\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"54\\uFF5E57\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"4\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"80 00 00 00\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"\\u6BCF\\u4E2A\\u5206\\u533A\\u8868\\u9879\\u5360\\u7528\\u5B57\\u8282\\u6570\\uFF0C\\u4E5F\\u5C31\\u662F 128 \\u5B57\\u8282\\u3002\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"58\\uFF5E5B\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"4\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"52 b2 04 ae\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"\\u5206\\u533A\\u8868 CRC \\u6821\\u9A8C\\u548C\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"5C\\uFF5E*\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"*\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"\\u4FDD\\u7559\\uFF0C\\u901A\\u5E38\\u662F\\u5168\\u96F6\\u586B\\u5145\")))), mdx(\"p\", null, \"\\u53EF\\u4EE5\\u770B\\u51FA GPT \\u5934\\u4E2D\\u4E3B\\u8981\\u5305\\u542B\\u4E86\\u78C1\\u76D8\\u7684\\u4E00\\u4E9B\\u5B9A\\u4E49\\u5185\\u5BB9\\uFF0C\\u5982\\u679C\\u6E05\\u9664\\u6389 LBA1\\uFF0C\\u7CFB\\u7EDF\\u80FD\\u4E0D\\u80FD\\u542F\\u52A8\\u5462\\uFF1F\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"dd < /dev/zero >/dev/sda seek=512 bs=1 count=512\\n\")), mdx(\"p\", null, \"\\u5B9E\\u9A8C\\u7ED3\\u679C\\u662F\\uFF0C\\u7CFB\\u7EDF\\u5B8C\\u5168\\u53EF\\u4EE5\\u6B63\\u5E38\\u542F\\u52A8\\uFF0C\\u800C\\u4E14\\u53C8\\u4F1A\\u6062\\u590D\\u6210\\u521D\\u59CB\\u7684\\u503C\\u3002\\u63A2\\u5176\\u539F\\u56E0\\uFF0C\\u5176\\u5B9E\\u53EF\\u4EE5\\u5728\\u4E0A\\u9762\\u7684 GPT \\u5206\\u533A\\u7ED3\\u6784\\u56FE\\u4E2D\\u53D1\\u73B0\\uFF0C\\u539F\\u6765 GPT \\u5934\\u4FE1\\u606F\\u8FD8\\u5728\\u6700\\u540E\\u4E00\\u4E2A\\u6247\\u533A\\u4E2D\\u5907\\u4EFD\\u4E86\\u4E00\\u4EFD\\uFF0C\\u6240\\u4EE5\\u5373\\u4F7F\\u6E05\\u7A7A\\u6389 LBA1\\uFF0C\\u7CFB\\u7EDF\\u4E5F\\u4E0D\\u53D7\\u5F71\\u54CD\\uFF0C\\u4F46\\u5982\\u679C\\u628A\\u6700\\u540E\\u4E00\\u4E2A LBA \\u4E5F\\u6E05\\u7A7A\\u6389\\uFF0C\\u90A3\\u7CFB\\u7EDF\\u5C31\\u65E0\\u6CD5\\u542F\\u52A8\\u4E86\\uFF08\\u5176\\u5B9E\\u53EA\\u8981\\u6E05\\u7A7A\\u524D 8 \\u4E2A\\u5B57\\u8282\\uFF0C\\u7CFB\\u7EDF\\u90FD\\u65E0\\u6CD5\\u542F\\u52A8\\uFF09\\u3002\"), mdx(\"p\", null, \"\\u5148\\u770B\\u770B\\u6700\\u540E\\u4E00\\u4E2A LBA \\u7684\\u5185\\u5BB9\\uFF1A\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"[root@base ~]# xxd -g1 -l 512 -s $((`blockdev --getsz /dev/sda` * 512 - 512)) /dev/sda\\n27ffffe0045 46 49 20 50 41 52 54 00 00 01 00 5c 00 00 00  EFI PART....\\\\...\\n27ffffe1051 ef 04 c8 00 00 00 00 ff ff 3f 01 00 00 00 00  Q.........?.....\\n27ffffe2001 00 00 00 00 00 00 00 22 00 00 00 00 00 00 00  ........\\\".......\\n27ffffe30de ff 3f 01 00 00 00 00 73 31 0f 65 2e 01 a5 49  ..?.....s1.e...I\\n27ffffe40a2 02 70 48 3b d6 95 05 df ff 3f 01 00 00 00 00  ..pH;.....?.....\\n27ffffe5080 00 00 00 80 00 00 00 52 b2 04 ae 00 00 00 00  ........R.......\\n27ffffe6000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n27ffffe7000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n27ffffe8000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n27ffffe9000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n27ffffea000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n27ffffeb000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n27ffffec000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n27ffffed000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n27ffffee000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n27ffffef000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n27fffff0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n27fffff1000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n27fffff2000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n27fffff3000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n27fffff4000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n27fffff5000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n27fffff6000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n27fffff7000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n27fffff8000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n27fffff9000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n27fffffa000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n27fffffb000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n27fffffc000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n27fffffd000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n27fffffe000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n27ffffff000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n\")), mdx(\"p\", null, \"\\u5BF9\\u6BD4 LBA0\\uFF0C\\u4E24\\u8005\\u4E00\\u6A21\\u4E00\\u6837\\u3002\"), mdx(\"p\", null, \"\\u6E05\\u9664 LAB0 \\u7684\\u524D 8 \\u4E2A\\u5B57\\u8282\\u548C\\u6700\\u540E\\u4E00\\u4E2A LBA\\uFF1A\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"dd < /dev/zero >/dev/sda seek=512 bs=1 count=8\\ndd < /dev/zero >/dev/sda count=512 bs=1 seek=$((`blockdev --getsz /dev/sda` * 512 - 512))\\n\")), mdx(\"p\", null, \"\\u91CD\\u542F\\u7CFB\\u7EDF\\uFF0C\\u65E0\\u6CD5\\u542F\\u52A8\\u3002\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\u64CD\\u4F5C\\u524D\\u4E00\\u5B9A\\u8981\\u5907\\u4EFD\\u3002\")), mdx(\"h4\", null, \"3. LBA2 ~ LBA33\"), mdx(\"p\", null, \"\\u63A5\\u7740\\u518D\\u6765\\u770B\\u770B\\u5206\\u533A\\u8868\\uFF0C\\u8FD8\\u662F\\u6839\\u636E GPT \\u5206\\u533A\\u7ED3\\u6784\\u56FE\\uFF0C\\u5206\\u533A\\u8868\\u4E00\\u822C\\u662F\\u5360\\u7528\\u4E86 LBA2 - LBA33\\uFF0C\\u8FD9 32 \\u4E2A LBA \\u91CC\\u9762\\u5305\\u542B\\u4E86\\u6240\\u6709\\u7684\\u5206\\u533A\\u8868\\u4FE1\\u606F\\uFF0C\\u4F46 GPT \\u7684\\u89C4\\u8303\\u5B9A\\u4E49\\u91CC\\u9762\\u5E76\\u6CA1\\u6709\\u5B9A\\u4E49\\u4E00\\u4E2A\\u5206\\u533A\\u6761\\u76EE\\u5360\\u7528\\u591A\\u5C11\\u4E2A LBA\\uFF0C\\u6240\\u6709\\u4E0D\\u592A\\u65B9\\u4FBF\\u5355\\u72EC\\u627E\\u51FA\\u67D0\\u4E2A\\u5206\\u533A\\u7684\\u4FE1\\u606F\\uFF0C\\u8FD9\\u91CC\\u4EE5\\u6211\\u5B9E\\u9A8C\\u73AF\\u5883\\u4E3A\\u4F8B\\uFF0C\\u6765\\u770B\\u770B LBA2 - LBA33 \\u91CC\\u9762\\u5230\\u5E95\\u5305\\u542B\\u4E86\\u54EA\\u4E9B\\u4FE1\\u606F\\u3002\"), mdx(\"p\", null, \"\\u7531\\u4E8E\\u540E\\u9762\\u90FD\\u662F 0\\uFF0C\\u6240\\u4EE5\\u6211\\u53EA\\u622A\\u53D6\\u4E86\\u524D\\u9762 288 \\u4E2A\\u5B57\\u8282\\uFF1A\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"[root@base ~]# xxd -g1 -l 288 -s 1024 /dev/sda\\n0000400: 28 73 2a c1 1f f8 d2 11 ba 4b 00 a0 c9 3e c9 3b  (s*......K...>.;\\n0000410: cf ba f1 85 2a 4e 81 4b a1 0d b4 4e 4f 41 b9 e8  ....*N.K...NOA..\\n0000420: 00 08 00 00 00 00 00 00 ff 47 06 00 00 00 00 00  .........G......\\n0000430: 00 00 00 00 00 00 00 00 45 00 46 00 49 00 20 00  ........E.F.I. .\\n0000440: 53 00 79 00 73 00 74 00 65 00 6d 00 20 00 50 00  S.y.s.t.e.m. .P.\\n0000450: 61 00 72 00 74 00 69 00 74 00 69 00 6f 00 6e 00  a.r.t.i.t.i.o.n.\\n0000460: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n0000470: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n0000480: a2 a0 d0 eb e5 b9 33 44 87 c0 68 b6 b7 26 99 c7  ......3D..h..&..\\n0000490: 53 4e 33 58 50 0c c6 47 8f 9f 3c ef 90 45 17 27  SN3XP..G..<..E.'\\n00004a0: 00 48 06 00 00 00 00 00 ff 47 26 00 00 00 00 00  .H.......G&.....\\n00004b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n00004c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n00004d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n00004e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n00004f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n0000500: 79 d3 d6 e6 07 f5 c2 44 a2 3c 23 8f 2a 3d f9 28  y......D.<#.*=.(\\n0000510: 20 06 80 7a e0 15 72 4a 92 26 eb f0 48 3f 30 b9   ..z..rJ.&..H?0.\\n\")), mdx(\"p\", null, \"\\u53C2\\u8003\\u7EF4\\u57FA \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://en.wikipedia.org/wiki/GUID_Partition_Table#Partition_entries_(LBA_2%E2%80%9333)\"\n  }, \"GPT \\u5206\\u533A\\u8868\\u6761\\u76EE\"), \"\\uFF1A\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://i.loli.net/2019/11/19/fAg3t9kdvurJT5e.png\",\n    \"alt\": \"GUID-partition-entry-format.png\"\n  })), mdx(\"p\", null, \"\\u518D\\u7ED3\\u5408\\u7CFB\\u7EDF\\u4E0A\\u7684\\u5206\\u533A\\u4FE1\\u606F\\uFF1A\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"[root@base ~]# blkid -o export -p /dev/sda[1-3]\\nDEVNAME=/dev/sda1\\nSEC_TYPE=msdos\\nUUID=A985-FEAE\\nVERSION=FAT16\\nTYPE=vfat\\nUSAGE=filesystem\\nPART_ENTRY_SCHEME=gpt\\nPART_ENTRY_NAME=EFI System Partition\\nPART_ENTRY_UUID=85f1bacf-4e2a-4b81-a10d-b44e4f41b9e8\\nPART_ENTRY_TYPE=c12a7328-f81f-11d2-ba4b-00a0c93ec93b\\nPART_ENTRY_NUMBER=1\\nPART_ENTRY_OFFSET=2048\\nPART_ENTRY_SIZE=409600\\nPART_ENTRY_DISK=8:0\\n\\nDEVNAME=/dev/sda2\\nUUID=a13803e2-b4bb-4039-8d72-afbc21ecae55\\nTYPE=xfs\\nUSAGE=filesystem\\nPART_ENTRY_SCHEME=gpt\\nPART_ENTRY_UUID=58334e53-0c50-47c6-8f9f-3cef90451727\\nPART_ENTRY_TYPE=ebd0a0a2-b9e5-4433-87c0-68b6b72699c7\\nPART_ENTRY_NUMBER=2\\nPART_ENTRY_OFFSET=411648\\nPART_ENTRY_SIZE=2097152\\nPART_ENTRY_DISK=8:0\\n\\nDEVNAME=/dev/sda3\\nUUID=9SqofC-60Gm-ibCH-XJ3f-m2FR-ESRy-zeHAuA\\nVERSION=LVM2 001\\nTYPE=LVM2_member\\nUSAGE=raid\\nPART_ENTRY_SCHEME=gpt\\nPART_ENTRY_UUID=7a800620-15e0-4a72-9226-ebf0483f30b9\\nPART_ENTRY_TYPE=e6d6d379-f507-44c2-a23c-238f2a3df928\\nPART_ENTRY_NUMBER=3\\nPART_ENTRY_OFFSET=2508800\\nPART_ENTRY_SIZE=12587008\\nPART_ENTRY_DISK=8:0\\n\")), mdx(\"p\", null, \"\\u5BF9\\u6BD4\\u4E24\\u4E2A\\u7ED3\\u679C\\uFF0C\\u53EF\\u4EE5\\u627E\\u5230\\u7684\\u4FE1\\u606F\\u5305\\u62EC\\uFF1A\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"\\u503C\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"\\u89E3\\u91CA\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"C12A7328-F81F-11D2-BA4B-00A0C93EC93B\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"\\u7528 GUID \\u8868\\u793A\\u7684\\u5206\\u533A\\u7C7B\\u578B\\uFF1AEFI System partition\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"EBD0A0A2-B9E5-4433-87C0-68B6B72699C7\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"\\u7528 GUID \\u8868\\u793A\\u7684\\u5206\\u533A\\u7C7B\\u578B\\uFF1AWindows Basic data partition(\", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"https://en.wikipedia.org/wiki/GUID_Partition_Table#cite_note-linwin-41\"\n  }, \"\\u53C2\\u8003\\u8FD9\\u91CC\"), \"\\u4E86\\u89E3\\u4E3A\\u4EC0\\u4E48\\u662F Windows)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"e6d6d379-f507-44c2-a23c-238f2a3df928\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"\\u7528 GUID \\u8868\\u793A\\u7684\\u5206\\u533A\\u7C7B\\u578B\\uFF1ALinux Logical Volume Manager (LVM) partition\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"85f1bacf-4e2a-4b81-a10d-b44e4f41b9e8\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"\\u5206\\u533A GUID\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"58334e53-0c50-47c6-8f9f-3cef90451727\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"\\u5206\\u533A GUID\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"7a800620-15e0-4a72-9226-ebf0483f30b9\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"\\u5206\\u533A GUID\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"2048 / 409600\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"\\u5206\\u533A 1 \\u8D77\\u59CB / \\u7ED3\\u675F\\u6247\\u533A\\u53F7\\uFF08LBA\\uFF09\\uFF1A80 / 647ff\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"411648 / 2097152\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"\\u5206\\u533A 2 \\u8D77\\u59CB / \\u7ED3\\u675F\\u6247\\u533A\\u53F7\\uFF08LBA\\uFF09\\uFF1A64800 / 2647ff\")))), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\u8BA1\\u7B97\\u65B9\\u6CD5\\uFF1A\\u8D77\\u59CB LBA = ./conhex.sh -d2x \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"echo $(( 411648 ))\"), \"\\uFF0C\\u7ED3\\u675F LBA = ./conhex.sh -d2x \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"echo $(( 411648+2097152-1 ))\"))), mdx(\"p\", null, \"\\u5230\\u8FD9\\u91CC\\u5C31\\u57FA\\u672C\\u8BF4\\u5B8C\\u4E86\\u6574\\u4E2A\\u5206\\u533A\\u4E0A\\u7684\\u5185\\u5BB9\\uFF0C\\u56E0\\u4E3A LBA-1 ~ LBA-33 \\u7684\\u5185\\u5BB9\\u662F LBA1 ~ LBA33 \\u7684\\u5907\\u4EFD\\uFF0C\\u5269\\u4E0B LBA34 ~ LBA-34 \\u662F\\u771F\\u6B63\\u5206\\u914D\\u4E2A\\u5206\\u533A\\u5B58\\u50A8\\u6570\\u636E\\u7684\\u4F4D\\u7F6E\\u3002\"), mdx(\"h4\", null, \"4. \\u603B\\u7ED3\"), mdx(\"p\", null, \"\\u4E86\\u89E3\\u4E86 GPT \\u5206\\u533A\\u7684\\u7ED3\\u6784\\u540E\\uFF0C\\u603B\\u7ED3\\u7684\\u4FEE\\u590D\\u65B9\\u6CD5\\uFF1A\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"\\u6545\\u969C\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"\\u4FEE\\u590D\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"LBA0 \\u635F\\u574F\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"\\u624B\\u52A8\\u4FEE\\u6539 LAB0 \\u7684\\u7B2C 451\\u3001455\\u3001456\\u3001457 \\u5B57\\u8282\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"LBA1 \\u635F\\u574F\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"\\u4ECE LBA1 \\u5907\\u4EFD\\u6062\\u590D\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"LBA2 ~ LBA33 \\u635F\\u574F\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"\\u4ECE LBA2 ~ LBA33 \\u5907\\u4EFD\\u6062\\u590D\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"\\u6240\\u6709 LBA \\u5907\\u4EFD\\u540C\\u65F6\\u635F\\u574F\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"\\u6839\\u636E\\u65E5\\u5E38\\u7684\\u5907\\u4EFD\\u4FE1\\u606F\\uFF0C\\u624B\\u5DE5\\u53BB\\u4FEE\\u6539\\u5BF9\\u5E94 LBA \\u4E2D\\u7684\\u5B57\\u8282\")))), mdx(\"p\", null, \"\\u5B9E\\u5728\\u4E0D\\u77E5\\u9053\\u600E\\u4E48\\u53BB\\u624B\\u52A8\\u4FEE\\u590D\\uFF0C\\u8BD5\\u8BD5\\u7528\\u5176\\u4ED6\\u5DE5\\u5177\\u6765\\u81EA\\u52A8\\u6062\\u590D\\uFF0C\\u6BD4\\u5982 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gpart\"), \"\\u3001\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gdisk\"), \"\\u3001\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"sgdisk\"), \" \\u7B49\\u3002\"), mdx(\"h2\", null, \"\\u9644\\u5F55\"), mdx(\"blockquote\", null, mdx(\"ol\", {\n    parentName: \"blockquote\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\u5341\\u516D\\u8FDB\\u5236\\u548C\\u5341\\u8FDB\\u5236\\u4E92\\u76F8\\u8F6C\\u6362\\u7684 shell \\u811A\\u672C conhex.sh\"))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, \"#!/bin/bash\\n\\n# validate sufficient input\\ntest -n \\\"$1\\\" && test -n \\\"$2\\\" || {\\n    printf \\\"\\\\n error: insufficient input \\\\n usage: %s -d2x DecimalNum\\\\n        %s -x2d HexDecimalNum\\\\n\\\" \\\"${0//*\\\\//}\\\" \\\"${0//*\\\\//}\\\"\\n\\n    exit 1\\n}\\n\\n# Convert hexadecimal to decimal\\n\\n# with bash:\\n# $ echo $((16#FF))\\n\\n# with bc:\\n# $ echo \\\"ibase=16; FF\\\" | bc\\n\\n# with perl:\\n# $ perl -le 'print hex(\\\"FF\\\");'\\n\\n# with printf :\\n# $ printf \\\"%d\\\\n\\\" 0xFF\\n\\n# with python:\\n# $ python -c 'print(int(\\\"FF\\\", 16))'\\nxd() {\\n    printf \\\"16->10 $(( 0x${1} ))\\\\n\\\\n\\\"\\n}\\n\\n# Convert decimal to hexadecimal\\ndx() {\\n    printf \\\"10->16 %x\\\\n\\\\n\\\" ${1}\\n}\\n\\n# Convert string to ASCII\\n# printf \\\"%d\\\\n\\\" \\\"'A\\\"\\n\\ncase \\\"${1}\\\" in\\n    -d2x)\\n        dx $2\\n        ;;\\n    -x2d)\\n        xd $2\\n        ;;\\n    -h)\\n        printf \\\"usage: %s -d2x DecimalNum\\\\n               -x2d HexDecimalNum\\\\n\\\" \\\"${0//*\\\\//}\\\"\\n        ;;\\n    *)\\n        echo \\\"Invalid Paramter: ${1}, must be -d2x or -x2d\\\"\\n        exit;\\nesac\\n\")), mdx(\"blockquote\", null, mdx(\"ol\", {\n    parentName: \"blockquote\",\n    \"start\": 2\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\u4E0D\\u91CD\\u542F\\u8BC6\\u522B\\u65B0\\u5206\\u533A\"))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"partx -av /dev/vda\\n\")), mdx(\"blockquote\", null, mdx(\"ol\", {\n    parentName: \"blockquote\",\n    \"start\": 3\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.lulinux.com/jiaocheng/190.html\"\n  }, \"\\u5229\\u7528 python \\u83B7\\u53D6\\u78C1\\u76D8\\u5206\\u533A\\u7684\\u8D77\\u59CB\\u6247\\u533A\\u7684 LBA \\u4EE5\\u53CA\\u78C1\\u76D8\\u5206\\u533A\\u5927\\u5C0F\")))), mdx(\"blockquote\", null, mdx(\"ol\", {\n    parentName: \"blockquote\",\n    \"start\": 4\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"GPT \\u548C MBR \\u4E0B\\u7684\\u5907\\u4EFD\"))), mdx(\"h6\", null, \"MBR \\u5907\\u4EFD\\u548C\\u6062\\u590D\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, \"# \\u5907\\u4EFD MBR\\ndd if=/dev/sda of=/backup/mbr.backup  bs=1  count=512\\n# \\u6062\\u590D MBR\\ndd if=/backup/mbr.backup  of=/dev/sda\\n\")), mdx(\"h6\", null, \"\\u5206\\u533A\\u8868\\u5907\\u4EFD\\u548C\\u6062\\u590D\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, \"# \\u5907\\u4EFD\\u5206\\u533A\\u8868\\ndd if=/dev/sda of=/backup/partition_table.bak bs=1 count=64 skip=446\\n# \\u6062\\u590D\\u5206\\u533A\\u8868\\ndd if=/backup/partition_table.bak of=/dev/sda bs=1 seek=446\\n\")), mdx(\"h6\", null, \"GPT \\u5907\\u4EFD\\u548C\\u6062\\u590D\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, \"# \\u5907\\u4EFD Protective MBR\\ndd if=/dev/sda of=gpt-mbr bs=512 count=1\\n# \\u6062\\u590D Protective MBR\\ndd if=gpt-mbr of=/dev/sda bs=512 count=1\\n\\n# \\u5907\\u4EFD\\u5B8C\\u6574\\u7684 GPT \\u5206\\u533A\\u8868\\ndd if=/dev/sda of=gpt-partition bs=512 count=34\\n# \\u6062\\u590D\\u5B8C\\u6574\\u7684 GPT \\u5206\\u533A\\u8868\\ndd if=gpt--partition of=/dev/sda bs=512 count=34\\n\\n# \\u4EC5\\u5907\\u4EFD GPT \\u5934\\u548C GPT \\u5206\\u533A\\ndd if=/dev/sda of=gpt-partition bs=512 skip=1 count=33\\n# \\u6062\\u590D\\u5355\\u72EC\\u7684 GPT \\u5206\\u533A\\u4FE1\\u606F\\ndd if=gpt-partition of=/dev/sda bs=512 skip=1 seek=1 count=33\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"MBR和GPT分区表的结构及恢复方法\",\n  \"date\": \"2021-06-20T00:00:00.000Z\",\n  \"tags\": [\"分区表\", \"grub\", \"partition table\"]\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`在 Linux 的运维故障中，操作系统无法正常启动算是其中常见的一类，也是影响比较严重的一类。本篇主要介绍导致操作系统不能正常启动的其中两种情况：启动磁盘分区表损坏和 grub 损坏。`}</p>\n    <p>{`这两类情况根据基础环境的不同，又可以分为 `}<strong parentName=\"p\">{`BIOS + MBR`}</strong>{` 和 `}<strong parentName=\"p\">{`UEFI + GPT`}</strong>{` 。`}</p>\n    <h2>{`一、BIOS + MBR`}</h2>\n    <p>{`在 `}<a parentName=\"p\" {...{\n        \"href\": \"https://zh.wikipedia.org/wiki/BIOS\"\n      }}><strong parentName=\"a\">{`BIOS`}</strong></a>{` 的启动类型中，启动磁盘的分区信息中是存储在磁盘头的第一个扇区中，这个扇区通常叫作 `}<a parentName=\"p\" {...{\n        \"href\": \"https://en.wikipedia.org/wiki/Master_boot_record\"\n      }}><strong parentName=\"a\">{`MBR`}</strong></a>{`，MBR 中主要存储了该磁盘的分区表和启动引导记录，其中引导记录占用了前面 446 个字节，而磁盘分区则占用紧随的 64 个字节。`}</p>\n    <p>{`所以我们可以通过清除 MBR 前 446 个字节来模拟启动记录损坏的场景，通过清除前 510 个字节来模拟启动记录和磁盘分区都损坏的场景。`}</p>\n    <h3>{`1. 启动记录损坏`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`dd < /dev/zero >/dev/sda bs=1 count=446\n`}</code></pre>\n    <p>{`启动失败，进入到修复模式如下图：`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"./potions.jpg\",\n        \"alt\": \"boot-Record-damage\"\n      }}></img></p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://i.loli.net/2019/11/16/IQ8dGRAwf1bosH6.png\",\n        \"alt\": \"boot-Record-damage.png\"\n      }}></img></p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`注意，这个时候是可以通过 `}<inlineCode parentName=\"p\">{`chroot /mnt/sysimage`}</inlineCode>{` 切换到原来的 root 分区的，因为分区信息还在。`}</p>\n    </blockquote>\n    <p>{`执行以下命令重新修复启动分区：`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`grub2-install /dev/sda\n`}</code></pre>\n    <p>{`重启恢复正常。`}</p>\n    <h3>{`2. 启动记录和磁盘分区损坏`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`dd < /dev/zero >/dev/sda bs=1 count=510\n`}</code></pre>\n    <p>{`启动失败，进入到修复模式如下图：`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://i.loli.net/2019/11/16/K8tw5ZbJF6fPGH1.png\",\n        \"alt\": \"partition-table-damage.png\"\n      }}></img></p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`注意，这个时候已经不能通过 `}<inlineCode parentName=\"p\">{`chroot /mnt/sysimage`}</inlineCode>{` 切换到原来的 root 分区，因为分区信息也已经损坏。`}</p>\n    </blockquote>\n    <p>{`首先第一步是要修复启动分区表，可以借助 `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.cgsecurity.org/wiki/TestDisk\"\n      }}><strong parentName=\"a\">{`testdisk`}</strong></a>{` 工具。`}</p>\n    <p>{`因为系统已经不能启动，所以只能通过挂载光驱或 usb 的方式将 `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.cgsecurity.org/wiki/TestDisk\"\n      }}><strong parentName=\"a\">{`testdisk`}</strong></a>{` 工具挂载到修复模式，本篇中使用 `}<a parentName=\"p\" {...{\n        \"href\": \"https://gparted.sourceforge.io/livecd.php\"\n      }}><strong parentName=\"a\">{`gparted`}</strong></a>{` 的 live 镜像，这里面也包含了 testdisk 工具，当然还可以使用 `}<a parentName=\"p\" {...{\n        \"href\": \"https://en.altlinux.org/Rescue\"\n      }}><strong parentName=\"a\">{`ALT Linux`}</strong></a>{` 和 `}<a parentName=\"p\" {...{\n        \"href\": \"http://www.system-rescue-cd.org/Download/\"\n      }}><strong parentName=\"a\">{`systemrescuecd`}</strong></a>{` 或其他工具。`}</p>\n    <p>{`通过 testdisk 修复分区表很简单，基本就是下一步下一步的傻瓜式操作，如果有问题可以参考 `}<a parentName=\"p\" {...{\n        \"href\": \"(https://www.cgsecurity.org/wiki/TestDisk)\"\n      }}>{`官方的文档`}</a>{` 操作。`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://i.loli.net/2019/11/16/9aJx34mCfKRdL7G.png\",\n        \"alt\": \"testdisk-recovery-patition-table.png\"\n      }}></img></p>\n    <p>{`恢复了分区表后重启，再次进入修复模式，又见到了熟悉的 `}<inlineCode parentName=\"p\">{`chroot`}</inlineCode>{` 模式，重复上节操作，即可正常恢复系统。`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`有时执行 chroot 可能报错：`}</p>\n      <p parentName=\"blockquote\">{` `}<inlineCode parentName=\"p\">{`failed to run command '/bin/bash': No such file or directory`}</inlineCode></p>\n      <p parentName=\"blockquote\">{`这通常是由于在你的 chroot 环境中没有 /bin/bash 程序，或则缺少执行 /bin/bash 的库文件，可以通过 `}<inlineCode parentName=\"p\">{`ldd $( command -v bash )`}</inlineCode>{` 查看 bash 依赖哪些库文件，然后将这些文件 `}<inlineCode parentName=\"p\">{`mount -o bind`}</inlineCode>{` 到你的 chroot 环境中，或直接 copy 到 chroot 环境中。`}</p>\n    </blockquote>\n    <blockquote>\n      <p parentName=\"blockquote\">{`注意，如果启用了 SElinux，则还要安装 SELinux label，当然不安装，后面重启的时候系统会自动生成，但会根据文件系统的大小花费一定的时间。`}</p>\n    </blockquote>\n    <h3>{`3. grub 损坏`}</h3>\n    <p>{`在之前的另一篇文章 `}<a parentName=\"p\" {...{\n        \"href\": \"www.google.com\"\n      }}>{`Linux 启动过程`}</a>{` 中讲到，服务器找到 MBR 的启动记录后，接着会使用 `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.gnu.org/software/grub/\"\n      }}><strong parentName=\"a\">{`grub`}</strong></a>{` 来加载内存初始镜像（initramfs`}<em parentName=\"p\">{`）和内核文件（vmlinuz`}</em>{`），那如果 `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.gnu.org/software/grub/\"\n      }}><strong parentName=\"a\">{`grub`}</strong></a>{` 损坏了如何修复呢？`}</p>\n    <p>{`删除 grub 文件，模拟 grub 损坏：`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`rm /boot/grub2/ -rf\n`}</code></pre>\n    <p>{`重启失败，进入 grub 命令行：`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://i.loli.net/2019/11/16/Glgu6YSonfjIbkm.png\",\n        \"alt\": \"grub2-damage.png\"\n      }}></img></p>\n    <p>{`退出 grub 命令行，进入修复模式：`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://i.loli.net/2019/11/16/IQ8dGRAwf1bosH6.png\",\n        \"alt\": \"boot-Record-damage.png\"\n      }}></img></p>\n    <p>{`执行以下命令恢复 grub：`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`chroot /mnt/sysimage\ngrub2-install /dev/sda   # 会重新生成 /boot/grub2/ 目录\ngrub2-mkconfig -o /boot/grub2/grub.cfg\n`}</code></pre>\n    <blockquote>\n      <p parentName=\"blockquote\">{`这里有个疑问，/boot/grub2/grub.cfg 文件是靠软件包 grub2-pc 生成的，但如果删除了 grub.cfg 文件，重新安装这个软件包并不会重新生成 grub.cfg 文件，有了解原因的还望不吝告知，留言或邮件都可以，谢谢。`}</p>\n    </blockquote>\n    <p>{`以上基本模拟了在 BIOS + MBR 基础上的启动记录损坏、启动分区表损坏、grub 损坏的场景并进行了修复，但在 UEFI + GPT 下，过程则不太一样。`}</p>\n    <h2>{`二、UEFI + GPT`}</h2>\n    <p>{`在 `}<a parentName=\"p\" {...{\n        \"href\": \"https://en.wikipedia.org/wiki/Unified_Extensible_Firmware_Interface\"\n      }}><strong parentName=\"a\">{`UEFI`}</strong></a>{` + `}<a parentName=\"p\" {...{\n        \"href\": \"https://en.wikipedia.org/wiki/GUID_Partition_Table\"\n      }}><strong parentName=\"a\">{`GPT`}</strong></a>{` 的启动过程中，在服务器开机自检 (POST) 完成后，就会加载 `}<a parentName=\"p\" {...{\n        \"href\": \"https://en.wikipedia.org/wiki/EFI_system_partition\"\n      }}><strong parentName=\"a\">{`ESP`}</strong></a>{`(EFI System Partition) 的 UEFI 固件，UEFI 固件会初始化启动要用的硬件，并读取其引导管理器以确定从何处（比如，从哪个硬盘及分区）加载哪个 UEFI 应用。所以 UEFI 的启动信息都在 `}<a parentName=\"p\" {...{\n        \"href\": \"https://en.wikipedia.org/wiki/EFI_system_partition\"\n      }}><strong parentName=\"a\">{`ESP`}</strong></a>{` 中（通常是 `}<inlineCode parentName=\"p\">{`/boot/efi`}</inlineCode>{`）。`}</p>\n    <p>{`下面主要模拟 ESP 损坏和 GPT 损坏的场景。`}</p>\n    <h3>{`1. ESP 损坏`}</h3>\n    <p>{`因为 ESP 本身就是一个系统分区，所以它的损坏又可以分为两种情况：`}</p>\n    <ul>\n      <li parentName=\"ul\">{`ESP 分区里面的文件损坏或丢失`}</li>\n      <li parentName=\"ul\">{`ESP 分区信息损坏`}</li>\n    </ul>\n    <p>{`ESP 分区信息本身就包含在 GPT 分区信息里面，所以第二种情况其实就是属于 GPT 损坏的场景，所以这里只演示 ESP 分区里面的文件损坏或丢失。`}</p>\n    <p>{`删除 EFI 目录，模拟 EFI 文件丢失：`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`[root@base ~]# ls /boot/efi\nEFI\n[root@base ~]# rm /boot/efi -rf\nrm: 无法删除 \"/boot/efi\": 设备或资源忙\n[root@base ~]# ls /boot/efi\n`}</code></pre>\n    <p>{`重启系统，无法正常启动。`}</p>\n    <p>{`进入修复模式，因为分区信息还在，所以可以 chroot 到原来的根文件系统，但 `}<inlineCode parentName=\"p\">{`/boot/efi`}</inlineCode>{` 目录下没有 EFI、grub 等文件。`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://i.loli.net/2019/11/20/IKSQAHPpgrLMVb6.png\",\n        \"alt\": \"delete-grub-efi.png\"\n      }}></img></p>\n    <p>{`所以只要恢复 ESP 文件系统下的那些 `}<inlineCode parentName=\"p\">{`.efi`}</inlineCode>{` 文件就可以修复。`}</p>\n    <p>{`首先切换到原来的系统环境：`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`chroot /mnt/sysimage\n`}</code></pre>\n    <p>{`挂载光驱，重新安装 `}<inlineCode parentName=\"p\">{`grub2-efi`}</inlineCode>{` 和 `}<inlineCode parentName=\"p\">{`shim`}</inlineCode>{` 软件包。`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://i.loli.net/2019/11/20/6FISRl4iYxry8MW.png\",\n        \"alt\": \"reinstall-efi-shim.png\"\n      }}></img></p>\n    <p>{`然后再重新生成 `}<inlineCode parentName=\"p\">{`grub.cfg`}</inlineCode>{` 配置文件，不然会进入到 grub 命令行接口界面。`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`grub2-mkconfig -o /boot/efi/EFI/redhat/grub.cfg\n`}</code></pre>\n    <blockquote>\n      <p parentName=\"blockquote\">{`作用类似于 BIOS + MBR 下的 grub2-install 命令`}</p>\n    </blockquote>\n    <p>{`重启系统，即可正常启动。`}</p>\n    <h3>{`2. GPT 损坏`}</h3>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://en.wikipedia.org/wiki/GUID_Partition_Table\"\n      }}><strong parentName=\"a\">{`GPT`}</strong></a>{` 分区表类型中，是以 `}<a parentName=\"p\" {...{\n        \"href\": \"https://en.wikipedia.org/wiki/Logical_block_addressing\"\n      }}><strong parentName=\"a\">{`LBA`}</strong></a>{`(Logical Block Address，逻辑块寻址) 来定义扇区的位置，比如 LBA0 LBA1 等。`}</p>\n    <p>{`本篇结合 gpt 结构图来分别说明：`}</p>\n    <ul>\n      <li parentName=\"ul\">{`LBA0 的损坏`}</li>\n      <li parentName=\"ul\">{`LBA1 的损坏`}</li>\n      <li parentName=\"ul\">{`LBA2 ~ LBA33 的损坏`}</li>\n    </ul>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://i.loli.net/2019/11/17/gYL78ydEM4UveHa.png\",\n        \"alt\": \"gpt-wiki.png\"\n      }}></img></p>\n    <h4>{`1. LBA0`}</h4>\n    <p>{`LBA0 是一个保护性 MBR，是出于兼容性而存储了一份传统的 `}<a parentName=\"p\" {...{\n        \"href\": \"https://en.wikipedia.org/wiki/Master_boot_record#PTE\"\n      }}>{`MBR`}</a>{`。`}</p>\n    <p>{`至于每个 LBA 对应的物理空间是多少，可以通过 `}<inlineCode parentName=\"p\">{`parted`}</inlineCode>{` 或 `}<inlineCode parentName=\"p\">{`blockdev`}</inlineCode>{` 命令查看：`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`root@base ~]# parted\nGNU Parted 3.1\n使用 /dev/sda\nWelcome to GNU Parted! Type 'help' to view a list of commands.\n(parted) print\nModel: VMware, VMware Virtual S (scsi)\nDisk /dev/sda: 10.7GB\nSector size (logical/physical): 512B/512B\nPartition Table: gpt\nDisk Flags:\n\nNumber  Start   End     Size    File system  Name                  标志\n 1      1049kB  211MB   210MB   fat16        EFI System Partition  启动\n 2      211MB   1285MB  1074MB  xfs\n 3      1285MB  7729MB  6445MB                                     lvm\n\n`}</code></pre>\n    <p>{`或`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`blockdev --getss  /dev/sda\n`}</code></pre>\n    <p>{`从以上信息中可以看出：`}</p>\n    <ul>\n      <li parentName=\"ul\">{`分区表类型为 gpt(使用 fdisk 命令也可查看分区表类型)`}</li>\n      <li parentName=\"ul\">{`逻辑 / 物理扇区大小 512B`}</li>\n      <li parentName=\"ul\">{`启动类型 EFI`}</li>\n    </ul>\n    <p>{`我们先看看 sda 的 LBA0(扇区 1，也就是 MBR) 存储的内容：`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`[root@base ~]# xxd -g1 -l 512 /dev/sda\n0000000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0000010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0000020: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0000030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0000040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0000050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0000060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0000070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0000080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0000090: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n00000a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n00000b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n00000c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n00000d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n00000e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n00000f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0000100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0000110: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0000120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0000130: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0000140: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0000150: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0000160: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0000170: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0000180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0000190: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n00001a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n00001b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n00001c0: 01 00 ee fe ff ff 01 00 00 00 ff ff 3f 01 00 00  ............?...\n00001d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n00001e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n00001f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 55 aa  ..............U.\n`}</code></pre>\n    <blockquote>\n      <p parentName=\"blockquote\">{`查看 16 进制的工具很多，在 Windows 上大多数是用 `}<inlineCode parentName=\"p\">{`winhex`}</inlineCode>{`，Linux 可以用 `}<inlineCode parentName=\"p\">{`wxHexEditor`}</inlineCode>{`、`}<inlineCode parentName=\"p\">{`010 Editor`}</inlineCode>{`、`}<inlineCode parentName=\"p\">{`MadEdit`}</inlineCode>{` 、`}<inlineCode parentName=\"p\">{`Xxd`}</inlineCode>{`、`}<inlineCode parentName=\"p\">{`Hexedit`}</inlineCode>{`、`}<inlineCode parentName=\"p\">{`Hexyl`}</inlineCode>{`、`}<inlineCode parentName=\"p\">{`Ghex`}</inlineCode>{`、`}<inlineCode parentName=\"p\">{`Bless`}</inlineCode>{`、`}<inlineCode parentName=\"p\">{`Okteta`}</inlineCode>{` 等等。`}</p>\n    </blockquote>\n    <p>{`对照 `}<a parentName=\"p\" {...{\n        \"href\": \"https://en.wikipedia.org/wiki/Master_boot_record\"\n      }}><strong parentName=\"a\">{`MBR`}</strong></a>{` 结构图：`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://i.loli.net/2019/11/18/YS9bAHhvcC5jJzP.png\",\n        \"alt\": \"mbr-wiki.png\"\n      }}></img></p>\n    <p>{`可以看到，`}<a parentName=\"p\" {...{\n        \"href\": \"https://en.wikipedia.org/wiki/Master_boot_record\"\n      }}><strong parentName=\"a\">{`MBR`}</strong></a>{` 中的 BootCode 全为 0（前 446 字节），分区表中也只有分区表 1 有数据：`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`00 00 01 00 ee fe ff ff 01 00 00 00 ff ff 3f 01\n`}</code></pre>\n    <p>{`再对比 MBR 的`}<a parentName=\"p\" {...{\n        \"href\": \"https://en.wikipedia.org/wiki/Master_boot_record#Sector_layout\"\n      }}>{`分区表条目结构图`}</a>{`：`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://i.loli.net/2019/11/17/gti78LyNPez16Bu.png\",\n        \"alt\": \"Layout-of-one-16-byte-partition-entry.png\"\n      }}></img></p>\n    <p>{`拆解分区表 1 的内容：`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`00 00 01 00 ee fe ff ff 01 00 00 00 ff ff 3f 01\n`}</code></pre>\n    <p>{`其中：`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`值`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`解释`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`0x00`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`代表此分区激活状态(80 才是代表激活)`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`0x00`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`起始 Cylinder`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`0x01`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`起始 Head`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`0x00`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`起始 Sector`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`0xee`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`分区类型`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`0xfe`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`结束 Cylinder`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`0xff`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`结束 Head`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`0xff`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`结束 Sector`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`0x01000000`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`起始扇区的 LBA`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`0xffff3f01`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`此分区的扇区数`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <blockquote>\n      <p parentName=\"blockquote\">{`由于 inter CPU 采用的是 `}<a parentName=\"p\" {...{\n          \"href\": \"https://baike.baidu.com/item/Little-Endian/4118225?fr=aladdin\"\n        }}>{`little endian`}</a>{`，所以在小于 2T 的磁盘上，分区总的字节数应该是 Hex 的 013fffff = Decimal 20971519 * 512，在大于 2T 的磁盘上，这个数始终算出来是 2T。 `}</p>\n    </blockquote>\n    <p><inlineCode parentName=\"p\">{`0xee`}</inlineCode>{` 的分区类型的作用是告诉其他 MBR 磁盘工具，这个磁盘是使用的 GPT 分区表，不会让它们识别为这是一块未分区的磁盘，并拒绝它们对磁盘进行操作，从而避免因为意外而删除分区的风险。`}</p>\n    <p>{`现在通过几种不同的方式来模拟 LAB 0 中 MBR 分区表信息损坏的场景，看看会发生什么：`}</p>\n    <ul>\n      <li parentName=\"ul\">{`1）dd < /dev/zero >/dev/sda bs=1 count=446`}</li>\n      <li parentName=\"ul\">{`2）dd < /dev/zero >/dev/sda bs=1 count=450`}</li>\n      <li parentName=\"ul\">{`3）dd < /dev/zero >/dev/sda bs=1 count=451`}</li>\n    </ul>\n    <p>{`限于篇幅原因，这里只给出实验结果：`}</p>\n    <ul>\n      <li parentName=\"ul\">{`1）的情况下，系统能正常重启`}</li>\n      <li parentName=\"ul\">{`2）的情况下，系统能正常重启`}</li>\n      <li parentName=\"ul\">{`3）的情况下，系统不能正常重启，但系统可以认到一个空的分区表`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{}}>{`[root@base ~]# xxd -g1 -l 1 -s 450 /dev/sda  # 取出第 450 个字节\n00001c2: ee                                               .\n[root@base ~]# dd < /dev/zero >/dev/sda bs=1 count=451 # 清除前 451 个 字节\n记录了 451+0 的读入\n记录了 451+0 的写出\n451 字节 (451 B) 已复制，0.00159757 秒，282 kB / 秒\n[root@base ~]# xxd -g1 -l 1 -s 450 /dev/sda\n00001c2: 00                                               .\n[root@base ~]#\n`}</code></pre>\n    <p><strong parentName=\"p\">{`其实这也间接证明了第 451 个 字节，分区表类型 `}<inlineCode parentName=\"strong\">{`0xee`}</inlineCode>{` 的作用，一旦清除了这个字节，系统就不能识别到这个磁盘是使用的 GPT 分区表，从而找不到有效分区（此时系统还能认到一个分区，因为 LBA0 里面本身就包含了一个分区表条目），也就无法正常启动，但清除前面的 450 个字节是不会影响磁盘的。`}</strong></p>\n    <p>{`那这种情况下如何修复？`}</p>\n    <p>{`还是进入修复模式，因为系统误识别这个是 MBR 分区表，但又读不到 bootcode 和有效的分区表，所以还是无法使用 `}<inlineCode parentName=\"p\">{`chroot`}</inlineCode>{` 命令进入原来的根目录环境。我们可以在修复模式下使用十六进制编辑工具 `}<inlineCode parentName=\"p\">{`hexedit`}</inlineCode>{`（当然也可以使用 `}<inlineCode parentName=\"p\">{`xdd`}</inlineCode>{`、`}<inlineCode parentName=\"p\">{`hexyl`}</inlineCode>{`、`}<inlineCode parentName=\"p\">{`ghex`}</inlineCode>{`、`}<inlineCode parentName=\"p\">{`okteta`}</inlineCode>{`、`}<inlineCode parentName=\"p\">{`wxhexeditor`}</inlineCode>{`、`}<inlineCode parentName=\"p\">{`hexcurse`}</inlineCode>{`、`}<inlineCode parentName=\"p\">{`hexer`}</inlineCode>{` 等工具）手工编辑相应的字节，使系统识别到这个磁盘是 GPT 格式的分区表：`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`hexedit -s --color /dev/sda\n`}</code></pre>\n    <p>{`然后将第 451 个字节修改为 `}<inlineCode parentName=\"p\">{`ee`}</inlineCode>{` 即可。`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`如果是清空了 LBA0 的全部 512 个字节，则还需修改 LBA 的起始信息，也就是将第 455、456、457 字节修改为 `}<inlineCode parentName=\"p\">{`010000`}</inlineCode>{`，其余信息则无所谓。`}</p>\n    </blockquote>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://i.loli.net/2019/11/18/1vnrSbTjHg2xImf.png\",\n        \"alt\": \"hexedit-ee-lba.png\"\n      }}></img></p>\n    <p>{`重启系统，可以正常启动。`}</p>\n    <h4>{`2. LBA1`}</h4>\n    <p>{`还是看上面的 GPT 分区结构图，LBA1 是 `}<a parentName=\"p\" {...{\n        \"href\": \"https://en.wikipedia.org/wiki/GUID_Partition_Table#Partition_table_header_(LBA_1)\"\n      }}>{`GPT 头`}</a>{`，其格式如下：`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://i.loli.net/2019/11/19/xqY4BR8jQhIHr2w.png\",\n        \"alt\": \"GPT-header-format.png\"\n      }}></img></p>\n    <p>{`读取 LBA1 的 512 个字节：`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`[root@base ~]# xxd -g1 -l 512 -s 512 /dev/sda\n0000200: 45 46 49 20 50 41 52 54 00 00 01 00 5c 00 00 00  EFI PART....\\\\...\n0000210: fc 3c 8a 77 00 00 00 00 01 00 00 00 00 00 00 00  .<.w............\n0000220: ff ff 3f 01 00 00 00 00 22 00 00 00 00 00 00 00  ..?.....\".......\n0000230: de ff 3f 01 00 00 00 00 73 31 0f 65 2e 01 a5 49  ..?.....s1.e...I\n0000240: a2 02 70 48 3b d6 95 05 02 00 00 00 00 00 00 00  ..pH;...........\n0000250: 80 00 00 00 80 00 00 00 52 b2 04 ae 00 00 00 00  ........R.......\n0000260: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0000270: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0000280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0000290: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n00002a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n00002b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n00002c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n00002d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n00002e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n00002f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0000300: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0000310: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0000320: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0000330: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0000340: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0000350: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0000360: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0000370: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0000380: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0000390: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n00003a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n00003b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n00003c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n00003d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n00003e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n00003f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n`}</code></pre>\n    <p>{`对应拆解 GPT 头结构：`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`相对字节偏移量(十六进制)`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`字节数`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`值`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`说明(整数皆以 little endian 方式表示)`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`00～07`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`8`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`45 46 49 20 50 41 52 54`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`GPT 头签名，(ASCII 码为 \"EFI PART\")`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`08～0B`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`4`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`00 00 01 00`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`版本号，目前是 1.0 版`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`0C～0F`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`4`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`5c 00 00 00`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`GPT 头的大小(字节数)，也就是 92 字节。`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`10～13`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`4`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`fc 3c 8a 77`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`GPT 头 CRC 校验和(计算时把这个字段本身看做零值)`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`14～17`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`4`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`00 00 00 00`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`保留，必须为 0`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`18～1F`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`8`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`01 00 00 00 00 00 00 00`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`EFI 信息区 (GPT 头) 的起始扇区号，也就是 LBA1。`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`20～27`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`8`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`ff ff 3f 01 00 00 00 00`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`EFI 信息区 (GPT 头) 备份位置的扇区号，也就是 EFI 区域结束扇区号。通常是整个磁盘最末一个扇区。`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`28～2F`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`8`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`22 00 00 00 00 00 00 00`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`GPT 分区区域的起始扇区号，也即是 LBA34。`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`30～37`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`8`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`de ff 3f 01 00 00 00 00`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`GPT 分区区域的结束扇区号，通常是倒数第 34 扇区。`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`38～47`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`16`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`73 31 0f 65 2e 01 a5 49 a2 02 70 48 3b d6 95 05`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`磁盘 GUID(全球唯一标识符，与 UUID 是同义词)`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`48～4F`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`8`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`02 00 00 00 00 00 00 00`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`分区表起始扇区号，也就是 LBA2。`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`50～53`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`4`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`80 00 00 00`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`分区表总项数，通常限定为，也就是 128 个。`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`54～57`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`4`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`80 00 00 00`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`每个分区表项占用字节数，也就是 128 字节。`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`58～5B`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`4`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`52 b2 04 ae`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`分区表 CRC 校验和`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`5C～*`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`*`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`保留，通常是全零填充`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`可以看出 GPT 头中主要包含了磁盘的一些定义内容，如果清除掉 LBA1，系统能不能启动呢？`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`dd < /dev/zero >/dev/sda seek=512 bs=1 count=512\n`}</code></pre>\n    <p>{`实验结果是，系统完全可以正常启动，而且又会恢复成初始的值。探其原因，其实可以在上面的 GPT 分区结构图中发现，原来 GPT 头信息还在最后一个扇区中备份了一份，所以即使清空掉 LBA1，系统也不受影响，但如果把最后一个 LBA 也清空掉，那系统就无法启动了（其实只要清空前 8 个字节，系统都无法启动）。`}</p>\n    <p>{`先看看最后一个 LBA 的内容：`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`[root@base ~]# xxd -g1 -l 512 -s $((\\`blockdev --getsz /dev/sda\\` * 512 - 512)) /dev/sda\n27ffffe0045 46 49 20 50 41 52 54 00 00 01 00 5c 00 00 00  EFI PART....\\\\...\n27ffffe1051 ef 04 c8 00 00 00 00 ff ff 3f 01 00 00 00 00  Q.........?.....\n27ffffe2001 00 00 00 00 00 00 00 22 00 00 00 00 00 00 00  ........\".......\n27ffffe30de ff 3f 01 00 00 00 00 73 31 0f 65 2e 01 a5 49  ..?.....s1.e...I\n27ffffe40a2 02 70 48 3b d6 95 05 df ff 3f 01 00 00 00 00  ..pH;.....?.....\n27ffffe5080 00 00 00 80 00 00 00 52 b2 04 ae 00 00 00 00  ........R.......\n27ffffe6000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n27ffffe7000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n27ffffe8000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n27ffffe9000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n27ffffea000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n27ffffeb000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n27ffffec000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n27ffffed000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n27ffffee000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n27ffffef000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n27fffff0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n27fffff1000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n27fffff2000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n27fffff3000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n27fffff4000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n27fffff5000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n27fffff6000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n27fffff7000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n27fffff8000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n27fffff9000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n27fffffa000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n27fffffb000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n27fffffc000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n27fffffd000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n27fffffe000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n27ffffff000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n`}</code></pre>\n    <p>{`对比 LBA0，两者一模一样。`}</p>\n    <p>{`清除 LAB0 的前 8 个字节和最后一个 LBA：`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`dd < /dev/zero >/dev/sda seek=512 bs=1 count=8\ndd < /dev/zero >/dev/sda count=512 bs=1 seek=$((\\`blockdev --getsz /dev/sda\\` * 512 - 512))\n`}</code></pre>\n    <p>{`重启系统，无法启动。`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`操作前一定要备份。`}</p>\n    </blockquote>\n    <h4>{`3. LBA2 ~ LBA33`}</h4>\n    <p>{`接着再来看看分区表，还是根据 GPT 分区结构图，分区表一般是占用了 LBA2 - LBA33，这 32 个 LBA 里面包含了所有的分区表信息，但 GPT 的规范定义里面并没有定义一个分区条目占用多少个 LBA，所有不太方便单独找出某个分区的信息，这里以我实验环境为例，来看看 LBA2 - LBA33 里面到底包含了哪些信息。`}</p>\n    <p>{`由于后面都是 0，所以我只截取了前面 288 个字节：`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`[root@base ~]# xxd -g1 -l 288 -s 1024 /dev/sda\n0000400: 28 73 2a c1 1f f8 d2 11 ba 4b 00 a0 c9 3e c9 3b  (s*......K...>.;\n0000410: cf ba f1 85 2a 4e 81 4b a1 0d b4 4e 4f 41 b9 e8  ....*N.K...NOA..\n0000420: 00 08 00 00 00 00 00 00 ff 47 06 00 00 00 00 00  .........G......\n0000430: 00 00 00 00 00 00 00 00 45 00 46 00 49 00 20 00  ........E.F.I. .\n0000440: 53 00 79 00 73 00 74 00 65 00 6d 00 20 00 50 00  S.y.s.t.e.m. .P.\n0000450: 61 00 72 00 74 00 69 00 74 00 69 00 6f 00 6e 00  a.r.t.i.t.i.o.n.\n0000460: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0000470: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0000480: a2 a0 d0 eb e5 b9 33 44 87 c0 68 b6 b7 26 99 c7  ......3D..h..&..\n0000490: 53 4e 33 58 50 0c c6 47 8f 9f 3c ef 90 45 17 27  SN3XP..G..<..E.'\n00004a0: 00 48 06 00 00 00 00 00 ff 47 26 00 00 00 00 00  .H.......G&.....\n00004b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n00004c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n00004d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n00004e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n00004f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n0000500: 79 d3 d6 e6 07 f5 c2 44 a2 3c 23 8f 2a 3d f9 28  y......D.<#.*=.(\n0000510: 20 06 80 7a e0 15 72 4a 92 26 eb f0 48 3f 30 b9   ..z..rJ.&..H?0.\n`}</code></pre>\n    <p>{`参考维基 `}<a parentName=\"p\" {...{\n        \"href\": \"https://en.wikipedia.org/wiki/GUID_Partition_Table#Partition_entries_(LBA_2%E2%80%9333)\"\n      }}>{`GPT 分区表条目`}</a>{`：`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://i.loli.net/2019/11/19/fAg3t9kdvurJT5e.png\",\n        \"alt\": \"GUID-partition-entry-format.png\"\n      }}></img></p>\n    <p>{`再结合系统上的分区信息：`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`[root@base ~]# blkid -o export -p /dev/sda[1-3]\nDEVNAME=/dev/sda1\nSEC_TYPE=msdos\nUUID=A985-FEAE\nVERSION=FAT16\nTYPE=vfat\nUSAGE=filesystem\nPART_ENTRY_SCHEME=gpt\nPART_ENTRY_NAME=EFI System Partition\nPART_ENTRY_UUID=85f1bacf-4e2a-4b81-a10d-b44e4f41b9e8\nPART_ENTRY_TYPE=c12a7328-f81f-11d2-ba4b-00a0c93ec93b\nPART_ENTRY_NUMBER=1\nPART_ENTRY_OFFSET=2048\nPART_ENTRY_SIZE=409600\nPART_ENTRY_DISK=8:0\n\nDEVNAME=/dev/sda2\nUUID=a13803e2-b4bb-4039-8d72-afbc21ecae55\nTYPE=xfs\nUSAGE=filesystem\nPART_ENTRY_SCHEME=gpt\nPART_ENTRY_UUID=58334e53-0c50-47c6-8f9f-3cef90451727\nPART_ENTRY_TYPE=ebd0a0a2-b9e5-4433-87c0-68b6b72699c7\nPART_ENTRY_NUMBER=2\nPART_ENTRY_OFFSET=411648\nPART_ENTRY_SIZE=2097152\nPART_ENTRY_DISK=8:0\n\nDEVNAME=/dev/sda3\nUUID=9SqofC-60Gm-ibCH-XJ3f-m2FR-ESRy-zeHAuA\nVERSION=LVM2 001\nTYPE=LVM2_member\nUSAGE=raid\nPART_ENTRY_SCHEME=gpt\nPART_ENTRY_UUID=7a800620-15e0-4a72-9226-ebf0483f30b9\nPART_ENTRY_TYPE=e6d6d379-f507-44c2-a23c-238f2a3df928\nPART_ENTRY_NUMBER=3\nPART_ENTRY_OFFSET=2508800\nPART_ENTRY_SIZE=12587008\nPART_ENTRY_DISK=8:0\n`}</code></pre>\n    <p>{`对比两个结果，可以找到的信息包括：`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`值`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`解释`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`C12A7328-F81F-11D2-BA4B-00A0C93EC93B`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`用 GUID 表示的分区类型：EFI System partition`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`EBD0A0A2-B9E5-4433-87C0-68B6B72699C7`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`用 GUID 表示的分区类型：Windows Basic data partition(`}<a parentName=\"td\" {...{\n              \"href\": \"https://en.wikipedia.org/wiki/GUID_Partition_Table#cite_note-linwin-41\"\n            }}>{`参考这里`}</a>{`了解为什么是 Windows)`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`e6d6d379-f507-44c2-a23c-238f2a3df928`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`用 GUID 表示的分区类型：Linux Logical Volume Manager (LVM) partition`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`85f1bacf-4e2a-4b81-a10d-b44e4f41b9e8`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`分区 GUID`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`58334e53-0c50-47c6-8f9f-3cef90451727`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`分区 GUID`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`7a800620-15e0-4a72-9226-ebf0483f30b9`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`分区 GUID`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`2048 / 409600`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`分区 1 起始 / 结束扇区号（LBA）：80 / 647ff`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`411648 / 2097152`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`分区 2 起始 / 结束扇区号（LBA）：64800 / 2647ff`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <blockquote>\n      <p parentName=\"blockquote\">{`计算方法：起始 LBA = ./conhex.sh -d2x `}<inlineCode parentName=\"p\">{`echo $(( 411648 ))`}</inlineCode>{`，结束 LBA = ./conhex.sh -d2x `}<inlineCode parentName=\"p\">{`echo $(( 411648+2097152-1 ))`}</inlineCode></p>\n    </blockquote>\n    <p>{`到这里就基本说完了整个分区上的内容，因为 LBA-1 ~ LBA-33 的内容是 LBA1 ~ LBA33 的备份，剩下 LBA34 ~ LBA-34 是真正分配个分区存储数据的位置。`}</p>\n    <h4>{`4. 总结`}</h4>\n    <p>{`了解了 GPT 分区的结构后，总结的修复方法：`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`故障`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`修复`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`LBA0 损坏`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`手动修改 LAB0 的第 451、455、456、457 字节`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`LBA1 损坏`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`从 LBA1 备份恢复`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`LBA2 ~ LBA33 损坏`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`从 LBA2 ~ LBA33 备份恢复`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`所有 LBA 备份同时损坏`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`根据日常的备份信息，手工去修改对应 LBA 中的字节`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`实在不知道怎么去手动修复，试试用其他工具来自动恢复，比如 `}<inlineCode parentName=\"p\">{`gpart`}</inlineCode>{`、`}<inlineCode parentName=\"p\">{`gdisk`}</inlineCode>{`、`}<inlineCode parentName=\"p\">{`sgdisk`}</inlineCode>{` 等。`}</p>\n    <h2>{`附录`}</h2>\n    <blockquote>\n      <ol parentName=\"blockquote\">\n        <li parentName=\"ol\">{`十六进制和十进制互相转换的 shell 脚本 conhex.sh`}</li>\n      </ol>\n    </blockquote>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`#!/bin/bash\n\n# validate sufficient input\ntest -n \"$1\" && test -n \"$2\" || {\n    printf \"\\\\n error: insufficient input \\\\n usage: %s -d2x DecimalNum\\\\n        %s -x2d HexDecimalNum\\\\n\" \"\\${0//*\\\\//}\" \"\\${0//*\\\\//}\"\n\n    exit 1\n}\n\n# Convert hexadecimal to decimal\n\n# with bash:\n# $ echo $((16#FF))\n\n# with bc:\n# $ echo \"ibase=16; FF\" | bc\n\n# with perl:\n# $ perl -le 'print hex(\"FF\");'\n\n# with printf :\n# $ printf \"%d\\\\n\" 0xFF\n\n# with python:\n# $ python -c 'print(int(\"FF\", 16))'\nxd() {\n    printf \"16->10 $(( 0x\\${1} ))\\\\n\\\\n\"\n}\n\n# Convert decimal to hexadecimal\ndx() {\n    printf \"10->16 %x\\\\n\\\\n\" \\${1}\n}\n\n# Convert string to ASCII\n# printf \"%d\\\\n\" \"'A\"\n\ncase \"\\${1}\" in\n    -d2x)\n        dx $2\n        ;;\n    -x2d)\n        xd $2\n        ;;\n    -h)\n        printf \"usage: %s -d2x DecimalNum\\\\n               -x2d HexDecimalNum\\\\n\" \"\\${0//*\\\\//}\"\n        ;;\n    *)\n        echo \"Invalid Paramter: \\${1}, must be -d2x or -x2d\"\n        exit;\nesac\n`}</code></pre>\n    <blockquote>\n      <ol parentName=\"blockquote\" {...{\n        \"start\": 2\n      }}>\n        <li parentName=\"ol\">{`不重启识别新分区`}</li>\n      </ol>\n    </blockquote>\n    <pre><code parentName=\"pre\" {...{}}>{`partx -av /dev/vda\n`}</code></pre>\n    <blockquote>\n      <ol parentName=\"blockquote\" {...{\n        \"start\": 3\n      }}>\n        <li parentName=\"ol\"><a parentName=\"li\" {...{\n            \"href\": \"https://www.lulinux.com/jiaocheng/190.html\"\n          }}>{`利用 python 获取磁盘分区的起始扇区的 LBA 以及磁盘分区大小`}</a></li>\n      </ol>\n    </blockquote>\n    <blockquote>\n      <ol parentName=\"blockquote\" {...{\n        \"start\": 4\n      }}>\n        <li parentName=\"ol\">{`GPT 和 MBR 下的备份`}</li>\n      </ol>\n    </blockquote>\n    <h6>{`MBR 备份和恢复`}</h6>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`# 备份 MBR\ndd if=/dev/sda of=/backup/mbr.backup  bs=1  count=512\n# 恢复 MBR\ndd if=/backup/mbr.backup  of=/dev/sda\n`}</code></pre>\n    <h6>{`分区表备份和恢复`}</h6>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`# 备份分区表\ndd if=/dev/sda of=/backup/partition_table.bak bs=1 count=64 skip=446\n# 恢复分区表\ndd if=/backup/partition_table.bak of=/dev/sda bs=1 seek=446\n`}</code></pre>\n    <h6>{`GPT 备份和恢复`}</h6>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`# 备份 Protective MBR\ndd if=/dev/sda of=gpt-mbr bs=512 count=1\n# 恢复 Protective MBR\ndd if=gpt-mbr of=/dev/sda bs=512 count=1\n\n# 备份完整的 GPT 分区表\ndd if=/dev/sda of=gpt-partition bs=512 count=34\n# 恢复完整的 GPT 分区表\ndd if=gpt--partition of=/dev/sda bs=512 count=34\n\n# 仅备份 GPT 头和 GPT 分区\ndd if=/dev/sda of=gpt-partition bs=512 skip=1 count=33\n# 恢复单独的 GPT 分区信息\ndd if=gpt-partition of=/dev/sda bs=512 skip=1 seek=1 count=33\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}